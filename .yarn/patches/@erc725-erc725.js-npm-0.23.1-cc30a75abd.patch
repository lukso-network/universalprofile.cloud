diff --git a/build/main/src/index.d.ts b/build/main/src/index.d.ts
index c2dbc8fc3dfd7aa37a9b269d74670926223304ec..83a89fb942e462c66ace9cb8befa91d12ac71bcd 100644
--- a/build/main/src/index.d.ts
+++ b/build/main/src/index.d.ts
@@ -12,6 +12,8 @@ export { encodeKeyName } from './lib/encodeKeyName';
 export { decodeMappingKey } from './lib/decodeMappingKey';
 export { decodeValueType, decodeValueContent } from './lib/encoder';
 export { getDataFromExternalSources } from './lib/getDataFromExternalSources';
+export declare function decodePermissions(permissionHex: string): Permissions;
+export declare function encodePermissions(permissions: Permissions): string;
 /**
  * This package is currently in early stages of development, <br/>use only for testing or experimentation purposes.<br/>
  *
@@ -181,32 +183,7 @@ export declare class ERC725 {
      * @param permissionHex The permission hexadecimal value to be decoded.
      * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
      */
-    static decodePermissions(permissionHex: string): {
-        CHANGEOWNER: boolean;
-        ADDCONTROLLER: boolean;
-        EDITPERMISSIONS: boolean;
-        ADDEXTENSIONS: boolean;
-        CHANGEEXTENSIONS: boolean;
-        ADDUNIVERSALRECEIVERDELEGATE: boolean;
-        CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
-        REENTRANCY: boolean;
-        SUPER_TRANSFERVALUE: boolean;
-        TRANSFERVALUE: boolean;
-        SUPER_CALL: boolean;
-        CALL: boolean;
-        SUPER_STATICCALL: boolean;
-        STATICCALL: boolean;
-        SUPER_DELEGATECALL: boolean;
-        DELEGATECALL: boolean;
-        DEPLOY: boolean;
-        SUPER_SETDATA: boolean;
-        SETDATA: boolean;
-        ENCRYPT: boolean;
-        DECRYPT: boolean;
-        SIGN: boolean;
-        EXECUTE_RELAY_CALL: boolean;
-        ERC4337_PERMISSION: boolean;
-    };
+    static decodePermissions(permissionHex: string): Permissions;
     /**
      * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
      *
@@ -214,32 +191,7 @@ export declare class ERC725 {
      * @param permissionHex The permission hexadecimal value to be decoded.
      * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
      */
-    decodePermissions(permissionHex: string): {
-        CHANGEOWNER: boolean;
-        ADDCONTROLLER: boolean;
-        EDITPERMISSIONS: boolean;
-        ADDEXTENSIONS: boolean;
-        CHANGEEXTENSIONS: boolean;
-        ADDUNIVERSALRECEIVERDELEGATE: boolean;
-        CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
-        REENTRANCY: boolean;
-        SUPER_TRANSFERVALUE: boolean;
-        TRANSFERVALUE: boolean;
-        SUPER_CALL: boolean;
-        CALL: boolean;
-        SUPER_STATICCALL: boolean;
-        STATICCALL: boolean;
-        SUPER_DELEGATECALL: boolean;
-        DELEGATECALL: boolean;
-        DEPLOY: boolean;
-        SUPER_SETDATA: boolean;
-        SETDATA: boolean;
-        ENCRYPT: boolean;
-        DECRYPT: boolean;
-        SIGN: boolean;
-        EXECUTE_RELAY_CALL: boolean;
-        ERC4337_PERMISSION: boolean;
-    };
+    decodePermissions(permissionHex: string): Permissions;
     /**
      * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
      *
diff --git a/build/main/src/index.js b/build/main/src/index.js
index a3ec93390a29420da9de371e4f610bca88af47d2..cb53185546add2ee2a55cf147bf13ff14f9e4b2f 100644
--- a/build/main/src/index.js
+++ b/build/main/src/index.js
@@ -16,7 +16,7 @@ var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.ERC725 = exports.getDataFromExternalSources = exports.decodeValueContent = exports.decodeValueType = exports.decodeMappingKey = exports.encodeKeyName = exports.decodeData = exports.encodeArrayKey = exports.encodeData = void 0;
+exports.ERC725 = exports.encodePermissions = exports.decodePermissions = exports.getDataFromExternalSources = exports.decodeValueContent = exports.decodeValueType = exports.decodeMappingKey = exports.encodeKeyName = exports.decodeData = exports.encodeArrayKey = exports.encodeData = void 0;
 /**
  * @file index.ts
  * @author Robert McLeod <@robertdavid010>
@@ -52,6 +52,59 @@ Object.defineProperty(exports, "decodeValueType", { enumerable: true, get: funct
 Object.defineProperty(exports, "decodeValueContent", { enumerable: true, get: function () { return encoder_2.decodeValueContent; } });
 var getDataFromExternalSources_2 = require("./lib/getDataFromExternalSources");
 Object.defineProperty(exports, "getDataFromExternalSources", { enumerable: true, get: function () { return getDataFromExternalSources_2.getDataFromExternalSources; } });
+function decodePermissions(permissionHex) {
+    const result = {
+        CHANGEOWNER: false,
+        ADDCONTROLLER: false,
+        EDITPERMISSIONS: false,
+        ADDEXTENSIONS: false,
+        CHANGEEXTENSIONS: false,
+        ADDUNIVERSALRECEIVERDELEGATE: false,
+        CHANGEUNIVERSALRECEIVERDELEGATE: false,
+        REENTRANCY: false,
+        SUPER_TRANSFERVALUE: false,
+        TRANSFERVALUE: false,
+        SUPER_CALL: false,
+        CALL: false,
+        SUPER_STATICCALL: false,
+        STATICCALL: false,
+        SUPER_DELEGATECALL: false,
+        DELEGATECALL: false,
+        DEPLOY: false,
+        SUPER_SETDATA: false,
+        SETDATA: false,
+        ENCRYPT: false,
+        DECRYPT: false,
+        SIGN: false,
+        EXECUTE_RELAY_CALL: false,
+        ERC4337_PERMISSION: false,
+    };
+    const permissionsToTest = Object.keys(constants_1.LSP6_DEFAULT_PERMISSIONS);
+    if (permissionHex === constants_1.LSP6_ALL_PERMISSIONS) {
+        permissionsToTest.forEach((testPermission) => {
+            result[testPermission] = true;
+        });
+        return result;
+    }
+    const passedPermissionDecimal = Number((0, web3_utils_1.hexToNumber)(permissionHex));
+    permissionsToTest.forEach((testPermission) => {
+        const decimalTestPermission = Number((0, web3_utils_1.hexToNumber)(constants_1.LSP6_DEFAULT_PERMISSIONS[testPermission]));
+        const isPermissionIncluded = (passedPermissionDecimal & decimalTestPermission) ===
+            decimalTestPermission;
+        result[testPermission] = isPermissionIncluded;
+    });
+    return result;
+}
+exports.decodePermissions = decodePermissions;
+function encodePermissions(permissions) {
+    const result = Object.keys(permissions).reduce((previous, key) => {
+        return permissions[key]
+            ? previous | Number((0, web3_utils_1.hexToNumber)(constants_1.LSP6_DEFAULT_PERMISSIONS[key]))
+            : previous;
+    }, 0);
+    return (0, web3_utils_1.leftPad)((0, web3_utils_1.toHex)(result), 64);
+}
+exports.encodePermissions = encodePermissions;
 /**
  * This package is currently in early stages of development, <br/>use only for testing or experimentation purposes.<br/>
  *
@@ -282,12 +335,7 @@ class ERC725 {
      * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
      */
     static encodePermissions(permissions) {
-        const result = Object.keys(permissions).reduce((previous, key) => {
-            return permissions[key]
-                ? previous | Number((0, web3_utils_1.hexToNumber)(constants_1.LSP6_DEFAULT_PERMISSIONS[key]))
-                : previous;
-        }, 0);
-        return (0, web3_utils_1.leftPad)((0, web3_utils_1.toHex)(result), 64);
+        return encodePermissions(permissions);
     }
     /**
      * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
@@ -297,7 +345,7 @@ class ERC725 {
      * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
      */
     encodePermissions(permissions) {
-        return ERC725.encodePermissions(permissions);
+        return encodePermissions(permissions);
     }
     /**
      * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
@@ -307,47 +355,7 @@ class ERC725 {
      * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
      */
     static decodePermissions(permissionHex) {
-        const result = {
-            CHANGEOWNER: false,
-            ADDCONTROLLER: false,
-            EDITPERMISSIONS: false,
-            ADDEXTENSIONS: false,
-            CHANGEEXTENSIONS: false,
-            ADDUNIVERSALRECEIVERDELEGATE: false,
-            CHANGEUNIVERSALRECEIVERDELEGATE: false,
-            REENTRANCY: false,
-            SUPER_TRANSFERVALUE: false,
-            TRANSFERVALUE: false,
-            SUPER_CALL: false,
-            CALL: false,
-            SUPER_STATICCALL: false,
-            STATICCALL: false,
-            SUPER_DELEGATECALL: false,
-            DELEGATECALL: false,
-            DEPLOY: false,
-            SUPER_SETDATA: false,
-            SETDATA: false,
-            ENCRYPT: false,
-            DECRYPT: false,
-            SIGN: false,
-            EXECUTE_RELAY_CALL: false,
-            ERC4337_PERMISSION: false,
-        };
-        const permissionsToTest = Object.keys(constants_1.LSP6_DEFAULT_PERMISSIONS);
-        if (permissionHex === constants_1.LSP6_ALL_PERMISSIONS) {
-            permissionsToTest.forEach((testPermission) => {
-                result[testPermission] = true;
-            });
-            return result;
-        }
-        const passedPermissionDecimal = Number((0, web3_utils_1.hexToNumber)(permissionHex));
-        permissionsToTest.forEach((testPermission) => {
-            const decimalTestPermission = Number((0, web3_utils_1.hexToNumber)(constants_1.LSP6_DEFAULT_PERMISSIONS[testPermission]));
-            const isPermissionIncluded = (passedPermissionDecimal & decimalTestPermission) ===
-                decimalTestPermission;
-            result[testPermission] = isPermissionIncluded;
-        });
-        return result;
+        return decodePermissions(permissionHex);
     }
     /**
      * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
@@ -357,7 +365,7 @@ class ERC725 {
      * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
      */
     decodePermissions(permissionHex) {
-        return ERC725.decodePermissions(permissionHex);
+        return decodePermissions(permissionHex);
     }
     /**
      * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
diff --git a/build/main/src/index.js.map b/build/main/src/index.js.map
index c619da316d31568c7b9b573833bdf5d47b3510c5..1c12464654384f67d14cad503003686c451d2183 100644
--- a/build/main/src/index.js.map
+++ b/build/main/src/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/build/main/src/lib/ERC725.d.ts b/build/main/src/lib/ERC725.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..5bd3725d0012ce069f6a937605614fd91b0f9188
--- /dev/null
+++ b/build/main/src/lib/ERC725.d.ts
@@ -0,0 +1,324 @@
+import { ERC725Config, ERC725Options } from '../types/Config';
+import { Permissions } from '../types/Method';
+import { ERC725JSONSchema } from '../types/ERC725JSONSchema';
+import { DecodeDataInput, DecodeDataOutput, EncodeDataInput, FetchDataOutput } from '../types/decodeData';
+import { GetDataDynamicKey } from '../types/GetData';
+import { DynamicKeyPart, DynamicKeyParts } from '../types/dynamicKeys';
+/**
+ * This package is currently in early stages of development, <br/>use only for testing or experimentation purposes.<br/>
+ *
+ * @typeParam Schema
+ *
+ */
+export declare class ERC725 {
+    options: ERC725Options;
+    /**
+     * Creates an instance of ERC725.
+     * @param {ERC725JSONSchema[]} schema More information available here: [LSP-2-ERC725YJSONSchema](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md)
+     * @param {string} address Address of the ERC725 contract you want to interact with
+     * @param {any} provider
+     * @param {ERC725Config} config Configuration object.
+     *
+     */
+    constructor(schemas: ERC725JSONSchema[], address?: any, provider?: any, config?: ERC725Config);
+    /**
+     * To prevent weird behavior from the lib, we must make sure all the schemas are correct before loading them.
+     *
+     * @param schemas
+     * @returns
+     */
+    private validateSchemas;
+    private static initializeProvider;
+    private getAddressAndProvider;
+    /**
+     * Gets **decoded data** for one, many or all keys of the specified `ERC725` smart-contract.
+     * When omitting the `keyOrKeys` parameter, it will get all the keys (as per {@link ERC725JSONSchema | ERC725JSONSchema} definition).
+     *
+     * Data returned by this function does not contain external data of [`JSONURL`](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#jsonurl)
+     * or [`ASSETURL`](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#asseturl) schema elements.
+     *
+     * If you would like to receive everything in one go, you can use {@link ERC725.fetchData | `fetchData`} for that.
+     *
+     * @param {*} keyOrKeys The name (or the encoded name as the schema ‘key’) of the schema element in the class instance’s schema.
+     *
+     * @returns If the input is an array: an object with schema element key names as properties, with corresponding **decoded** data as values. If the input is a string, it directly returns the **decoded** data.
+     */
+    getData(keyOrKeys?: Array<string | GetDataDynamicKey>): Promise<DecodeDataOutput[]>;
+    getData(keyOrKeys?: string | GetDataDynamicKey): Promise<DecodeDataOutput>;
+    /**
+     * Since {@link ERC725.getData | `getData`} exclusively returns data that is stored on the blockchain, `fetchData` comes in handy.
+     * Additionally to the data from the blockchain, `fetchData` also returns data from IPFS or HTTP(s) endpoints
+     * stored as [`JSONURL`](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#jsonurl) or [`ASSETURL`](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#asseturl).
+     *
+     * To ensure **data authenticity** `fetchData` compares the `hash` of the fetched JSON with the `hash` stored on the blockchain.
+     *
+     * @param {*} keyOrKeys The name (or the encoded name as the schema ‘key’) of the schema element in the class instance’s schema.
+     *
+     * @returns Returns the fetched and decoded value depending ‘valueContent’ for the schema element, otherwise works like getData.
+     */
+    fetchData(keyOrKeys?: Array<string | GetDataDynamicKey>): Promise<FetchDataOutput[]>;
+    fetchData(keyOrKeys?: string | GetDataDynamicKey): Promise<FetchDataOutput>;
+    /**
+     * Parses a hashed key or a list of hashed keys and will attempt to return its corresponding LSP-2 ERC725YJSONSchema object.
+     * The function will look for a corresponding key within the schemas:
+     *  - in `./schemas` folder
+     *  - provided at initialisation
+     *  - provided in the function call
+     *
+     * @param keyOrKeys The hashed key or array of keys for which you want to find the corresponding LSP-2 ERC725YJSONSchema.
+     * @param providedSchemas If you provide your own ERC725JSONSchemas, the parser will also try to find a key match against these schemas.
+     */
+    getSchema(keyOrKeys: string[], providedSchemas?: ERC725JSONSchema[]): Record<string, ERC725JSONSchema | null>;
+    getSchema(keyOrKeys: string, providedSchemas?: ERC725JSONSchema[]): ERC725JSONSchema | null;
+    /**
+     * To be able to store your data on the blockchain, you need to encode it according to your {@link ERC725JSONSchema}.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties, containing the data that needs to be encoded.
+     * @param schemas Additionnal ERC725JSONSchemas which will be concatenated with the schemas provided on init.
+     *
+     * @returns An object with hashed keys and encoded values.
+     *
+     * When encoding JSON it is possible to pass in the JSON object and the URL where it is available publicly.
+     * The JSON will be hashed with `keccak256`.
+     */
+    encodeData(data: EncodeDataInput[], schemas?: ERC725JSONSchema[]): import("../types").EncodeDataReturn;
+    /**
+     * To be able to store your data on the blockchain, you need to encode it according to your {@link ERC725JSONSchema}.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties, containing the data that needs to be encoded.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns An object with hashed keys and encoded values.
+     *
+     * When encoding JSON it is possible to pass in the JSON object and the URL where it is available publicly.
+     * The JSON will be hashed with `keccak256`.
+     */
+    static encodeData(data: EncodeDataInput[], schemas: ERC725JSONSchema[]): import("../types").EncodeDataReturn;
+    /**
+     * In case you are reading the key-value store from an ERC725 smart-contract key-value store
+     * without `@erc725/erc725.js` you can use `decodeData` to do the decoding for you.
+     *
+     * It is more convenient to use {@link ERC725.fetchData | `fetchData`}.
+     * It does the `decoding` and `fetching` of external references for you automatically.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns Returns decoded data as defined and expected in the schema:
+     */
+    decodeData(data: DecodeDataInput[], schemas?: ERC725JSONSchema[]): {
+        [key: string]: any;
+    };
+    /**
+     * In case you are reading the key-value store from an ERC725 smart-contract key-value store
+     * without `@erc725/erc725.js` you can use `decodeData` to do the decoding for you.
+     *
+     * It is more convenient to use {@link ERC725.fetchData | `fetchData`}.
+     * It does the `decoding` and `fetching` of external references for you automatically.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns Returns decoded data as defined and expected in the schema:
+     */
+    static decodeData(data: DecodeDataInput[], schemas: ERC725JSONSchema[]): {
+        [key: string]: any;
+    };
+    /**
+     * An added utility method which simply returns the owner of the contract.
+     * Not directly related to ERC725 specifications.
+     *
+     * @param {string} [address]
+     * @returns The address of the contract owner as stored in the contract.
+     *
+     *    This method is not yet supported when using the `graph` provider type.
+     *
+     * ```javascript title="Example"
+     * await myERC725.getOwner();
+     * // '0x94933413384997F9402cc07a650e8A34d60F437A'
+     *
+     * await myERC725.getOwner("0x3000783905Cc7170cCCe49a4112Deda952DDBe24");
+     * // '0x7f1b797b2Ba023Da2482654b50724e92EB5a7091'
+     * ```
+     */
+    getOwner(_address?: string): Promise<any>;
+    /**
+     * A helper function which checks if a signature is valid according to the EIP-1271 standard.
+     *
+     * @param messageOrHash if it is a 66 chars string with 0x prefix, it will be considered as a hash (keccak256). If not, the message will be wrapped as follows: "\x19Ethereum Signed Message:\n" + message.length + message and hashed.
+     * @param signature
+     * @returns true if isValidSignature call on the contract returns the magic value. false otherwise
+     */
+    isValidSignature(messageOrHash: string, signature: string): Promise<boolean>;
+    /**
+     * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissions The permissions you want to specify to be included or excluded. Any ommitted permissions will default to false.
+     * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
+     */
+    static encodePermissions(permissions: Permissions): string;
+    /**
+     * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissions The permissions you want to specify to be included or excluded. Any ommitted permissions will default to false.
+     * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
+     */
+    encodePermissions(permissions: Permissions): string;
+    /**
+     * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissionHex The permission hexadecimal value to be decoded.
+     * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
+     */
+    static decodePermissions(permissionHex: string): {
+        CHANGEOWNER: boolean;
+        ADDCONTROLLER: boolean;
+        EDITPERMISSIONS: boolean;
+        ADDEXTENSIONS: boolean;
+        CHANGEEXTENSIONS: boolean;
+        ADDUNIVERSALRECEIVERDELEGATE: boolean;
+        CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
+        REENTRANCY: boolean;
+        SUPER_TRANSFERVALUE: boolean;
+        TRANSFERVALUE: boolean;
+        SUPER_CALL: boolean;
+        CALL: boolean;
+        SUPER_STATICCALL: boolean;
+        STATICCALL: boolean;
+        SUPER_DELEGATECALL: boolean;
+        DELEGATECALL: boolean;
+        DEPLOY: boolean;
+        SUPER_SETDATA: boolean;
+        SETDATA: boolean;
+        ENCRYPT: boolean;
+        DECRYPT: boolean;
+        SIGN: boolean;
+        EXECUTE_RELAY_CALL: boolean;
+        ERC4337_PERMISSION: boolean;
+    };
+    /**
+     * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissionHex The permission hexadecimal value to be decoded.
+     * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
+     */
+    decodePermissions(permissionHex: string): {
+        CHANGEOWNER: boolean;
+        ADDCONTROLLER: boolean;
+        EDITPERMISSIONS: boolean;
+        ADDEXTENSIONS: boolean;
+        CHANGEEXTENSIONS: boolean;
+        ADDUNIVERSALRECEIVERDELEGATE: boolean;
+        CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
+        REENTRANCY: boolean;
+        SUPER_TRANSFERVALUE: boolean;
+        TRANSFERVALUE: boolean;
+        SUPER_CALL: boolean;
+        CALL: boolean;
+        SUPER_STATICCALL: boolean;
+        STATICCALL: boolean;
+        SUPER_DELEGATECALL: boolean;
+        DELEGATECALL: boolean;
+        DEPLOY: boolean;
+        SUPER_SETDATA: boolean;
+        SETDATA: boolean;
+        ENCRYPT: boolean;
+        DECRYPT: boolean;
+        SIGN: boolean;
+        EXECUTE_RELAY_CALL: boolean;
+        ERC4337_PERMISSION: boolean;
+    };
+    /**
+     * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyName The key name you want to encode.
+     * @param {DynamicKeyParts} dynamicKeyParts String or Array of String values used to construct the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {string} The keccak256 hash of the provided key name. This is the key that must be retrievable from the ERC725Y contract via ERC725Y.getData(bytes32 key).
+     */
+    static encodeKeyName(keyName: string, dynamicKeyParts?: DynamicKeyParts): string;
+    /**
+     * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyName The key name you want to encode.
+     * @param {DynamicKeyParts} dynamicKeyParts String or Array of String values used to construct the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {string} The keccak256 hash of the provided key name. This is the key that must be retrievable from the ERC725Y contract via ERC725Y.getData(bytes32 key).
+     */
+    encodeKeyName(keyName: string, dynamicKeyParts?: DynamicKeyParts): string;
+    /**
+     * Decodes a hashed key used on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyHash Key hash that needs to be decoded.
+     * @param {string | ERC725JSONSchema} keyNameOrSchema Key name following schema specifications or ERC725Y JSON Schema to follow in order to decode the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {DynamicKeyPart[]} The Array with all the key decoded dynamic parameters. Each object have an attribute type and value.
+     */
+    static decodeMappingKey(keyHash: string, keyNameOrSchema: string | ERC725JSONSchema): DynamicKeyPart[];
+    /**
+     * Decodes a hashed key used on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyHash Key hash that needs to be decoded.
+     * @param {string | ERC725JSONSchema} keyNameOrSchema Key name following schema specifications or ERC725Y JSON Schema to follow in order to decode the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {DynamicKeyPart[]} The Array with all the key decoded dynamic parameters. Each object have an attribute type and value.
+     */
+    decodeMappingKey(keyHash: string, keyNameOrSchema: string | ERC725JSONSchema): DynamicKeyPart[];
+    /**
+     * Check if the ERC725 object supports
+     * a certain interface.
+     *
+     * @param interfaceIdOrName Interface ID or supported interface name.
+     * @returns {Promise<boolean>} if interface is supported.
+     */
+    supportsInterface(interfaceIdOrName: string): Promise<boolean>;
+    /**
+     * Check if a smart contract address
+     * supports a certain interface.
+     *
+     * @param {string} interfaceIdOrName Interface ID or supported interface name.
+     * @param options Object of address, RPC URL and optional gas.
+     * @returns {Promise<boolean>} if interface is supported.
+     */
+    static supportsInterface(interfaceIdOrName: string, options: {
+        address: string;
+        rpcUrl: string;
+        gas?: number;
+    }): Promise<boolean>;
+    /**
+     * Check if the required permissions are included in the granted permissions as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param requiredPermissions An array of required permissions or a single required permission.
+     * @param grantedPermissions The granted permissions as a 32-byte hex string.
+     * @return A boolean value indicating whether the required permissions are included in the granted permissions.
+     */
+    static checkPermissions(requiredPermissions: string[] | string, grantedPermissions: string): boolean;
+    /**
+     * Check if the required permissions are included in the granted permissions as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param requiredPermissions An array of required permissions or a single required permission.
+     * @param grantedPermissions The granted permissions as a 32-byte hex string.
+     * @return A boolean value indicating whether the required permissions are included in the granted permissions.
+     */
+    checkPermissions(requiredPermissions: string[] | string, grantedPermissions: string): boolean;
+    /**
+     * @param type The valueType to encode the value as
+     * @param value The value to encode
+     * @returns The encoded value
+     */
+    static encodeValueType(type: string, value: string | string[] | number | number[] | boolean | boolean[]): string;
+    encodeValueType(type: string, value: string | string[] | number | number[] | boolean | boolean[]): string;
+    /**
+     * @param type The valueType to decode the value as
+     * @param data The data to decode
+     * @returns The decoded value
+     */
+    static decodeValueType(type: string, data: string): any;
+    decodeValueType(type: string, data: string): any;
+}
diff --git a/build/main/src/lib/ERC725.js b/build/main/src/lib/ERC725.js
new file mode 100644
index 0000000000000000000000000000000000000000..13e563687f041266766ac634a23f601c3a1cba6a
--- /dev/null
+++ b/build/main/src/lib/ERC725.js
@@ -0,0 +1,408 @@
+"use strict";
+var __importDefault = (this && this.__importDefault) || function (mod) {
+    return (mod && mod.__esModule) ? mod : { "default": mod };
+};
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.ERC725 = void 0;
+const web3_providers_http_1 = __importDefault(require("web3-providers-http"));
+const web3_validator_1 = require("web3-validator");
+const providerWrapper_1 = require("../provider/providerWrapper");
+const utils_1 = require("./utils");
+const schemaParser_1 = require("./schemaParser");
+const isValidSignature_1 = require("./isValidSignature");
+const constants_1 = require("../constants/constants");
+const encodeKeyName_1 = require("./encodeKeyName");
+const decodeData_1 = require("./decodeData");
+const getDataFromExternalSources_1 = require("./getDataFromExternalSources");
+const getData_1 = require("./getData");
+const encoder_1 = require("./encoder");
+const detector_1 = require("./detector");
+const decodeMappingKey_1 = require("./decodeMappingKey");
+const permissions_1 = require("./permissions");
+/**
+ * This package is currently in early stages of development, <br/>use only for testing or experimentation purposes.<br/>
+ *
+ * @typeParam Schema
+ *
+ */
+class ERC725 {
+    /**
+     * Creates an instance of ERC725.
+     * @param {ERC725JSONSchema[]} schema More information available here: [LSP-2-ERC725YJSONSchema](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md)
+     * @param {string} address Address of the ERC725 contract you want to interact with
+     * @param {any} provider
+     * @param {ERC725Config} config Configuration object.
+     *
+     */
+    constructor(schemas, address, provider, config) {
+        // NOTE: provider param can be either the provider, or and object with {provider:xxx ,type:xxx}
+        // TODO: Add check for schema format?
+        if (!schemas) {
+            throw new Error('Missing schema.');
+        }
+        const defaultConfig = {
+            ipfsGateway: 'https://api.universalprofile.cloud/ipfs/',
+            gas: constants_1.DEFAULT_GAS_VALUE,
+        };
+        this.options = {
+            schemas: this.validateSchemas(schemas
+                .map((schema) => (0, utils_1.duplicateMultiTypeERC725SchemaEntry)(schema))
+                .flat()),
+            address,
+            provider: ERC725.initializeProvider(provider, (config === null || config === void 0 ? void 0 : config.gas) ? config === null || config === void 0 ? void 0 : config.gas : defaultConfig.gas),
+            ipfsGateway: (config === null || config === void 0 ? void 0 : config.ipfsGateway)
+                ? (0, utils_1.convertIPFSGatewayUrl)(config === null || config === void 0 ? void 0 : config.ipfsGateway)
+                : defaultConfig.ipfsGateway,
+            gas: (config === null || config === void 0 ? void 0 : config.gas) ? config === null || config === void 0 ? void 0 : config.gas : defaultConfig.gas,
+        };
+    }
+    /**
+     * To prevent weird behavior from the lib, we must make sure all the schemas are correct before loading them.
+     *
+     * @param schemas
+     * @returns
+     */
+    // eslint-disable-next-line class-methods-use-this
+    validateSchemas(schemas) {
+        return schemas.filter((schema) => {
+            if (schema.valueContent === 'AssetURL' ||
+                schema.valueContent === 'JSONURL') {
+                console.warn(`[Deprecation notice] The schema with keyName: ${schema.name} uses deprecated valueContent: ${schema.valueContent}. It has been replaced by VerifiableURI. Decoding is backward compatible but value will be encoded as VerifiableURI.`);
+            }
+            try {
+                const encodedKeyName = (0, encodeKeyName_1.encodeKeyName)(schema.name);
+                const isKeyValid = schema.key === encodedKeyName;
+                if (!isKeyValid) {
+                    console.warn(`The schema with keyName: ${schema.name} is skipped because its key hash does not match its key name (expected: ${encodedKeyName}, got: ${schema.key}).`);
+                }
+                return isKeyValid;
+            }
+            catch (err) {
+                // We could not encodeKeyName, probably because the key is dynamic (Mapping or MappingWithGrouping).
+                // TODO: make sure the dynamic key name is valid:
+                // - has max 2 variables
+                // - variables are correct (<string>, <bool>, etc.)
+                // Keeping dynamic keys may be an issue for getData / fetchData functions.
+                return true;
+            }
+        });
+    }
+    static initializeProvider(providerOrRpcUrl, gasInfo) {
+        // do not fail on no-provider
+        if (!providerOrRpcUrl)
+            return undefined;
+        // if provider is a string, assume it's a rpcUrl
+        if (typeof providerOrRpcUrl === 'string') {
+            return new providerWrapper_1.ProviderWrapper(new web3_providers_http_1.default(providerOrRpcUrl), gasInfo);
+        }
+        if (typeof providerOrRpcUrl.request === 'function' ||
+            typeof providerOrRpcUrl.send === 'function')
+            return new providerWrapper_1.ProviderWrapper(providerOrRpcUrl, gasInfo);
+        throw new Error(`Incorrect or unsupported provider ${providerOrRpcUrl}`);
+    }
+    getAddressAndProvider() {
+        if (!this.options.address || !(0, web3_validator_1.isAddress)(this.options.address)) {
+            throw new Error('Missing ERC725 contract address.');
+        }
+        if (!this.options.provider) {
+            throw new Error('Missing provider.');
+        }
+        return {
+            address: this.options.address,
+            provider: this.options.provider,
+        };
+    }
+    async getData(keyOrKeys) {
+        this.getAddressAndProvider();
+        return (0, getData_1.getData)(this.options, keyOrKeys);
+    }
+    async fetchData(keyOrKeys) {
+        let keyNames;
+        let throwException = false;
+        if (Array.isArray(keyOrKeys)) {
+            keyNames = keyOrKeys;
+        }
+        else if (!keyOrKeys) {
+            keyNames = this.options.schemas
+                .map((element) => element.name)
+                .filter((key) => !(0, encodeKeyName_1.isDynamicKeyName)(key));
+        }
+        else {
+            throwException = true; // If it's explicitely a single key, then we allow throwing an exception
+            keyNames = [keyOrKeys];
+        }
+        const dataFromChain = await this.getData(keyNames);
+        // NOTE: this step is executed in getData function above
+        // We can optimize by computing it only once.
+        const schemas = (0, utils_1.generateSchemasFromDynamicKeys)(keyNames, this.options.schemas);
+        const dataFromExternalSources = await (0, getDataFromExternalSources_1.getDataFromExternalSources)(schemas, dataFromChain, this.options.ipfsGateway, throwException);
+        if (keyOrKeys &&
+            !Array.isArray(keyOrKeys) &&
+            dataFromExternalSources.length > 0) {
+            return dataFromExternalSources[0];
+        }
+        return dataFromExternalSources;
+    }
+    getSchema(keyOrKeys, providedSchemas) {
+        return (0, schemaParser_1.getSchema)(keyOrKeys, this.options.schemas.concat(providedSchemas || []));
+    }
+    /**
+     * To be able to store your data on the blockchain, you need to encode it according to your {@link ERC725JSONSchema}.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties, containing the data that needs to be encoded.
+     * @param schemas Additionnal ERC725JSONSchemas which will be concatenated with the schemas provided on init.
+     *
+     * @returns An object with hashed keys and encoded values.
+     *
+     * When encoding JSON it is possible to pass in the JSON object and the URL where it is available publicly.
+     * The JSON will be hashed with `keccak256`.
+     */
+    encodeData(data, schemas) {
+        return (0, utils_1.encodeData)(data, Array.prototype.concat(this.options.schemas, schemas));
+    }
+    /**
+     * To be able to store your data on the blockchain, you need to encode it according to your {@link ERC725JSONSchema}.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties, containing the data that needs to be encoded.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns An object with hashed keys and encoded values.
+     *
+     * When encoding JSON it is possible to pass in the JSON object and the URL where it is available publicly.
+     * The JSON will be hashed with `keccak256`.
+     */
+    static encodeData(data, schemas) {
+        return (0, utils_1.encodeData)(data, schemas);
+    }
+    /**
+     * In case you are reading the key-value store from an ERC725 smart-contract key-value store
+     * without `@erc725/erc725.js` you can use `decodeData` to do the decoding for you.
+     *
+     * It is more convenient to use {@link ERC725.fetchData | `fetchData`}.
+     * It does the `decoding` and `fetching` of external references for you automatically.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns Returns decoded data as defined and expected in the schema:
+     */
+    decodeData(data, schemas) {
+        return (0, decodeData_1.decodeData)(data, Array.prototype.concat(this.options.schemas, schemas));
+    }
+    /**
+     * In case you are reading the key-value store from an ERC725 smart-contract key-value store
+     * without `@erc725/erc725.js` you can use `decodeData` to do the decoding for you.
+     *
+     * It is more convenient to use {@link ERC725.fetchData | `fetchData`}.
+     * It does the `decoding` and `fetching` of external references for you automatically.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns Returns decoded data as defined and expected in the schema:
+     */
+    static decodeData(data, schemas) {
+        return (0, decodeData_1.decodeData)(data, schemas);
+    }
+    /**
+     * An added utility method which simply returns the owner of the contract.
+     * Not directly related to ERC725 specifications.
+     *
+     * @param {string} [address]
+     * @returns The address of the contract owner as stored in the contract.
+     *
+     *    This method is not yet supported when using the `graph` provider type.
+     *
+     * ```javascript title="Example"
+     * await myERC725.getOwner();
+     * // '0x94933413384997F9402cc07a650e8A34d60F437A'
+     *
+     * await myERC725.getOwner("0x3000783905Cc7170cCCe49a4112Deda952DDBe24");
+     * // '0x7f1b797b2Ba023Da2482654b50724e92EB5a7091'
+     * ```
+     */
+    async getOwner(_address) {
+        const { address, provider } = this.getAddressAndProvider();
+        return provider.getOwner(_address || address);
+    }
+    /**
+     * A helper function which checks if a signature is valid according to the EIP-1271 standard.
+     *
+     * @param messageOrHash if it is a 66 chars string with 0x prefix, it will be considered as a hash (keccak256). If not, the message will be wrapped as follows: "\x19Ethereum Signed Message:\n" + message.length + message and hashed.
+     * @param signature
+     * @returns true if isValidSignature call on the contract returns the magic value. false otherwise
+     */
+    async isValidSignature(messageOrHash, signature) {
+        if (!this.options.address || !(0, web3_validator_1.isAddress)(this.options.address)) {
+            throw new Error('Missing ERC725 contract address.');
+        }
+        if (!this.options.provider) {
+            throw new Error('Missing provider.');
+        }
+        return (0, isValidSignature_1.isValidSignature)(messageOrHash, signature, this.options.address, this.options.provider);
+    }
+    /**
+     * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissions The permissions you want to specify to be included or excluded. Any ommitted permissions will default to false.
+     * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
+     */
+    static encodePermissions(permissions) {
+        return (0, permissions_1.encodePermissions)(permissions);
+    }
+    /**
+     * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissions The permissions you want to specify to be included or excluded. Any ommitted permissions will default to false.
+     * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
+     */
+    encodePermissions(permissions) {
+        return (0, permissions_1.encodePermissions)(permissions);
+    }
+    /**
+     * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissionHex The permission hexadecimal value to be decoded.
+     * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
+     */
+    static decodePermissions(permissionHex) {
+        return (0, permissions_1.decodePermissions)(permissionHex);
+    }
+    /**
+     * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissionHex The permission hexadecimal value to be decoded.
+     * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
+     */
+    decodePermissions(permissionHex) {
+        return (0, permissions_1.decodePermissions)(permissionHex);
+    }
+    /**
+     * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyName The key name you want to encode.
+     * @param {DynamicKeyParts} dynamicKeyParts String or Array of String values used to construct the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {string} The keccak256 hash of the provided key name. This is the key that must be retrievable from the ERC725Y contract via ERC725Y.getData(bytes32 key).
+     */
+    static encodeKeyName(keyName, dynamicKeyParts) {
+        return (0, encodeKeyName_1.encodeKeyName)(keyName, dynamicKeyParts);
+    }
+    /**
+     * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyName The key name you want to encode.
+     * @param {DynamicKeyParts} dynamicKeyParts String or Array of String values used to construct the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {string} The keccak256 hash of the provided key name. This is the key that must be retrievable from the ERC725Y contract via ERC725Y.getData(bytes32 key).
+     */
+    encodeKeyName(keyName, dynamicKeyParts) {
+        return (0, encodeKeyName_1.encodeKeyName)(keyName, dynamicKeyParts);
+    }
+    /**
+     * Decodes a hashed key used on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyHash Key hash that needs to be decoded.
+     * @param {string | ERC725JSONSchema} keyNameOrSchema Key name following schema specifications or ERC725Y JSON Schema to follow in order to decode the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {DynamicKeyPart[]} The Array with all the key decoded dynamic parameters. Each object have an attribute type and value.
+     */
+    static decodeMappingKey(keyHash, keyNameOrSchema) {
+        return (0, decodeMappingKey_1.decodeMappingKey)(keyHash, keyNameOrSchema);
+    }
+    /**
+     * Decodes a hashed key used on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyHash Key hash that needs to be decoded.
+     * @param {string | ERC725JSONSchema} keyNameOrSchema Key name following schema specifications or ERC725Y JSON Schema to follow in order to decode the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {DynamicKeyPart[]} The Array with all the key decoded dynamic parameters. Each object have an attribute type and value.
+     */
+    decodeMappingKey(keyHash, keyNameOrSchema) {
+        return (0, decodeMappingKey_1.decodeMappingKey)(keyHash, keyNameOrSchema);
+    }
+    /**
+     * Check if the ERC725 object supports
+     * a certain interface.
+     *
+     * @param interfaceIdOrName Interface ID or supported interface name.
+     * @returns {Promise<boolean>} if interface is supported.
+     */
+    async supportsInterface(interfaceIdOrName) {
+        const { address, provider } = this.getAddressAndProvider();
+        return (0, detector_1.supportsInterface)(interfaceIdOrName, {
+            address,
+            provider,
+        });
+    }
+    /**
+     * Check if a smart contract address
+     * supports a certain interface.
+     *
+     * @param {string} interfaceIdOrName Interface ID or supported interface name.
+     * @param options Object of address, RPC URL and optional gas.
+     * @returns {Promise<boolean>} if interface is supported.
+     */
+    static async supportsInterface(interfaceIdOrName, options) {
+        if (!(0, web3_validator_1.isAddress)(options.address)) {
+            throw new Error('Invalid address');
+        }
+        if (!options.rpcUrl) {
+            throw new Error('Missing RPC URL');
+        }
+        return (0, detector_1.supportsInterface)(interfaceIdOrName, {
+            address: options.address,
+            provider: this.initializeProvider(options.rpcUrl, (options === null || options === void 0 ? void 0 : options.gas) ? options === null || options === void 0 ? void 0 : options.gas : constants_1.DEFAULT_GAS_VALUE),
+        });
+    }
+    /**
+     * Check if the required permissions are included in the granted permissions as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param requiredPermissions An array of required permissions or a single required permission.
+     * @param grantedPermissions The granted permissions as a 32-byte hex string.
+     * @return A boolean value indicating whether the required permissions are included in the granted permissions.
+     */
+    static checkPermissions(requiredPermissions, grantedPermissions) {
+        return (0, detector_1.checkPermissions)(requiredPermissions, grantedPermissions);
+    }
+    /**
+     * Check if the required permissions are included in the granted permissions as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param requiredPermissions An array of required permissions or a single required permission.
+     * @param grantedPermissions The granted permissions as a 32-byte hex string.
+     * @return A boolean value indicating whether the required permissions are included in the granted permissions.
+     */
+    checkPermissions(requiredPermissions, grantedPermissions) {
+        return ERC725.checkPermissions(requiredPermissions, grantedPermissions);
+    }
+    /**
+     * @param type The valueType to encode the value as
+     * @param value The value to encode
+     * @returns The encoded value
+     */
+    static encodeValueType(type, value) {
+        return (0, encoder_1.encodeValueType)(type, value);
+    }
+    encodeValueType(type, value) {
+        return ERC725.encodeValueType(type, value);
+    }
+    /**
+     * @param type The valueType to decode the value as
+     * @param data The data to decode
+     * @returns The decoded value
+     */
+    static decodeValueType(type, data) {
+        return (0, encoder_1.decodeValueType)(type, data);
+    }
+    decodeValueType(type, data) {
+        return ERC725.decodeValueType(type, data);
+    }
+}
+exports.ERC725 = ERC725;
+//# sourceMappingURL=ERC725.js.map
\ No newline at end of file
diff --git a/build/main/src/lib/ERC725.js.map b/build/main/src/lib/ERC725.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..31222c7cc2e730f6719299677e873d2888b0db7f
--- /dev/null
+++ b/build/main/src/lib/ERC725.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ERC725.js","sourceRoot":"","sources":["../../../../src/lib/ERC725.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/build/main/src/lib/_test.d.ts b/build/main/src/lib/_test.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..58fe458e1b95f622f54b79c19b4d720f9ac0a668
--- /dev/null
+++ b/build/main/src/lib/_test.d.ts
@@ -0,0 +1 @@
+declare const decode: (receivedData: Uint8Array) => string;
diff --git a/build/main/src/lib/_test.js b/build/main/src/lib/_test.js
new file mode 100644
index 0000000000000000000000000000000000000000..0eb4506a9c2667672b6044245a194ecaac8ea976
--- /dev/null
+++ b/build/main/src/lib/_test.js
@@ -0,0 +1,21 @@
+"use strict";
+const decode = (receivedData) => {
+    const capture = [];
+    capture.push(receivedData[0]);
+    if (receivedData.length > 3) {
+        capture.push(receivedData[receivedData.length - 3]);
+    }
+    if (receivedData.length > 2) {
+        capture.push(receivedData[receivedData.length - 2]);
+    }
+    if (receivedData.length > 1) {
+        capture.push(receivedData[receivedData.length - 1]);
+    }
+    const key = String.fromCharCode.apply(null, capture);
+    console.log(capture, key, /^(\[.*\]|\{.*\})\s*$/.test(key));
+    return key;
+};
+decode(Uint8Array.from(Buffer.from(JSON.stringify({ k: 0 }))));
+decode(Uint8Array.from(Buffer.from(JSON.stringify({ k: 0 }) + '\n')));
+decode(Uint8Array.from(Buffer.from(JSON.stringify({ k: 0 }) + '\r\n')));
+//# sourceMappingURL=_test.js.map
\ No newline at end of file
diff --git a/build/main/src/lib/_test.js.map b/build/main/src/lib/_test.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..a2bc4ce44e406657f9ee97677ebab45c90ed9842
--- /dev/null
+++ b/build/main/src/lib/_test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"_test.js","sourceRoot":"","sources":["../../../../src/lib/_test.ts"],"names":[],"mappings":";AAAA,MAAM,MAAM,GAAG,CAAC,YAAwB,EAAE,EAAE;IAC1C,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACrD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACtE,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC"}
\ No newline at end of file
diff --git a/build/main/src/lib/getDataFromExternalSources.js b/build/main/src/lib/getDataFromExternalSources.js
index 15b671ec5f3d69e5c165e14cdb4251b644793093..f21bba04d9ac97f6e8056a9ad10d2b01c3687acc 100644
--- a/build/main/src/lib/getDataFromExternalSources.js
+++ b/build/main/src/lib/getDataFromExternalSources.js
@@ -48,19 +48,26 @@ const getDataFromExternalSources = (schemas, dataFromChain, ipfsGateway, throwEx
             const urlDataWithHash = dataEntry.value; // Type URLDataWithHash
             const { url } = (0, utils_1.patchIPFSUrlsIfApplicable)(urlDataWithHash, ipfsGateway);
             try {
-                if (/[=?/]$/.test(url)) {
-                    // this URL is not verifiable and the URL ends with a / or ? or = meaning it's not a file
-                    // and more likely to be some kind of directory or query BaseURI
-                    return dataEntry;
+                let receivedData;
+                const [, encoding, data] = url.match(/^data:.*?;(.*?),(.*)$/) || [];
+                if (data) {
+                    receivedData = Uint8Array.from(Buffer.from(data, encoding === 'base64' ? 'base64' : 'utf8'));
                 }
-                const receivedData = await fetch(url).then(async (response) => {
-                    if (!response.ok) {
-                        throw new Error(response.statusText);
+                else {
+                    if (/[=?/]$/.test(url)) {
+                        // this URL is not verifiable and the URL ends with a / or ? or = meaning it's not a file
+                        // and more likely to be some kind of directory or query BaseURI
+                        return dataEntry;
                     }
-                    return response
-                        .arrayBuffer()
-                        .then((buffer) => new Uint8Array(buffer));
-                });
+                    receivedData = await fetch(url).then(async (response) => {
+                        if (!response.ok) {
+                            throw new Error(response.statusText);
+                        }
+                        return response
+                            .arrayBuffer()
+                            .then((buffer) => new Uint8Array(buffer));
+                    });
+                }
                 if (receivedData.length >= 2) {
                     // JSON data cannot be less than 2 characters long.
                     try {
@@ -93,7 +100,7 @@ const getDataFromExternalSources = (schemas, dataFromChain, ipfsGateway, throwEx
                         // Check if the beginning or end are
                         // { and } => JSON.stringify({...}) => pretty much 100% of our JSON will be this.
                         // [ and ] => JSON.stringify([...])
-                        if (/^(\[.*\]|\{.*\})\s*$/.test(key)) {
+                        if (/^(\[.*\]|\{.*\})\s*$/s.test(key)) {
                             const json = (0, ethereumjs_util_1.arrToBufArr)(receivedData).toString();
                             const value = JSON.parse(json);
                             if ((0, utils_1.isDataAuthentic)(value, urlDataWithHash.verification)) {
diff --git a/build/main/src/lib/getDataFromExternalSources.js.map b/build/main/src/lib/getDataFromExternalSources.js.map
index 835da64cc97ef427b2a83e0a9eb45c6610d477a4..687bc72ec417c9ac92507fd5e0525ed64f675fd7 100644
--- a/build/main/src/lib/getDataFromExternalSources.js.map
+++ b/build/main/src/lib/getDataFromExternalSources.js.map
@@ -1 +1 @@
-{"version":3,"file":"getDataFromExternalSources.js","sourceRoot":"","sources":["../../../../src/lib/getDataFromExternalSources.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"getDataFromExternalSources.js","sourceRoot":"","sources":["../../../../src/lib/getDataFromExternalSources.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/build/main/src/lib/permissions.d.ts b/build/main/src/lib/permissions.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..d89b668adf57d732606bf7b470682174f2c632be
--- /dev/null
+++ b/build/main/src/lib/permissions.d.ts
@@ -0,0 +1,28 @@
+import { Permissions } from '../types/Method';
+export declare function encodePermissions(permissions: Permissions): string;
+export declare function decodePermissions(permissionHex: string): {
+    CHANGEOWNER: boolean;
+    ADDCONTROLLER: boolean;
+    EDITPERMISSIONS: boolean;
+    ADDEXTENSIONS: boolean;
+    CHANGEEXTENSIONS: boolean;
+    ADDUNIVERSALRECEIVERDELEGATE: boolean;
+    CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
+    REENTRANCY: boolean;
+    SUPER_TRANSFERVALUE: boolean;
+    TRANSFERVALUE: boolean;
+    SUPER_CALL: boolean;
+    CALL: boolean;
+    SUPER_STATICCALL: boolean;
+    STATICCALL: boolean;
+    SUPER_DELEGATECALL: boolean;
+    DELEGATECALL: boolean;
+    DEPLOY: boolean;
+    SUPER_SETDATA: boolean;
+    SETDATA: boolean;
+    ENCRYPT: boolean;
+    DECRYPT: boolean;
+    SIGN: boolean;
+    EXECUTE_RELAY_CALL: boolean;
+    ERC4337_PERMISSION: boolean;
+};
diff --git a/build/main/src/lib/permissions.js b/build/main/src/lib/permissions.js
new file mode 100644
index 0000000000000000000000000000000000000000..34ac68344d77c64b6a360319087e94d862070f0a
--- /dev/null
+++ b/build/main/src/lib/permissions.js
@@ -0,0 +1,59 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.decodePermissions = exports.encodePermissions = void 0;
+const web3_utils_1 = require("web3-utils");
+const constants_1 = require("../constants/constants");
+function encodePermissions(permissions) {
+    const result = Object.keys(permissions).reduce((previous, key) => {
+        return permissions[key]
+            ? previous | Number((0, web3_utils_1.hexToNumber)(constants_1.LSP6_DEFAULT_PERMISSIONS[key]))
+            : previous;
+    }, 0);
+    return (0, web3_utils_1.leftPad)((0, web3_utils_1.toHex)(result), 64);
+}
+exports.encodePermissions = encodePermissions;
+function decodePermissions(permissionHex) {
+    const result = {
+        CHANGEOWNER: false,
+        ADDCONTROLLER: false,
+        EDITPERMISSIONS: false,
+        ADDEXTENSIONS: false,
+        CHANGEEXTENSIONS: false,
+        ADDUNIVERSALRECEIVERDELEGATE: false,
+        CHANGEUNIVERSALRECEIVERDELEGATE: false,
+        REENTRANCY: false,
+        SUPER_TRANSFERVALUE: false,
+        TRANSFERVALUE: false,
+        SUPER_CALL: false,
+        CALL: false,
+        SUPER_STATICCALL: false,
+        STATICCALL: false,
+        SUPER_DELEGATECALL: false,
+        DELEGATECALL: false,
+        DEPLOY: false,
+        SUPER_SETDATA: false,
+        SETDATA: false,
+        ENCRYPT: false,
+        DECRYPT: false,
+        SIGN: false,
+        EXECUTE_RELAY_CALL: false,
+        ERC4337_PERMISSION: false,
+    };
+    const permissionsToTest = Object.keys(constants_1.LSP6_DEFAULT_PERMISSIONS);
+    if (permissionHex === constants_1.LSP6_ALL_PERMISSIONS) {
+        permissionsToTest.forEach((testPermission) => {
+            result[testPermission] = true;
+        });
+        return result;
+    }
+    const passedPermissionDecimal = Number((0, web3_utils_1.hexToNumber)(permissionHex));
+    permissionsToTest.forEach((testPermission) => {
+        const decimalTestPermission = Number((0, web3_utils_1.hexToNumber)(constants_1.LSP6_DEFAULT_PERMISSIONS[testPermission]));
+        const isPermissionIncluded = (passedPermissionDecimal & decimalTestPermission) ===
+            decimalTestPermission;
+        result[testPermission] = isPermissionIncluded;
+    });
+    return result;
+}
+exports.decodePermissions = decodePermissions;
+//# sourceMappingURL=permissions.js.map
\ No newline at end of file
diff --git a/build/main/src/lib/permissions.js.map b/build/main/src/lib/permissions.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..95a6f69b11625670c361948b6d42914b80a04456
--- /dev/null
+++ b/build/main/src/lib/permissions.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"permissions.js","sourceRoot":"","sources":["../../../../src/lib/permissions.ts"],"names":[],"mappings":";;;AAAA,2CAAyD;AACzD,sDAGgC;AAGhC,SAAgB,iBAAiB,CAAC,WAAwB;IACxD,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE;QAC/D,OAAO,WAAW,CAAC,GAAG,CAAC;YACrB,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAA,wBAAW,EAAC,oCAAwB,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,QAAQ,CAAC;IACf,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAO,IAAA,oBAAO,EAAC,IAAA,kBAAK,EAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;AACpC,CAAC;AARD,8CAQC;AAED,SAAgB,iBAAiB,CAAC,aAAqB;IACrD,MAAM,MAAM,GAAG;QACb,WAAW,EAAE,KAAK;QAClB,aAAa,EAAE,KAAK;QACpB,eAAe,EAAE,KAAK;QACtB,aAAa,EAAE,KAAK;QACpB,gBAAgB,EAAE,KAAK;QACvB,4BAA4B,EAAE,KAAK;QACnC,+BAA+B,EAAE,KAAK;QACtC,UAAU,EAAE,KAAK;QACjB,mBAAmB,EAAE,KAAK;QAC1B,aAAa,EAAE,KAAK;QACpB,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,KAAK;QACX,gBAAgB,EAAE,KAAK;QACvB,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,YAAY,EAAE,KAAK;QACnB,MAAM,EAAE,KAAK;QACb,aAAa,EAAE,KAAK;QACpB,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,KAAK;QACX,kBAAkB,EAAE,KAAK;QACzB,kBAAkB,EAAE,KAAK;KAC1B,CAAC;IAEF,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,oCAAwB,CAAC,CAAC;IAChE,IAAI,aAAa,KAAK,gCAAoB,EAAE,CAAC;QAC3C,iBAAiB,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,EAAE;YAC3C,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,uBAAuB,GAAG,MAAM,CAAC,IAAA,wBAAW,EAAC,aAAa,CAAC,CAAC,CAAC;IAEnE,iBAAiB,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,EAAE;QAC3C,MAAM,qBAAqB,GAAG,MAAM,CAClC,IAAA,wBAAW,EAAC,oCAAwB,CAAC,cAAc,CAAC,CAAC,CACtD,CAAC;QACF,MAAM,oBAAoB,GACxB,CAAC,uBAAuB,GAAG,qBAAqB,CAAC;YACjD,qBAAqB,CAAC;QAExB,MAAM,CAAC,cAAc,CAAC,GAAG,oBAAoB,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC;AAlDD,8CAkDC"}
\ No newline at end of file
diff --git a/build/main/src/utils.d.ts b/build/main/src/utils.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..4c6bf69701ceead1d5f1b69f8f8659906e48f88c
--- /dev/null
+++ b/build/main/src/utils.d.ts
@@ -0,0 +1,16 @@
+/**
+ * @file index.ts
+ * @author Robert McLeod <@robertdavid010>
+ * @author Fabian Vogelsteller <fabian@lukso.network>
+ * @author Hugo Masclet <@Hugoo>
+ * @date 2020
+ */
+export type { ERC725JSONSchemaKeyType, ERC725JSONSchemaValueContent, ERC725JSONSchemaValueType, ERC725JSONSchema, } from './types/ERC725JSONSchema';
+export { ERC725Config, KeyValuePair, ProviderTypes } from './types';
+export { encodeData, encodeArrayKey } from './lib/utils';
+export { decodeData } from './lib/decodeData';
+export { encodeKeyName } from './lib/encodeKeyName';
+export { decodeMappingKey } from './lib/decodeMappingKey';
+export { decodeValueType, decodeValueContent } from './lib/encoder';
+export { getDataFromExternalSources } from './lib/getDataFromExternalSources';
+export { decodePermissions, encodePermissions } from './lib/permissions';
diff --git a/build/main/src/utils.js b/build/main/src/utils.js
new file mode 100644
index 0000000000000000000000000000000000000000..361ca8fb91f6a3c8b725dbee69147ca828694d4f
--- /dev/null
+++ b/build/main/src/utils.js
@@ -0,0 +1,34 @@
+"use strict";
+/*
+    This file is part of @erc725/erc725.js.
+    @erc725/erc725.js is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Lesser General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+    @erc725/erc725.js is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Lesser General Public License for more details.
+    You should have received a copy of the GNU Lesser General Public License
+    along with @erc725/erc725.js.  If not, see <http://www.gnu.org/licenses/>.
+*/
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.encodePermissions = exports.decodePermissions = exports.getDataFromExternalSources = exports.decodeValueContent = exports.decodeValueType = exports.decodeMappingKey = exports.encodeKeyName = exports.decodeData = exports.encodeArrayKey = exports.encodeData = void 0;
+var utils_1 = require("./lib/utils");
+Object.defineProperty(exports, "encodeData", { enumerable: true, get: function () { return utils_1.encodeData; } });
+Object.defineProperty(exports, "encodeArrayKey", { enumerable: true, get: function () { return utils_1.encodeArrayKey; } });
+var decodeData_1 = require("./lib/decodeData");
+Object.defineProperty(exports, "decodeData", { enumerable: true, get: function () { return decodeData_1.decodeData; } });
+var encodeKeyName_1 = require("./lib/encodeKeyName");
+Object.defineProperty(exports, "encodeKeyName", { enumerable: true, get: function () { return encodeKeyName_1.encodeKeyName; } });
+var decodeMappingKey_1 = require("./lib/decodeMappingKey");
+Object.defineProperty(exports, "decodeMappingKey", { enumerable: true, get: function () { return decodeMappingKey_1.decodeMappingKey; } });
+var encoder_1 = require("./lib/encoder");
+Object.defineProperty(exports, "decodeValueType", { enumerable: true, get: function () { return encoder_1.decodeValueType; } });
+Object.defineProperty(exports, "decodeValueContent", { enumerable: true, get: function () { return encoder_1.decodeValueContent; } });
+var getDataFromExternalSources_1 = require("./lib/getDataFromExternalSources");
+Object.defineProperty(exports, "getDataFromExternalSources", { enumerable: true, get: function () { return getDataFromExternalSources_1.getDataFromExternalSources; } });
+var permissions_1 = require("./lib/permissions");
+Object.defineProperty(exports, "decodePermissions", { enumerable: true, get: function () { return permissions_1.decodePermissions; } });
+Object.defineProperty(exports, "encodePermissions", { enumerable: true, get: function () { return permissions_1.encodePermissions; } });
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/build/main/src/utils.js.map b/build/main/src/utils.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..d92abbb933be08d0fc67dff8ea211363203711ee
--- /dev/null
+++ b/build/main/src/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;EAYE;;;AAmBF,qCAAyD;AAAhD,mGAAA,UAAU,OAAA;AAAE,uGAAA,cAAc,OAAA;AACnC,+CAA8C;AAArC,wGAAA,UAAU,OAAA;AACnB,qDAAoD;AAA3C,8GAAA,aAAa,OAAA;AACtB,2DAA0D;AAAjD,oHAAA,gBAAgB,OAAA;AACzB,yCAAoE;AAA3D,0GAAA,eAAe,OAAA;AAAE,6GAAA,kBAAkB,OAAA;AAC5C,+EAA8E;AAArE,wIAAA,0BAA0B,OAAA;AACnC,iDAAyE;AAAhE,gHAAA,iBAAiB,OAAA;AAAE,gHAAA,iBAAiB,OAAA"}
\ No newline at end of file
diff --git a/build/main/tsconfig.tsbuildinfo b/build/main/tsconfig.tsbuildinfo
index 5f3efcdcf511480a91c150e61f38105b00ec0f86..dcfe5a3d9c6a64fd1305bb1e5cdb11e4d9a48570 100644
--- a/build/main/tsconfig.tsbuildinfo
+++ b/build/main/tsconfig.tsbuildinfo
@@ -1 +1 @@
-{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostics_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/dom-events.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/readline/promises.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/stream/consumers.d.ts","../../node_modules/@types/node/stream/web.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/test.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/@types/bn.js/index.d.ts","../../node_modules/web3-utils/types/index.d.ts","../../node_modules/web3-core-helpers/types/index.d.ts","../../node_modules/web3-providers-http/types/index.d.ts","../../node_modules/web3-eth-abi/types/index.d.ts","../../src/types/JsonRpc.ts","../../src/types/Method.ts","../../node_modules/buffer/index.d.ts","../../node_modules/rlp/dist/types.d.ts","../../node_modules/rlp/dist/index.d.ts","../../node_modules/ethereumjs-util/dist/externals.d.ts","../../node_modules/ethereumjs-util/dist/constants.d.ts","../../node_modules/ethereumjs-util/dist/address.d.ts","../../node_modules/ethereumjs-util/dist/bytes.d.ts","../../node_modules/ethereumjs-util/dist/types.d.ts","../../node_modules/ethereumjs-util/dist/account.d.ts","../../node_modules/ethereumjs-util/dist/hash.d.ts","../../node_modules/ethereumjs-util/dist/signature.d.ts","../../node_modules/ethereumjs-util/dist/object.d.ts","../../node_modules/ethereumjs-util/dist/internal.d.ts","../../node_modules/ethereumjs-util/dist/index.d.ts","../../src/constants/constants.ts","../../src/lib/provider-wrapper-utils.ts","../../src/types/provider.ts","../../src/provider/providerWrapper.ts","../../src/types/ERC725JSONSchema.ts","../../src/types/Config.ts","../../src/types/encodeData/JSONURL.ts","../../src/types/index.ts","../../src/types/encodeData/index.ts","../../src/lib/encoder.ts","../../src/types/dynamicKeys.ts","../../src/lib/encodeKeyName.ts","../../src/lib/getSchemaElement.ts","../../src/types/decodeData.ts","../../src/types/GetData.ts","../../src/lib/decodeData.ts","../../src/lib/utils.ts","../../schemas/LSP1UniversalReceiverDelegate.json","../../schemas/LSP3ProfileMetadata.json","../../schemas/LSP4DigitalAsset.json","../../schemas/LSP4DigitalAssetLegacy.json","../../schemas/LSP5ReceivedAssets.json","../../schemas/LSP6KeyManager.json","../../schemas/LSP8IdentifiableDigitalAsset.json","../../schemas/LSP9Vault.json","../../schemas/LSP10ReceivedVaults.json","../../schemas/LSP12IssuedAssets.json","../../schemas/LSP17ContractExtension.json","../../src/schemas/index.ts","../../src/lib/schemaParser.ts","../../src/lib/isValidSignature.ts","../../src/lib/getDataFromExternalSources.ts","../../src/lib/getData.ts","../../src/constants/interfaces.ts","../../src/lib/detector.ts","../../src/lib/decodeMappingKey.ts","../../src/index.ts","../../node_modules/@types/mocha/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"7e771891adaa85b690266bc37bd6eb43bc57eecc4b54693ead36467e7369952a","a69c09dbea52352f479d3e7ac949fde3d17b195abe90b045d619f747b38d6d1a",{"version":"ca72190df0eb9b09d4b600821c8c7b6c9747b75a1c700c4d57dc0bb72abc074c","affectsGlobalScope":true},"21a167fec8f933752fb8157f06d28fab6817af3ad9b0bdb1908a10762391eab9",{"version":"bb65c6267c5d6676be61acbf6604cf0a4555ac4b505df58ac15c831fcbff4e3e","affectsGlobalScope":true},"374ca798f244e464346f14301dc2a8b4b111af1a83b49fffef5906c338a1f922","5a94487653355b56018122d92392beb2e5f4a6c63ba5cef83bbe1c99775ef713",{"version":"d5135ad93b33adcce80b18f8065087934cdc1730d63db58562edcf017e1aad9b","affectsGlobalScope":true},"82408ed3e959ddc60d3e9904481b5a8dc16469928257af22a3f7d1a3bc7fd8c4","dab86d9604fe40854ef3c0a6f9e8948873dc3509213418e5e457f410fd11200f","bb9c4ffa5e6290c6980b63c815cdd1625876dadb2efaf77edbe82984be93e55e","489532ff54b714f0e0939947a1c560e516d3ae93d51d639ab02e907a0e950114","f30bb836526d930a74593f7b0f5c1c46d10856415a8f69e5e2fc3db80371e362","14b5aa23c5d0ae1907bc696ac7b6915d88f7d85799cc0dc2dcf98fbce2c5a67c","5c439dafdc09abe4d6c260a96b822fa0ba5be7203c71a63ab1f1423cd9e838ea",{"version":"6b526a5ec4a401ca7c26cfe6a48e641d8f30af76673bad3b06a1b4504594a960","affectsGlobalScope":true},{"version":"816ad2e607a96de5bcac7d437f843f5afd8957f1fa5eefa6bba8e4ed7ca8fd84","affectsGlobalScope":true},"cec36af22f514322f870e81d30675c78df82ae8bf4863f5fd4e4424c040c678d","d903fafe96674bc0b2ac38a5be4a8fc07b14c2548d1cdb165a80ea24c44c0c54","5eec82ac21f84d83586c59a16b9b8502d34505d1393393556682fe7e7fde9ef2","04eb6578a588d6a46f50299b55f30e3a04ef27d0c5a46c57d8fcc211cd530faa","8d3c583a07e0c37e876908c2d5da575019f689df8d9fa4c081d99119d53dba22","2c828a5405191d006115ab34e191b8474bc6c86ffdc401d1a9864b1b6e088a58",{"version":"e630e5528e899219ae319e83bef54bf3bcb91b01d76861ecf881e8e614b167f0","affectsGlobalScope":true},"d076fede3cb042e7b13fc29442aaa03a57806bc51e2b26a67a01fbc66a7c0c12","7c013aa892414a7fdcfd861ae524a668eaa3ede8c7c0acafaf611948122c8d93","b0973c3cbcdc59b37bf477731d468696ecaf442593ec51bab497a613a580fe30",{"version":"4989e92ba5b69b182d2caaea6295af52b7dc73a4f7a2e336a676722884e7139d","affectsGlobalScope":true},{"version":"b3624aed92dab6da8484280d3cb3e2f4130ec3f4ef3f8201c95144ae9e898bb6","affectsGlobalScope":true},"5153a2fd150e46ce57bb3f8db1318d33f6ad3261ed70ceeff92281c0608c74a3","210d54cd652ec0fec8c8916e4af59bb341065576ecda039842f9ffb2e908507c","36b03690b628eab08703d63f04eaa89c5df202e5f1edf3989f13ad389cd2c091","0effadd232a20498b11308058e334d3339cc5bf8c4c858393e38d9d4c0013dcf","25846d43937c672bab7e8195f3d881f93495df712ee901860effc109918938cc","fd93cee2621ff42dabe57b7be402783fd1aa69ece755bcba1e0290547ae60513","1b952304137851e45bc009785de89ada562d9376177c97e37702e39e60c2f1ff","69ee23dd0d215b09907ad30d23f88b7790c93329d1faf31d7835552a10cf7cbf","44b8b584a338b190a59f4f6929d072431950c7bd92ec2694821c11bce180c8a5","23b89798789dffbd437c0c423f5d02d11f9736aea73d6abf16db4f812ff36eda","223c37f62ce09a3d99e77498acdee7b2705a4ae14552fbdb4093600cd9164f3f",{"version":"970a90f76d4d219ad60819d61f5994514087ba94c985647a3474a5a3d12714ed","affectsGlobalScope":true},"e10177274a35a9d07c825615340b2fcde2f610f53f3fb40269fd196b4288dda6","4c8525f256873c7ba3135338c647eaf0ca7115a1a2805ae2d0056629461186ce","3c13ef48634e7b5012fcf7e8fce7496352c2d779a7201389ca96a2a81ee4314d","5d0a25ec910fa36595f85a67ac992d7a53dd4064a1ba6aea1c9f14ab73a023f2",{"version":"f0900cd5d00fe1263ff41201fb8073dbeb984397e4af3b8002a5c207a30bdc33","affectsGlobalScope":true},{"version":"4c50342e1b65d3bee2ed4ab18f84842d5724ad11083bd666d8705dc7a6079d80","affectsGlobalScope":true},"06d7c42d256f0ce6afe1b2b6cfbc97ab391f29dadb00dd0ae8e8f23f5bc916c3","ec4bd1b200670fb567920db572d6701ed42a9641d09c4ff6869768c8f81b404c","e59a892d87e72733e2a9ca21611b9beb52977be2696c7ba4b216cbbb9a48f5aa",{"version":"da26af7362f53d122283bc69fed862b9a9fe27e01bc6a69d1d682e0e5a4df3e6","affectsGlobalScope":true},"8a300fa9b698845a1f9c41ecbe2c5966634582a8e2020d51abcace9b55aa959e",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"8dbe725f8d237e70310977afcfa011629804d101ebaa0266cafda6b61ad72236","01f7828047b5c6703d3c601473618b448f5506a88fcac852638b0715c3abf4eb","7bf3de0c35445f6a98bd5a88d0efe530963d762ff0f2443db010d40900770783","d22b49f8270b572e27a0e02854270c7b9848f693a5c93f7dccf4b08543b913dd","0144d077b79cbc1230472f455a04977b3702f60ff094889e731a555e8ac3d54d","f17d0f19ad9242b09b68a6d30402a841a7d4194d063855da5ca0567df0fb310e",{"version":"726501190402401d40562ea6b91ddd84981b10e5a0c08fb88275b56dad6f3480","signature":"65b2ce8a900bd729c899ef9a0176dd81e5430ec452e9ef2e42713ae89485c95d"},{"version":"71325a9006f3142baf41cb802fd1dd928f3edf6385de1e1fbb85a38825154ac2","signature":"d40e0499c489b01eea4b2b8704dcca8a6f4b7a20a6b17d0094abe7cc7ec62de5"},"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","1ee47e6ed1cf98c573934f9a63e65cd7acf7314a2654da2630c2be6bda12871b","8fcc2bc8dae2c29f7db02ca5112f343936e544bab0dd66c997ec2045fae4b660","89a120f976e17500b9e242637ae377462850517b04aa45981c92c60a490386ee","5e27d8df0309ba8dbd8459750ef7c2c1db5aedeabbc819220a1ecca79c84f4dc","8ef5395d145d1ae1306c20580380779723542f0a4d5c22c0dfe536d5922022ec","155d9f9576b2bb2662e58b8dc5979c3b614250c3279bbdddfbe54749b0ef2ec2","8a9e43259a9f444d80be68f87fd5d8a90c7915b519ef2d3e434d68a835490978","ee80d37ca2d62bd6e33106596fdf39827c248fab4b6dedcee5bdf6f9b4fca454","e95f565a375c039e04187524457c39b362419bdd537afcd52162e8df04e1f87c","d57804e7c53f370b8df0417df2aaea2c5cc2bcae96d6bb06f6bbdf8c3f06f939","a4dad01f270d6cd8ff8d8229d0975833ebf847e560dafaded532f8e31a497ecf","4e78c87355f7e4fd9524d7582a14bf72771aeee33acb73a848de8bf2e44d8831","71a2be4b91958938b4ada303568f2b7fedab5e7e8bc36ca952d51e10e712ae75",{"version":"af694603c4db838df22e38f3ca074adc303bae91893496db6e7c6fbc133a858c","signature":"be481c69c09d6b3c017b95fc297fd20bf46e309a114c82a3964078248703803b"},{"version":"7e49dd360dcf593454c9867bef859f06c7be056d27ce82b769c8377ce0b5cbea","signature":"40b1a00329ba61754ea09099a541129bca34bc48c0c5a95ef0189187dd9e9d03"},{"version":"02d092b379b16ff69c8d23f955ebd21228ecb0140ce222d54b06f7e0c240cba4","signature":"19048634899c590f489e5755a787e1d62e68378ad0b4ec18762d843ea1c9b767"},{"version":"9ebf593906ebfa82abf40cb001c8f0c519b654f6848ce1034ee788fe75aa11de","signature":"1df3a2ecb2e7ca598c6ff44211b34437118d13fc5faec07133575d99912db841"},{"version":"b2cd7cafdd40cb8d53681f9a97dd90fddaf15e4592298ce25129d4addbf98f4e","signature":"558ab3fc829949cc1c7c3b2f1c47d0bdb058454686545b789015a289e9c14f8d"},{"version":"a7a40fc1f085c6179e668a361e68278db06cd4c4c77f8bd01ad0470d7dbda8ec","signature":"693d6b5e82504c936a8b7c4edeccde1a6d7718080c36440bae81883e55f291fb"},{"version":"8005d1c010c03b480d2af026f6ef625ea2fd00ddb9ff6e2e1432853f05668906","signature":"f1e475904d2cf7066bdaea303fd0ff809695199821991d8cb13ac262ad6ce13b"},"0cdd9231111c28c24791f077f8c40ba05cda39c3f6e128a74c47ba0695873760",{"version":"d33ac4d91894de5be1f8bb2b149e2480db5437d2809d3447bd4df7455fd02f9c","signature":"99d32d860b57de27f607b4f68e161284fba79b68f14baf24de26913b8edfdc3e"},{"version":"376001f97e255ef4de6b0f31c58bbf422c7b4100fe56b18fd629a5ca70375c22","signature":"16c92423e184a84a565386a556c53bc3971df9b94419336ce49767b0e6adb7d7"},{"version":"5ee61fed9dcf795684dc790a92eff9618fd798838f84e275f3dc118fba7723d3","signature":"3668c8ad65186d367166f4d9f006b38efdab342a4dda965405873dc142c5150a"},{"version":"fc93367dc29945c0de35a272df893f9430951da1836dff77ba8b20fa6963cc3f","signature":"4c287557792689709bdf7e37f070f411c1a452c0acc80c0e6e5cbfde63e70323"},{"version":"efb364dea9a062e4bdd1984acc434810b9f9bf5bbb61cf0c5c08ad09e12e995d","signature":"dd4ddfd8ffe98c2e9db71fb6015954b74d144eb5822d3c4b9d1653fd1a9d4251"},{"version":"6cff4dcd1d456e74ed151183348ee255c2f34ef31d600fea28e4c6aefb7236d6","signature":"3736a3029e8273bdbebd370fea48894a7155abe5be6e6d6c7afac0c42ad73a14"},{"version":"730d4811a955ab26b732a5354216f48cdaec76a6f22e1f361a3394c870491759","signature":"090887d5c88e758a67be7f5f2dcd04d2eb848d826f89043ef53bc8a77fcdb219"},{"version":"acc7cfcc68d11a4cca207465b2f403b53cb0a29e459c4446f26a2b6b198ba2cc","signature":"c843501f6bbea4f90c89e1c882f3cd7e54ca78615d5da116d95d9584da0f2cf1"},{"version":"42100fa5e7fdf2aed8e75b8f276fcead4e4ecf0e0fe1cdcb6373f170fb50847a","signature":"a446da6f68aaa38de1220496272b9e08309a62769096cb9a4b5f432f22e0cfae"},"57659512730fa328707c7298d9b456519ac0b67de66695d05d511c1d802c7af5","a78ff27f388106730c96a13e521c1932e5f3244a6ff3c50fcda97f875805de7a","62af76d6b869b5348da04ad19e518b6c1320777d89dffb453d5b8a5b269c7ea7","f7b67cc79299969ff137659f87afa0426a9402a707cf6eb676ebd3bf4129632f","7c4cf63c71004591e0b63241787a76186846d42af419c31e100c6f2468441bd9","a0add096903b1e0ddd4edd8f0ea2f5500f75d6aac4b5f865a224efd04bfd399e","29b7e998e464d3a8d84e4363ba66b7d23150321ff38a6be23fd1194e53c07372","f85e69162986c567ba739068482c6646ca71d007c5b30fe8084de733b4de59d8","8d194a0b1c9226020fe78f740bcfcde0d8d32327f91f567c82f73bc16b2f45e8","69e7ebc85cebd16d481551549d3877ae455bddf5ea42ce676e4e0fb5f48ba4d7","888c7a8dd0fcf26547c4e33ebcd27a970d367974f47b8314715410f1ea4fcca7",{"version":"cee63d59ff9b8e006301206aaf721fac1f11a7f74fa68dd7c0d15e6511e69c12","signature":"8f2c1b2282f5e8ea833e18182209672addf744531d1a08540d96f631e006ef80"},{"version":"62a5fbd9ea868599230c240ef133a322295266e3eba36834efd8657d5f8090e1","signature":"6f7aa1d4c08dd255a991dd645123969567d69bff44936848586b3c42fabc87f8"},{"version":"d4008653291cc23425a6a578b3ea3eab76ecb04ae5d60c814e452e712559fbaf","signature":"9c63f434a45ac174f7731f806ac76ecaf0cd7dbb871f6e5833c7b3e99d520562"},{"version":"98d27b136bf6ece21f624a4e73e3ff335d8a985c01f3167d620c324f501c3908","signature":"71f89070e559b4ce94b93ec00a7041509694cb7d8ba88d27ca284e11d97fed49"},{"version":"3de6666d34978c49f51e5920b17c929d80f142547729a85aa2ebb3b13c77fede","signature":"3b02eb5abbbf6e37836edf4271fb3d43123b5df5b6b4f09f0d241b0671bfcf6b"},{"version":"05b88e55de044f2584a855ea2cf3746c19806a7435cfef563485b3ede424640e","signature":"2391cd1770b11d1417e9620207a7d7b65e703aa6c307b3c13b4a49fc0f9b8ea9"},{"version":"2fde45f6e5bda67f5ac4aa02790a0c59bfccf2de7e07b895ef2a28d7e53c6b3a","signature":"8344613c5548777c6fdc9de02f6ccfec07d77783a379620f5d8501674c1738df"},{"version":"4aaafd5ec6ed19d8f3a3578bae5598801f5b3c413e219f3f266364be20a0e94e","signature":"89eb32a456efbb55cb9f319bea1e70201f0615afbe9b8d80575a5d1ad789ca95"},{"version":"feb7efa70aeced2d30e87be20b54cac82b63b503d944c69db70eee64d426356d","signature":"26483204d437d75adf4625e6e4be7b6a0303b55703c2e0e594a03ffe506f4995"},{"version":"677646e2620795c98a539fb12fb531f10331c217cef1492132b2518f894fa92d","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":false,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitAny":false,"noImplicitReturns":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","sourceMap":true,"strict":true,"target":4},"fileIdsList":[[89,96],[89],[43,89],[46,89],[47,52,80,89],[48,59,60,67,77,88,89],[48,49,59,67,89],[50,89],[51,52,60,68,89],[52,77,85,89],[53,55,59,67,89],[54,89],[55,56,89],[59,89],[57,59,89],[59,60,61,77,88,89],[59,60,61,74,77,80,89],[89,93],[55,62,67,77,88,89],[59,60,62,63,67,77,85,88,89],[62,64,77,85,88,89],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],[59,65,89],[66,88,89],[55,59,67,77,89],[68,89],[69,89],[46,70,89],[71,87,89,93],[72,89],[73,89],[59,74,75,89],[74,76,89,91],[47,59,77,78,79,80,89],[47,77,79,89],[77,78,89],[80,89],[81,89],[59,83,84,89],[83,84,89],[52,67,77,85,89],[86,89],[67,87,89],[47,62,73,88,89],[52,89],[77,89,90],[89,91],[89,92],[47,52,59,61,70,77,88,89,91,93],[77,89,94],[89,96,97,107,111],[89,96,97,107],[47,89,96,97,107],[89,97,106],[89,96,107],[89,107,108,109,110,111,112,113,114,115,116],[89,96,111],[89,96,97,107,109,110],[89,96,105],[89,96,97],[62,64,67,89],[89,98],[62,64,89,99],[89,97],[89,98,103,117],[89,98,100,103,118,121,122,123,125,127,128,129,131,132,133,134,147,148,149,150,152,153],[89,98,118,122,127,129,130,131,134],[89,98,122,127,128],[89,118,151],[89,98,128,134],[89,98,101,118,122,125,126,134],[89,122,123,125,129,131,132,133,134],[89,117,122,125,131,134],[89,98,122,128,129],[89,98,121],[89,98,101,102,103,118],[89,122,146],[89,98,118,122,125,126,127,129,130,131,132,133],[89,101,102,103,118,119,120],[89,122,135,136,137,138,139,140,141,142,143,144,145],[89,122],[89,124],[89,118],[89,120,123,124],[103],[103,122,123,125,127,128,129,131,132,133,134,149,153],[122,131],[122,128],[151],[128],[122,125,126],[123,131,132],[121],[102,103],[122],[118,122,125,131,132],[118,120],[124],[118]],"referencedMap":[[97,1],[155,2],[43,3],[44,3],[46,4],[47,5],[48,6],[49,7],[50,8],[51,9],[52,10],[53,11],[54,12],[55,13],[56,13],[58,14],[57,15],[59,14],[60,16],[61,17],[45,18],[95,2],[62,19],[63,20],[64,21],[96,22],[65,23],[66,24],[67,25],[68,26],[69,27],[70,28],[71,29],[72,30],[73,31],[74,32],[75,32],[76,33],[77,34],[79,35],[78,36],[80,37],[81,38],[82,2],[83,39],[84,40],[85,41],[86,42],[87,43],[88,44],[89,45],[90,46],[91,47],[92,48],[93,49],[94,50],[104,2],[112,51],[109,52],[110,51],[108,53],[107,54],[113,55],[117,56],[116,2],[115,2],[114,57],[111,58],[106,59],[105,60],[8,2],[10,2],[9,2],[2,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[3,2],[4,2],[22,2],[19,2],[20,2],[21,2],[23,2],[24,2],[25,2],[5,2],[26,2],[27,2],[28,2],[29,2],[6,2],[33,2],[30,2],[31,2],[32,2],[34,2],[7,2],[35,2],[40,2],[41,2],[36,2],[37,2],[38,2],[39,2],[1,2],[42,2],[99,61],[101,62],[100,63],[98,64],[143,2],[144,2],[145,2],[135,2],[136,2],[137,2],[138,2],[139,2],[140,2],[141,2],[142,2],[118,65],[151,2],[154,66],[133,67],[153,68],[152,69],[129,70],[127,71],[150,72],[149,73],[130,74],[148,75],[119,76],[147,77],[134,78],[121,79],[146,80],[123,81],[122,2],[132,2],[102,2],[103,2],[131,82],[128,82],[124,83],[126,82],[125,84],[120,2]],"exportedModulesMap":[[97,1],[155,2],[43,3],[44,3],[46,4],[47,5],[48,6],[49,7],[50,8],[51,9],[52,10],[53,11],[54,12],[55,13],[56,13],[58,14],[57,15],[59,14],[60,16],[61,17],[45,18],[95,2],[62,19],[63,20],[64,21],[96,22],[65,23],[66,24],[67,25],[68,26],[69,27],[70,28],[71,29],[72,30],[73,31],[74,32],[75,32],[76,33],[77,34],[79,35],[78,36],[80,37],[81,38],[82,2],[83,39],[84,40],[85,41],[86,42],[87,43],[88,44],[89,45],[90,46],[91,47],[92,48],[93,49],[94,50],[104,2],[112,51],[109,52],[110,51],[108,53],[107,54],[113,55],[117,56],[116,2],[115,2],[114,57],[111,58],[106,59],[105,60],[8,2],[10,2],[9,2],[2,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[3,2],[4,2],[22,2],[19,2],[20,2],[21,2],[23,2],[24,2],[25,2],[5,2],[26,2],[27,2],[28,2],[29,2],[6,2],[33,2],[30,2],[31,2],[32,2],[34,2],[7,2],[35,2],[40,2],[41,2],[36,2],[37,2],[38,2],[39,2],[1,2],[42,2],[99,61],[101,62],[100,63],[98,64],[143,2],[144,2],[145,2],[135,2],[136,2],[137,2],[138,2],[139,2],[140,2],[141,2],[142,2],[118,85],[154,86],[133,87],[153,88],[152,89],[129,90],[127,91],[150,92],[149,87],[130,88],[148,93],[119,94],[147,95],[134,96],[121,97],[146,95],[123,95],[131,98],[128,98],[124,99],[126,98],[125,84]],"semanticDiagnosticsPerFile":[97,155,43,44,46,47,48,49,50,51,52,53,54,55,56,58,57,59,60,61,45,95,62,63,64,96,65,66,67,68,69,70,71,72,73,74,75,76,77,79,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,104,112,109,110,108,107,113,117,116,115,114,111,106,105,8,10,9,2,11,12,13,14,15,16,17,18,3,4,22,19,20,21,23,24,25,5,26,27,28,29,6,33,30,31,32,34,7,35,40,41,36,37,38,39,1,42,99,101,100,98,143,144,145,135,136,137,138,139,140,141,142,118,151,154,133,153,152,129,127,150,149,130,148,119,147,134,121,146,123,122,132,102,103,131,128,124,126,125,120]},"version":"4.9.5"}
\ No newline at end of file
+{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostics_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/dom-events.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/readline/promises.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/stream/consumers.d.ts","../../node_modules/@types/node/stream/web.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/test.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/@types/bn.js/index.d.ts","../../node_modules/web3-utils/types/index.d.ts","../../node_modules/web3-core-helpers/types/index.d.ts","../../node_modules/web3-providers-http/types/index.d.ts","../../node_modules/web3-eth-abi/types/index.d.ts","../../src/types/jsonrpc.ts","../../src/types/method.ts","../../node_modules/buffer/index.d.ts","../../node_modules/rlp/dist/types.d.ts","../../node_modules/rlp/dist/index.d.ts","../../node_modules/ethereumjs-util/dist/externals.d.ts","../../node_modules/ethereumjs-util/dist/constants.d.ts","../../node_modules/ethereumjs-util/dist/address.d.ts","../../node_modules/ethereumjs-util/dist/bytes.d.ts","../../node_modules/ethereumjs-util/dist/types.d.ts","../../node_modules/ethereumjs-util/dist/account.d.ts","../../node_modules/ethereumjs-util/dist/hash.d.ts","../../node_modules/ethereumjs-util/dist/signature.d.ts","../../node_modules/ethereumjs-util/dist/object.d.ts","../../node_modules/ethereumjs-util/dist/internal.d.ts","../../node_modules/ethereumjs-util/dist/index.d.ts","../../src/constants/constants.ts","../../src/lib/provider-wrapper-utils.ts","../../src/types/provider.ts","../../src/provider/providerwrapper.ts","../../src/types/erc725jsonschema.ts","../../src/types/config.ts","../../src/types/encodedata/jsonurl.ts","../../src/types/index.ts","../../src/types/encodedata/index.ts","../../src/lib/encoder.ts","../../src/types/dynamickeys.ts","../../src/lib/encodekeyname.ts","../../src/lib/getschemaelement.ts","../../src/types/decodedata.ts","../../src/types/getdata.ts","../../src/lib/decodedata.ts","../../src/lib/utils.ts","../../schemas/lsp1universalreceiverdelegate.json","../../schemas/lsp3profilemetadata.json","../../schemas/lsp4digitalasset.json","../../schemas/lsp4digitalassetlegacy.json","../../schemas/lsp5receivedassets.json","../../schemas/lsp6keymanager.json","../../schemas/lsp8identifiabledigitalasset.json","../../schemas/lsp9vault.json","../../schemas/lsp10receivedvaults.json","../../schemas/lsp12issuedassets.json","../../schemas/lsp17contractextension.json","../../src/schemas/index.ts","../../src/lib/schemaparser.ts","../../src/lib/isvalidsignature.ts","../../src/lib/getdatafromexternalsources.ts","../../src/lib/getdata.ts","../../src/constants/interfaces.ts","../../src/lib/detector.ts","../../src/lib/decodemappingkey.ts","../../src/index.ts","../../node_modules/@types/mocha/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"7e771891adaa85b690266bc37bd6eb43bc57eecc4b54693ead36467e7369952a","a69c09dbea52352f479d3e7ac949fde3d17b195abe90b045d619f747b38d6d1a",{"version":"ca72190df0eb9b09d4b600821c8c7b6c9747b75a1c700c4d57dc0bb72abc074c","affectsGlobalScope":true},"21a167fec8f933752fb8157f06d28fab6817af3ad9b0bdb1908a10762391eab9",{"version":"bb65c6267c5d6676be61acbf6604cf0a4555ac4b505df58ac15c831fcbff4e3e","affectsGlobalScope":true},"374ca798f244e464346f14301dc2a8b4b111af1a83b49fffef5906c338a1f922","5a94487653355b56018122d92392beb2e5f4a6c63ba5cef83bbe1c99775ef713",{"version":"d5135ad93b33adcce80b18f8065087934cdc1730d63db58562edcf017e1aad9b","affectsGlobalScope":true},"82408ed3e959ddc60d3e9904481b5a8dc16469928257af22a3f7d1a3bc7fd8c4","dab86d9604fe40854ef3c0a6f9e8948873dc3509213418e5e457f410fd11200f","bb9c4ffa5e6290c6980b63c815cdd1625876dadb2efaf77edbe82984be93e55e","489532ff54b714f0e0939947a1c560e516d3ae93d51d639ab02e907a0e950114","f30bb836526d930a74593f7b0f5c1c46d10856415a8f69e5e2fc3db80371e362","14b5aa23c5d0ae1907bc696ac7b6915d88f7d85799cc0dc2dcf98fbce2c5a67c","5c439dafdc09abe4d6c260a96b822fa0ba5be7203c71a63ab1f1423cd9e838ea",{"version":"6b526a5ec4a401ca7c26cfe6a48e641d8f30af76673bad3b06a1b4504594a960","affectsGlobalScope":true},{"version":"816ad2e607a96de5bcac7d437f843f5afd8957f1fa5eefa6bba8e4ed7ca8fd84","affectsGlobalScope":true},"cec36af22f514322f870e81d30675c78df82ae8bf4863f5fd4e4424c040c678d","d903fafe96674bc0b2ac38a5be4a8fc07b14c2548d1cdb165a80ea24c44c0c54","5eec82ac21f84d83586c59a16b9b8502d34505d1393393556682fe7e7fde9ef2","04eb6578a588d6a46f50299b55f30e3a04ef27d0c5a46c57d8fcc211cd530faa","8d3c583a07e0c37e876908c2d5da575019f689df8d9fa4c081d99119d53dba22","2c828a5405191d006115ab34e191b8474bc6c86ffdc401d1a9864b1b6e088a58",{"version":"e630e5528e899219ae319e83bef54bf3bcb91b01d76861ecf881e8e614b167f0","affectsGlobalScope":true},"d076fede3cb042e7b13fc29442aaa03a57806bc51e2b26a67a01fbc66a7c0c12","7c013aa892414a7fdcfd861ae524a668eaa3ede8c7c0acafaf611948122c8d93","b0973c3cbcdc59b37bf477731d468696ecaf442593ec51bab497a613a580fe30",{"version":"4989e92ba5b69b182d2caaea6295af52b7dc73a4f7a2e336a676722884e7139d","affectsGlobalScope":true},{"version":"b3624aed92dab6da8484280d3cb3e2f4130ec3f4ef3f8201c95144ae9e898bb6","affectsGlobalScope":true},"5153a2fd150e46ce57bb3f8db1318d33f6ad3261ed70ceeff92281c0608c74a3","210d54cd652ec0fec8c8916e4af59bb341065576ecda039842f9ffb2e908507c","36b03690b628eab08703d63f04eaa89c5df202e5f1edf3989f13ad389cd2c091","0effadd232a20498b11308058e334d3339cc5bf8c4c858393e38d9d4c0013dcf","25846d43937c672bab7e8195f3d881f93495df712ee901860effc109918938cc","fd93cee2621ff42dabe57b7be402783fd1aa69ece755bcba1e0290547ae60513","1b952304137851e45bc009785de89ada562d9376177c97e37702e39e60c2f1ff","69ee23dd0d215b09907ad30d23f88b7790c93329d1faf31d7835552a10cf7cbf","44b8b584a338b190a59f4f6929d072431950c7bd92ec2694821c11bce180c8a5","23b89798789dffbd437c0c423f5d02d11f9736aea73d6abf16db4f812ff36eda","223c37f62ce09a3d99e77498acdee7b2705a4ae14552fbdb4093600cd9164f3f",{"version":"970a90f76d4d219ad60819d61f5994514087ba94c985647a3474a5a3d12714ed","affectsGlobalScope":true},"e10177274a35a9d07c825615340b2fcde2f610f53f3fb40269fd196b4288dda6","4c8525f256873c7ba3135338c647eaf0ca7115a1a2805ae2d0056629461186ce","3c13ef48634e7b5012fcf7e8fce7496352c2d779a7201389ca96a2a81ee4314d","5d0a25ec910fa36595f85a67ac992d7a53dd4064a1ba6aea1c9f14ab73a023f2",{"version":"f0900cd5d00fe1263ff41201fb8073dbeb984397e4af3b8002a5c207a30bdc33","affectsGlobalScope":true},{"version":"4c50342e1b65d3bee2ed4ab18f84842d5724ad11083bd666d8705dc7a6079d80","affectsGlobalScope":true},"06d7c42d256f0ce6afe1b2b6cfbc97ab391f29dadb00dd0ae8e8f23f5bc916c3","ec4bd1b200670fb567920db572d6701ed42a9641d09c4ff6869768c8f81b404c","e59a892d87e72733e2a9ca21611b9beb52977be2696c7ba4b216cbbb9a48f5aa",{"version":"da26af7362f53d122283bc69fed862b9a9fe27e01bc6a69d1d682e0e5a4df3e6","affectsGlobalScope":true},"8a300fa9b698845a1f9c41ecbe2c5966634582a8e2020d51abcace9b55aa959e",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"8dbe725f8d237e70310977afcfa011629804d101ebaa0266cafda6b61ad72236","01f7828047b5c6703d3c601473618b448f5506a88fcac852638b0715c3abf4eb","7bf3de0c35445f6a98bd5a88d0efe530963d762ff0f2443db010d40900770783","d22b49f8270b572e27a0e02854270c7b9848f693a5c93f7dccf4b08543b913dd","0144d077b79cbc1230472f455a04977b3702f60ff094889e731a555e8ac3d54d","f17d0f19ad9242b09b68a6d30402a841a7d4194d063855da5ca0567df0fb310e",{"version":"726501190402401d40562ea6b91ddd84981b10e5a0c08fb88275b56dad6f3480","signature":"65b2ce8a900bd729c899ef9a0176dd81e5430ec452e9ef2e42713ae89485c95d"},{"version":"71325a9006f3142baf41cb802fd1dd928f3edf6385de1e1fbb85a38825154ac2","signature":"d40e0499c489b01eea4b2b8704dcca8a6f4b7a20a6b17d0094abe7cc7ec62de5"},"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","1ee47e6ed1cf98c573934f9a63e65cd7acf7314a2654da2630c2be6bda12871b","8fcc2bc8dae2c29f7db02ca5112f343936e544bab0dd66c997ec2045fae4b660","89a120f976e17500b9e242637ae377462850517b04aa45981c92c60a490386ee","5e27d8df0309ba8dbd8459750ef7c2c1db5aedeabbc819220a1ecca79c84f4dc","8ef5395d145d1ae1306c20580380779723542f0a4d5c22c0dfe536d5922022ec","155d9f9576b2bb2662e58b8dc5979c3b614250c3279bbdddfbe54749b0ef2ec2","8a9e43259a9f444d80be68f87fd5d8a90c7915b519ef2d3e434d68a835490978","ee80d37ca2d62bd6e33106596fdf39827c248fab4b6dedcee5bdf6f9b4fca454","e95f565a375c039e04187524457c39b362419bdd537afcd52162e8df04e1f87c","d57804e7c53f370b8df0417df2aaea2c5cc2bcae96d6bb06f6bbdf8c3f06f939","a4dad01f270d6cd8ff8d8229d0975833ebf847e560dafaded532f8e31a497ecf","4e78c87355f7e4fd9524d7582a14bf72771aeee33acb73a848de8bf2e44d8831","71a2be4b91958938b4ada303568f2b7fedab5e7e8bc36ca952d51e10e712ae75",{"version":"af694603c4db838df22e38f3ca074adc303bae91893496db6e7c6fbc133a858c","signature":"be481c69c09d6b3c017b95fc297fd20bf46e309a114c82a3964078248703803b"},{"version":"7e49dd360dcf593454c9867bef859f06c7be056d27ce82b769c8377ce0b5cbea","signature":"40b1a00329ba61754ea09099a541129bca34bc48c0c5a95ef0189187dd9e9d03"},{"version":"02d092b379b16ff69c8d23f955ebd21228ecb0140ce222d54b06f7e0c240cba4","signature":"19048634899c590f489e5755a787e1d62e68378ad0b4ec18762d843ea1c9b767"},{"version":"9ebf593906ebfa82abf40cb001c8f0c519b654f6848ce1034ee788fe75aa11de","signature":"1df3a2ecb2e7ca598c6ff44211b34437118d13fc5faec07133575d99912db841"},{"version":"b2cd7cafdd40cb8d53681f9a97dd90fddaf15e4592298ce25129d4addbf98f4e","signature":"558ab3fc829949cc1c7c3b2f1c47d0bdb058454686545b789015a289e9c14f8d"},{"version":"a7a40fc1f085c6179e668a361e68278db06cd4c4c77f8bd01ad0470d7dbda8ec","signature":"693d6b5e82504c936a8b7c4edeccde1a6d7718080c36440bae81883e55f291fb"},{"version":"8005d1c010c03b480d2af026f6ef625ea2fd00ddb9ff6e2e1432853f05668906","signature":"f1e475904d2cf7066bdaea303fd0ff809695199821991d8cb13ac262ad6ce13b"},"0cdd9231111c28c24791f077f8c40ba05cda39c3f6e128a74c47ba0695873760",{"version":"d33ac4d91894de5be1f8bb2b149e2480db5437d2809d3447bd4df7455fd02f9c","signature":"99d32d860b57de27f607b4f68e161284fba79b68f14baf24de26913b8edfdc3e"},{"version":"376001f97e255ef4de6b0f31c58bbf422c7b4100fe56b18fd629a5ca70375c22","signature":"16c92423e184a84a565386a556c53bc3971df9b94419336ce49767b0e6adb7d7"},{"version":"5ee61fed9dcf795684dc790a92eff9618fd798838f84e275f3dc118fba7723d3","signature":"3668c8ad65186d367166f4d9f006b38efdab342a4dda965405873dc142c5150a"},{"version":"fc93367dc29945c0de35a272df893f9430951da1836dff77ba8b20fa6963cc3f","signature":"4c287557792689709bdf7e37f070f411c1a452c0acc80c0e6e5cbfde63e70323"},{"version":"efb364dea9a062e4bdd1984acc434810b9f9bf5bbb61cf0c5c08ad09e12e995d","signature":"dd4ddfd8ffe98c2e9db71fb6015954b74d144eb5822d3c4b9d1653fd1a9d4251"},{"version":"6cff4dcd1d456e74ed151183348ee255c2f34ef31d600fea28e4c6aefb7236d6","signature":"3736a3029e8273bdbebd370fea48894a7155abe5be6e6d6c7afac0c42ad73a14"},{"version":"730d4811a955ab26b732a5354216f48cdaec76a6f22e1f361a3394c870491759","signature":"090887d5c88e758a67be7f5f2dcd04d2eb848d826f89043ef53bc8a77fcdb219"},{"version":"acc7cfcc68d11a4cca207465b2f403b53cb0a29e459c4446f26a2b6b198ba2cc","signature":"c843501f6bbea4f90c89e1c882f3cd7e54ca78615d5da116d95d9584da0f2cf1"},{"version":"42100fa5e7fdf2aed8e75b8f276fcead4e4ecf0e0fe1cdcb6373f170fb50847a","signature":"a446da6f68aaa38de1220496272b9e08309a62769096cb9a4b5f432f22e0cfae"},"57659512730fa328707c7298d9b456519ac0b67de66695d05d511c1d802c7af5","a78ff27f388106730c96a13e521c1932e5f3244a6ff3c50fcda97f875805de7a","62af76d6b869b5348da04ad19e518b6c1320777d89dffb453d5b8a5b269c7ea7","f7b67cc79299969ff137659f87afa0426a9402a707cf6eb676ebd3bf4129632f","7c4cf63c71004591e0b63241787a76186846d42af419c31e100c6f2468441bd9","a0add096903b1e0ddd4edd8f0ea2f5500f75d6aac4b5f865a224efd04bfd399e","29b7e998e464d3a8d84e4363ba66b7d23150321ff38a6be23fd1194e53c07372","f85e69162986c567ba739068482c6646ca71d007c5b30fe8084de733b4de59d8","8d194a0b1c9226020fe78f740bcfcde0d8d32327f91f567c82f73bc16b2f45e8","69e7ebc85cebd16d481551549d3877ae455bddf5ea42ce676e4e0fb5f48ba4d7","888c7a8dd0fcf26547c4e33ebcd27a970d367974f47b8314715410f1ea4fcca7",{"version":"cee63d59ff9b8e006301206aaf721fac1f11a7f74fa68dd7c0d15e6511e69c12","signature":"8f2c1b2282f5e8ea833e18182209672addf744531d1a08540d96f631e006ef80"},{"version":"62a5fbd9ea868599230c240ef133a322295266e3eba36834efd8657d5f8090e1","signature":"6f7aa1d4c08dd255a991dd645123969567d69bff44936848586b3c42fabc87f8"},{"version":"d4008653291cc23425a6a578b3ea3eab76ecb04ae5d60c814e452e712559fbaf","signature":"9c63f434a45ac174f7731f806ac76ecaf0cd7dbb871f6e5833c7b3e99d520562"},{"version":"95263c32fbebfbfa8e488264f6c5dc9f983001f36c3875051a0a0ca8ee1f5c25","signature":"71f89070e559b4ce94b93ec00a7041509694cb7d8ba88d27ca284e11d97fed49"},{"version":"3de6666d34978c49f51e5920b17c929d80f142547729a85aa2ebb3b13c77fede","signature":"3b02eb5abbbf6e37836edf4271fb3d43123b5df5b6b4f09f0d241b0671bfcf6b"},{"version":"05b88e55de044f2584a855ea2cf3746c19806a7435cfef563485b3ede424640e","signature":"2391cd1770b11d1417e9620207a7d7b65e703aa6c307b3c13b4a49fc0f9b8ea9"},{"version":"2fde45f6e5bda67f5ac4aa02790a0c59bfccf2de7e07b895ef2a28d7e53c6b3a","signature":"8344613c5548777c6fdc9de02f6ccfec07d77783a379620f5d8501674c1738df"},{"version":"4aaafd5ec6ed19d8f3a3578bae5598801f5b3c413e219f3f266364be20a0e94e","signature":"89eb32a456efbb55cb9f319bea1e70201f0615afbe9b8d80575a5d1ad789ca95"},{"version":"4fcec4233adff5e3744610568c873fcc81b5a04549839c11b834550857f1db58","signature":"b80ab685a6da4cc0031c2a0ab54772d73e29fa6bbce18e397e68cae493363d66"},{"version":"677646e2620795c98a539fb12fb531f10331c217cef1492132b2518f894fa92d","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":false,"module":1,"noFallthroughCasesInSwitch":true,"noImplicitAny":false,"noImplicitReturns":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","sourceMap":true,"strict":true,"target":4},"fileIdsList":[[89,96],[89],[43,89],[46,89],[47,52,80,89],[48,59,60,67,77,88,89],[48,49,59,67,89],[50,89],[51,52,60,68,89],[52,77,85,89],[53,55,59,67,89],[54,89],[55,56,89],[59,89],[57,59,89],[59,60,61,77,88,89],[59,60,61,74,77,80,89],[89,93],[55,62,67,77,88,89],[59,60,62,63,67,77,85,88,89],[62,64,77,85,88,89],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],[59,65,89],[66,88,89],[55,59,67,77,89],[68,89],[69,89],[46,70,89],[71,87,89,93],[72,89],[73,89],[59,74,75,89],[74,76,89,91],[47,59,77,78,79,80,89],[47,77,79,89],[77,78,89],[80,89],[81,89],[59,83,84,89],[83,84,89],[52,67,77,85,89],[86,89],[67,87,89],[47,62,73,88,89],[52,89],[77,89,90],[89,91],[89,92],[47,52,59,61,70,77,88,89,91,93],[77,89,94],[89,96,97,107,111],[89,96,97,107],[47,89,96,97,107],[89,97,106],[89,96,107],[89,107,108,109,110,111,112,113,114,115,116],[89,96,111],[89,96,97,107,109,110],[89,96,105],[89,96,97],[62,64,67,89],[89,98],[62,64,89,99],[89,97],[89,98,103,117],[89,98,100,103,118,121,122,123,125,127,128,129,131,132,133,134,147,148,149,150,152,153],[89,98,118,122,127,129,130,131,134],[89,98,122,127,128],[89,118,151],[89,98,128,134],[89,98,101,118,122,125,126,134],[89,122,123,125,129,131,132,133,134],[89,117,122,125,131,134],[89,98,122,128,129],[89,98,121],[89,98,101,102,103,118],[89,122,146],[89,98,118,122,125,126,127,129,130,131,132,133],[89,101,102,103,118,119,120],[89,122,135,136,137,138,139,140,141,142,143,144,145],[89,122],[89,124],[89,118],[89,120,123,124],[103],[103,122,123,125,127,128,129,131,132,133,134,149,153],[122,131],[122,128],[151],[128],[122,125,126],[123,131,132],[121],[102,103],[122],[118,122,125,131,132],[118,120],[124],[118]],"referencedMap":[[97,1],[155,2],[43,3],[44,3],[46,4],[47,5],[48,6],[49,7],[50,8],[51,9],[52,10],[53,11],[54,12],[55,13],[56,13],[58,14],[57,15],[59,14],[60,16],[61,17],[45,18],[95,2],[62,19],[63,20],[64,21],[96,22],[65,23],[66,24],[67,25],[68,26],[69,27],[70,28],[71,29],[72,30],[73,31],[74,32],[75,32],[76,33],[77,34],[79,35],[78,36],[80,37],[81,38],[82,2],[83,39],[84,40],[85,41],[86,42],[87,43],[88,44],[89,45],[90,46],[91,47],[92,48],[93,49],[94,50],[104,2],[112,51],[109,52],[110,51],[108,53],[107,54],[113,55],[117,56],[116,2],[115,2],[114,57],[111,58],[106,59],[105,60],[8,2],[10,2],[9,2],[2,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[3,2],[4,2],[22,2],[19,2],[20,2],[21,2],[23,2],[24,2],[25,2],[5,2],[26,2],[27,2],[28,2],[29,2],[6,2],[33,2],[30,2],[31,2],[32,2],[34,2],[7,2],[35,2],[40,2],[41,2],[36,2],[37,2],[38,2],[39,2],[1,2],[42,2],[99,61],[101,62],[100,63],[98,64],[143,2],[144,2],[145,2],[135,2],[136,2],[137,2],[138,2],[139,2],[140,2],[141,2],[142,2],[118,65],[151,2],[154,66],[133,67],[153,68],[152,69],[129,70],[127,71],[150,72],[149,73],[130,74],[148,75],[119,76],[147,77],[134,78],[121,79],[146,80],[123,81],[131,82],[128,82],[126,82],[124,83],[122,2],[132,2],[125,84],[102,2],[103,2],[120,2]],"exportedModulesMap":[[97,1],[155,2],[43,3],[44,3],[46,4],[47,5],[48,6],[49,7],[50,8],[51,9],[52,10],[53,11],[54,12],[55,13],[56,13],[58,14],[57,15],[59,14],[60,16],[61,17],[45,18],[95,2],[62,19],[63,20],[64,21],[96,22],[65,23],[66,24],[67,25],[68,26],[69,27],[70,28],[71,29],[72,30],[73,31],[74,32],[75,32],[76,33],[77,34],[79,35],[78,36],[80,37],[81,38],[82,2],[83,39],[84,40],[85,41],[86,42],[87,43],[88,44],[89,45],[90,46],[91,47],[92,48],[93,49],[94,50],[104,2],[112,51],[109,52],[110,51],[108,53],[107,54],[113,55],[117,56],[116,2],[115,2],[114,57],[111,58],[106,59],[105,60],[8,2],[10,2],[9,2],[2,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[3,2],[4,2],[22,2],[19,2],[20,2],[21,2],[23,2],[24,2],[25,2],[5,2],[26,2],[27,2],[28,2],[29,2],[6,2],[33,2],[30,2],[31,2],[32,2],[34,2],[7,2],[35,2],[40,2],[41,2],[36,2],[37,2],[38,2],[39,2],[1,2],[42,2],[99,61],[101,62],[100,63],[98,64],[143,2],[144,2],[145,2],[135,2],[136,2],[137,2],[138,2],[139,2],[140,2],[141,2],[142,2],[118,85],[154,86],[133,87],[153,88],[152,89],[129,90],[127,91],[150,92],[149,87],[130,88],[148,93],[119,94],[147,95],[134,96],[121,97],[146,95],[123,95],[131,98],[128,98],[126,98],[124,99],[125,84]],"semanticDiagnosticsPerFile":[97,155,43,44,46,47,48,49,50,51,52,53,54,55,56,58,57,59,60,61,45,95,62,63,64,96,65,66,67,68,69,70,71,72,73,74,75,76,77,79,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,104,112,109,110,108,107,113,117,116,115,114,111,106,105,8,10,9,2,11,12,13,14,15,16,17,18,3,4,22,19,20,21,23,24,25,5,26,27,28,29,6,33,30,31,32,34,7,35,40,41,36,37,38,39,1,42,99,101,100,98,143,144,145,135,136,137,138,139,140,141,142,118,151,154,133,153,152,129,127,150,149,130,148,119,147,134,121,146,123,131,128,126,124,122,132,125,102,103,120]},"version":"4.9.5"}
\ No newline at end of file
diff --git a/build/module/src/index.d.ts b/build/module/src/index.d.ts
index c2dbc8fc3dfd7aa37a9b269d74670926223304ec..83a89fb942e462c66ace9cb8befa91d12ac71bcd 100644
--- a/build/module/src/index.d.ts
+++ b/build/module/src/index.d.ts
@@ -12,6 +12,8 @@ export { encodeKeyName } from './lib/encodeKeyName';
 export { decodeMappingKey } from './lib/decodeMappingKey';
 export { decodeValueType, decodeValueContent } from './lib/encoder';
 export { getDataFromExternalSources } from './lib/getDataFromExternalSources';
+export declare function decodePermissions(permissionHex: string): Permissions;
+export declare function encodePermissions(permissions: Permissions): string;
 /**
  * This package is currently in early stages of development, <br/>use only for testing or experimentation purposes.<br/>
  *
@@ -181,32 +183,7 @@ export declare class ERC725 {
      * @param permissionHex The permission hexadecimal value to be decoded.
      * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
      */
-    static decodePermissions(permissionHex: string): {
-        CHANGEOWNER: boolean;
-        ADDCONTROLLER: boolean;
-        EDITPERMISSIONS: boolean;
-        ADDEXTENSIONS: boolean;
-        CHANGEEXTENSIONS: boolean;
-        ADDUNIVERSALRECEIVERDELEGATE: boolean;
-        CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
-        REENTRANCY: boolean;
-        SUPER_TRANSFERVALUE: boolean;
-        TRANSFERVALUE: boolean;
-        SUPER_CALL: boolean;
-        CALL: boolean;
-        SUPER_STATICCALL: boolean;
-        STATICCALL: boolean;
-        SUPER_DELEGATECALL: boolean;
-        DELEGATECALL: boolean;
-        DEPLOY: boolean;
-        SUPER_SETDATA: boolean;
-        SETDATA: boolean;
-        ENCRYPT: boolean;
-        DECRYPT: boolean;
-        SIGN: boolean;
-        EXECUTE_RELAY_CALL: boolean;
-        ERC4337_PERMISSION: boolean;
-    };
+    static decodePermissions(permissionHex: string): Permissions;
     /**
      * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
      *
@@ -214,32 +191,7 @@ export declare class ERC725 {
      * @param permissionHex The permission hexadecimal value to be decoded.
      * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
      */
-    decodePermissions(permissionHex: string): {
-        CHANGEOWNER: boolean;
-        ADDCONTROLLER: boolean;
-        EDITPERMISSIONS: boolean;
-        ADDEXTENSIONS: boolean;
-        CHANGEEXTENSIONS: boolean;
-        ADDUNIVERSALRECEIVERDELEGATE: boolean;
-        CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
-        REENTRANCY: boolean;
-        SUPER_TRANSFERVALUE: boolean;
-        TRANSFERVALUE: boolean;
-        SUPER_CALL: boolean;
-        CALL: boolean;
-        SUPER_STATICCALL: boolean;
-        STATICCALL: boolean;
-        SUPER_DELEGATECALL: boolean;
-        DELEGATECALL: boolean;
-        DEPLOY: boolean;
-        SUPER_SETDATA: boolean;
-        SETDATA: boolean;
-        ENCRYPT: boolean;
-        DECRYPT: boolean;
-        SIGN: boolean;
-        EXECUTE_RELAY_CALL: boolean;
-        ERC4337_PERMISSION: boolean;
-    };
+    decodePermissions(permissionHex: string): Permissions;
     /**
      * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
      *
diff --git a/build/module/src/index.js b/build/module/src/index.js
index 25b48c66bf163cebd953ffaff01f2b544c4d4c16..2ffcfd1584360ae06e122bce0c240ce1048d41b2 100644
--- a/build/module/src/index.js
+++ b/build/module/src/index.js
@@ -47,6 +47,57 @@ export { encodeKeyName } from './lib/encodeKeyName';
 export { decodeMappingKey } from './lib/decodeMappingKey';
 export { decodeValueType, decodeValueContent } from './lib/encoder';
 export { getDataFromExternalSources } from './lib/getDataFromExternalSources';
+export function decodePermissions(permissionHex) {
+    const result = {
+        CHANGEOWNER: false,
+        ADDCONTROLLER: false,
+        EDITPERMISSIONS: false,
+        ADDEXTENSIONS: false,
+        CHANGEEXTENSIONS: false,
+        ADDUNIVERSALRECEIVERDELEGATE: false,
+        CHANGEUNIVERSALRECEIVERDELEGATE: false,
+        REENTRANCY: false,
+        SUPER_TRANSFERVALUE: false,
+        TRANSFERVALUE: false,
+        SUPER_CALL: false,
+        CALL: false,
+        SUPER_STATICCALL: false,
+        STATICCALL: false,
+        SUPER_DELEGATECALL: false,
+        DELEGATECALL: false,
+        DEPLOY: false,
+        SUPER_SETDATA: false,
+        SETDATA: false,
+        ENCRYPT: false,
+        DECRYPT: false,
+        SIGN: false,
+        EXECUTE_RELAY_CALL: false,
+        ERC4337_PERMISSION: false,
+    };
+    const permissionsToTest = Object.keys(LSP6_DEFAULT_PERMISSIONS);
+    if (permissionHex === LSP6_ALL_PERMISSIONS) {
+        permissionsToTest.forEach((testPermission) => {
+            result[testPermission] = true;
+        });
+        return result;
+    }
+    const passedPermissionDecimal = Number(hexToNumber(permissionHex));
+    permissionsToTest.forEach((testPermission) => {
+        const decimalTestPermission = Number(hexToNumber(LSP6_DEFAULT_PERMISSIONS[testPermission]));
+        const isPermissionIncluded = (passedPermissionDecimal & decimalTestPermission) ===
+            decimalTestPermission;
+        result[testPermission] = isPermissionIncluded;
+    });
+    return result;
+}
+export function encodePermissions(permissions) {
+    const result = Object.keys(permissions).reduce((previous, key) => {
+        return permissions[key]
+            ? previous | Number(hexToNumber(LSP6_DEFAULT_PERMISSIONS[key]))
+            : previous;
+    }, 0);
+    return leftPad(toHex(result), 64);
+}
 /**
  * This package is currently in early stages of development, <br/>use only for testing or experimentation purposes.<br/>
  *
@@ -285,12 +336,7 @@ export class ERC725 {
      * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
      */
     static encodePermissions(permissions) {
-        const result = Object.keys(permissions).reduce((previous, key) => {
-            return permissions[key]
-                ? previous | Number(hexToNumber(LSP6_DEFAULT_PERMISSIONS[key]))
-                : previous;
-        }, 0);
-        return leftPad(toHex(result), 64);
+        return encodePermissions(permissions);
     }
     /**
      * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
@@ -300,7 +346,7 @@ export class ERC725 {
      * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
      */
     encodePermissions(permissions) {
-        return ERC725.encodePermissions(permissions);
+        return encodePermissions(permissions);
     }
     /**
      * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
@@ -310,47 +356,7 @@ export class ERC725 {
      * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
      */
     static decodePermissions(permissionHex) {
-        const result = {
-            CHANGEOWNER: false,
-            ADDCONTROLLER: false,
-            EDITPERMISSIONS: false,
-            ADDEXTENSIONS: false,
-            CHANGEEXTENSIONS: false,
-            ADDUNIVERSALRECEIVERDELEGATE: false,
-            CHANGEUNIVERSALRECEIVERDELEGATE: false,
-            REENTRANCY: false,
-            SUPER_TRANSFERVALUE: false,
-            TRANSFERVALUE: false,
-            SUPER_CALL: false,
-            CALL: false,
-            SUPER_STATICCALL: false,
-            STATICCALL: false,
-            SUPER_DELEGATECALL: false,
-            DELEGATECALL: false,
-            DEPLOY: false,
-            SUPER_SETDATA: false,
-            SETDATA: false,
-            ENCRYPT: false,
-            DECRYPT: false,
-            SIGN: false,
-            EXECUTE_RELAY_CALL: false,
-            ERC4337_PERMISSION: false,
-        };
-        const permissionsToTest = Object.keys(LSP6_DEFAULT_PERMISSIONS);
-        if (permissionHex === LSP6_ALL_PERMISSIONS) {
-            permissionsToTest.forEach((testPermission) => {
-                result[testPermission] = true;
-            });
-            return result;
-        }
-        const passedPermissionDecimal = Number(hexToNumber(permissionHex));
-        permissionsToTest.forEach((testPermission) => {
-            const decimalTestPermission = Number(hexToNumber(LSP6_DEFAULT_PERMISSIONS[testPermission]));
-            const isPermissionIncluded = (passedPermissionDecimal & decimalTestPermission) ===
-                decimalTestPermission;
-            result[testPermission] = isPermissionIncluded;
-        });
-        return result;
+        return decodePermissions(permissionHex);
     }
     /**
      * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
@@ -360,7 +366,7 @@ export class ERC725 {
      * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
      */
     decodePermissions(permissionHex) {
-        return ERC725.decodePermissions(permissionHex);
+        return decodePermissions(permissionHex);
     }
     /**
      * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
diff --git a/build/module/src/index.js.map b/build/module/src/index.js.map
index 93e61ea850ce9ac0462c714562dbe4869d266bbd..b8f871d157ad2a86ab9ecbac4cd328506ea13e50 100644
--- a/build/module/src/index.js.map
+++ b/build/module/src/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/index.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/build/module/src/lib/ERC725.d.ts b/build/module/src/lib/ERC725.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..5bd3725d0012ce069f6a937605614fd91b0f9188
--- /dev/null
+++ b/build/module/src/lib/ERC725.d.ts
@@ -0,0 +1,324 @@
+import { ERC725Config, ERC725Options } from '../types/Config';
+import { Permissions } from '../types/Method';
+import { ERC725JSONSchema } from '../types/ERC725JSONSchema';
+import { DecodeDataInput, DecodeDataOutput, EncodeDataInput, FetchDataOutput } from '../types/decodeData';
+import { GetDataDynamicKey } from '../types/GetData';
+import { DynamicKeyPart, DynamicKeyParts } from '../types/dynamicKeys';
+/**
+ * This package is currently in early stages of development, <br/>use only for testing or experimentation purposes.<br/>
+ *
+ * @typeParam Schema
+ *
+ */
+export declare class ERC725 {
+    options: ERC725Options;
+    /**
+     * Creates an instance of ERC725.
+     * @param {ERC725JSONSchema[]} schema More information available here: [LSP-2-ERC725YJSONSchema](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md)
+     * @param {string} address Address of the ERC725 contract you want to interact with
+     * @param {any} provider
+     * @param {ERC725Config} config Configuration object.
+     *
+     */
+    constructor(schemas: ERC725JSONSchema[], address?: any, provider?: any, config?: ERC725Config);
+    /**
+     * To prevent weird behavior from the lib, we must make sure all the schemas are correct before loading them.
+     *
+     * @param schemas
+     * @returns
+     */
+    private validateSchemas;
+    private static initializeProvider;
+    private getAddressAndProvider;
+    /**
+     * Gets **decoded data** for one, many or all keys of the specified `ERC725` smart-contract.
+     * When omitting the `keyOrKeys` parameter, it will get all the keys (as per {@link ERC725JSONSchema | ERC725JSONSchema} definition).
+     *
+     * Data returned by this function does not contain external data of [`JSONURL`](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#jsonurl)
+     * or [`ASSETURL`](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#asseturl) schema elements.
+     *
+     * If you would like to receive everything in one go, you can use {@link ERC725.fetchData | `fetchData`} for that.
+     *
+     * @param {*} keyOrKeys The name (or the encoded name as the schema ‘key’) of the schema element in the class instance’s schema.
+     *
+     * @returns If the input is an array: an object with schema element key names as properties, with corresponding **decoded** data as values. If the input is a string, it directly returns the **decoded** data.
+     */
+    getData(keyOrKeys?: Array<string | GetDataDynamicKey>): Promise<DecodeDataOutput[]>;
+    getData(keyOrKeys?: string | GetDataDynamicKey): Promise<DecodeDataOutput>;
+    /**
+     * Since {@link ERC725.getData | `getData`} exclusively returns data that is stored on the blockchain, `fetchData` comes in handy.
+     * Additionally to the data from the blockchain, `fetchData` also returns data from IPFS or HTTP(s) endpoints
+     * stored as [`JSONURL`](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#jsonurl) or [`ASSETURL`](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md#asseturl).
+     *
+     * To ensure **data authenticity** `fetchData` compares the `hash` of the fetched JSON with the `hash` stored on the blockchain.
+     *
+     * @param {*} keyOrKeys The name (or the encoded name as the schema ‘key’) of the schema element in the class instance’s schema.
+     *
+     * @returns Returns the fetched and decoded value depending ‘valueContent’ for the schema element, otherwise works like getData.
+     */
+    fetchData(keyOrKeys?: Array<string | GetDataDynamicKey>): Promise<FetchDataOutput[]>;
+    fetchData(keyOrKeys?: string | GetDataDynamicKey): Promise<FetchDataOutput>;
+    /**
+     * Parses a hashed key or a list of hashed keys and will attempt to return its corresponding LSP-2 ERC725YJSONSchema object.
+     * The function will look for a corresponding key within the schemas:
+     *  - in `./schemas` folder
+     *  - provided at initialisation
+     *  - provided in the function call
+     *
+     * @param keyOrKeys The hashed key or array of keys for which you want to find the corresponding LSP-2 ERC725YJSONSchema.
+     * @param providedSchemas If you provide your own ERC725JSONSchemas, the parser will also try to find a key match against these schemas.
+     */
+    getSchema(keyOrKeys: string[], providedSchemas?: ERC725JSONSchema[]): Record<string, ERC725JSONSchema | null>;
+    getSchema(keyOrKeys: string, providedSchemas?: ERC725JSONSchema[]): ERC725JSONSchema | null;
+    /**
+     * To be able to store your data on the blockchain, you need to encode it according to your {@link ERC725JSONSchema}.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties, containing the data that needs to be encoded.
+     * @param schemas Additionnal ERC725JSONSchemas which will be concatenated with the schemas provided on init.
+     *
+     * @returns An object with hashed keys and encoded values.
+     *
+     * When encoding JSON it is possible to pass in the JSON object and the URL where it is available publicly.
+     * The JSON will be hashed with `keccak256`.
+     */
+    encodeData(data: EncodeDataInput[], schemas?: ERC725JSONSchema[]): import("../types").EncodeDataReturn;
+    /**
+     * To be able to store your data on the blockchain, you need to encode it according to your {@link ERC725JSONSchema}.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties, containing the data that needs to be encoded.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns An object with hashed keys and encoded values.
+     *
+     * When encoding JSON it is possible to pass in the JSON object and the URL where it is available publicly.
+     * The JSON will be hashed with `keccak256`.
+     */
+    static encodeData(data: EncodeDataInput[], schemas: ERC725JSONSchema[]): import("../types").EncodeDataReturn;
+    /**
+     * In case you are reading the key-value store from an ERC725 smart-contract key-value store
+     * without `@erc725/erc725.js` you can use `decodeData` to do the decoding for you.
+     *
+     * It is more convenient to use {@link ERC725.fetchData | `fetchData`}.
+     * It does the `decoding` and `fetching` of external references for you automatically.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns Returns decoded data as defined and expected in the schema:
+     */
+    decodeData(data: DecodeDataInput[], schemas?: ERC725JSONSchema[]): {
+        [key: string]: any;
+    };
+    /**
+     * In case you are reading the key-value store from an ERC725 smart-contract key-value store
+     * without `@erc725/erc725.js` you can use `decodeData` to do the decoding for you.
+     *
+     * It is more convenient to use {@link ERC725.fetchData | `fetchData`}.
+     * It does the `decoding` and `fetching` of external references for you automatically.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns Returns decoded data as defined and expected in the schema:
+     */
+    static decodeData(data: DecodeDataInput[], schemas: ERC725JSONSchema[]): {
+        [key: string]: any;
+    };
+    /**
+     * An added utility method which simply returns the owner of the contract.
+     * Not directly related to ERC725 specifications.
+     *
+     * @param {string} [address]
+     * @returns The address of the contract owner as stored in the contract.
+     *
+     *    This method is not yet supported when using the `graph` provider type.
+     *
+     * ```javascript title="Example"
+     * await myERC725.getOwner();
+     * // '0x94933413384997F9402cc07a650e8A34d60F437A'
+     *
+     * await myERC725.getOwner("0x3000783905Cc7170cCCe49a4112Deda952DDBe24");
+     * // '0x7f1b797b2Ba023Da2482654b50724e92EB5a7091'
+     * ```
+     */
+    getOwner(_address?: string): Promise<any>;
+    /**
+     * A helper function which checks if a signature is valid according to the EIP-1271 standard.
+     *
+     * @param messageOrHash if it is a 66 chars string with 0x prefix, it will be considered as a hash (keccak256). If not, the message will be wrapped as follows: "\x19Ethereum Signed Message:\n" + message.length + message and hashed.
+     * @param signature
+     * @returns true if isValidSignature call on the contract returns the magic value. false otherwise
+     */
+    isValidSignature(messageOrHash: string, signature: string): Promise<boolean>;
+    /**
+     * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissions The permissions you want to specify to be included or excluded. Any ommitted permissions will default to false.
+     * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
+     */
+    static encodePermissions(permissions: Permissions): string;
+    /**
+     * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissions The permissions you want to specify to be included or excluded. Any ommitted permissions will default to false.
+     * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
+     */
+    encodePermissions(permissions: Permissions): string;
+    /**
+     * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissionHex The permission hexadecimal value to be decoded.
+     * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
+     */
+    static decodePermissions(permissionHex: string): {
+        CHANGEOWNER: boolean;
+        ADDCONTROLLER: boolean;
+        EDITPERMISSIONS: boolean;
+        ADDEXTENSIONS: boolean;
+        CHANGEEXTENSIONS: boolean;
+        ADDUNIVERSALRECEIVERDELEGATE: boolean;
+        CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
+        REENTRANCY: boolean;
+        SUPER_TRANSFERVALUE: boolean;
+        TRANSFERVALUE: boolean;
+        SUPER_CALL: boolean;
+        CALL: boolean;
+        SUPER_STATICCALL: boolean;
+        STATICCALL: boolean;
+        SUPER_DELEGATECALL: boolean;
+        DELEGATECALL: boolean;
+        DEPLOY: boolean;
+        SUPER_SETDATA: boolean;
+        SETDATA: boolean;
+        ENCRYPT: boolean;
+        DECRYPT: boolean;
+        SIGN: boolean;
+        EXECUTE_RELAY_CALL: boolean;
+        ERC4337_PERMISSION: boolean;
+    };
+    /**
+     * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissionHex The permission hexadecimal value to be decoded.
+     * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
+     */
+    decodePermissions(permissionHex: string): {
+        CHANGEOWNER: boolean;
+        ADDCONTROLLER: boolean;
+        EDITPERMISSIONS: boolean;
+        ADDEXTENSIONS: boolean;
+        CHANGEEXTENSIONS: boolean;
+        ADDUNIVERSALRECEIVERDELEGATE: boolean;
+        CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
+        REENTRANCY: boolean;
+        SUPER_TRANSFERVALUE: boolean;
+        TRANSFERVALUE: boolean;
+        SUPER_CALL: boolean;
+        CALL: boolean;
+        SUPER_STATICCALL: boolean;
+        STATICCALL: boolean;
+        SUPER_DELEGATECALL: boolean;
+        DELEGATECALL: boolean;
+        DEPLOY: boolean;
+        SUPER_SETDATA: boolean;
+        SETDATA: boolean;
+        ENCRYPT: boolean;
+        DECRYPT: boolean;
+        SIGN: boolean;
+        EXECUTE_RELAY_CALL: boolean;
+        ERC4337_PERMISSION: boolean;
+    };
+    /**
+     * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyName The key name you want to encode.
+     * @param {DynamicKeyParts} dynamicKeyParts String or Array of String values used to construct the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {string} The keccak256 hash of the provided key name. This is the key that must be retrievable from the ERC725Y contract via ERC725Y.getData(bytes32 key).
+     */
+    static encodeKeyName(keyName: string, dynamicKeyParts?: DynamicKeyParts): string;
+    /**
+     * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyName The key name you want to encode.
+     * @param {DynamicKeyParts} dynamicKeyParts String or Array of String values used to construct the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {string} The keccak256 hash of the provided key name. This is the key that must be retrievable from the ERC725Y contract via ERC725Y.getData(bytes32 key).
+     */
+    encodeKeyName(keyName: string, dynamicKeyParts?: DynamicKeyParts): string;
+    /**
+     * Decodes a hashed key used on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyHash Key hash that needs to be decoded.
+     * @param {string | ERC725JSONSchema} keyNameOrSchema Key name following schema specifications or ERC725Y JSON Schema to follow in order to decode the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {DynamicKeyPart[]} The Array with all the key decoded dynamic parameters. Each object have an attribute type and value.
+     */
+    static decodeMappingKey(keyHash: string, keyNameOrSchema: string | ERC725JSONSchema): DynamicKeyPart[];
+    /**
+     * Decodes a hashed key used on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyHash Key hash that needs to be decoded.
+     * @param {string | ERC725JSONSchema} keyNameOrSchema Key name following schema specifications or ERC725Y JSON Schema to follow in order to decode the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {DynamicKeyPart[]} The Array with all the key decoded dynamic parameters. Each object have an attribute type and value.
+     */
+    decodeMappingKey(keyHash: string, keyNameOrSchema: string | ERC725JSONSchema): DynamicKeyPart[];
+    /**
+     * Check if the ERC725 object supports
+     * a certain interface.
+     *
+     * @param interfaceIdOrName Interface ID or supported interface name.
+     * @returns {Promise<boolean>} if interface is supported.
+     */
+    supportsInterface(interfaceIdOrName: string): Promise<boolean>;
+    /**
+     * Check if a smart contract address
+     * supports a certain interface.
+     *
+     * @param {string} interfaceIdOrName Interface ID or supported interface name.
+     * @param options Object of address, RPC URL and optional gas.
+     * @returns {Promise<boolean>} if interface is supported.
+     */
+    static supportsInterface(interfaceIdOrName: string, options: {
+        address: string;
+        rpcUrl: string;
+        gas?: number;
+    }): Promise<boolean>;
+    /**
+     * Check if the required permissions are included in the granted permissions as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param requiredPermissions An array of required permissions or a single required permission.
+     * @param grantedPermissions The granted permissions as a 32-byte hex string.
+     * @return A boolean value indicating whether the required permissions are included in the granted permissions.
+     */
+    static checkPermissions(requiredPermissions: string[] | string, grantedPermissions: string): boolean;
+    /**
+     * Check if the required permissions are included in the granted permissions as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param requiredPermissions An array of required permissions or a single required permission.
+     * @param grantedPermissions The granted permissions as a 32-byte hex string.
+     * @return A boolean value indicating whether the required permissions are included in the granted permissions.
+     */
+    checkPermissions(requiredPermissions: string[] | string, grantedPermissions: string): boolean;
+    /**
+     * @param type The valueType to encode the value as
+     * @param value The value to encode
+     * @returns The encoded value
+     */
+    static encodeValueType(type: string, value: string | string[] | number | number[] | boolean | boolean[]): string;
+    encodeValueType(type: string, value: string | string[] | number | number[] | boolean | boolean[]): string;
+    /**
+     * @param type The valueType to decode the value as
+     * @param data The data to decode
+     * @returns The decoded value
+     */
+    static decodeValueType(type: string, data: string): any;
+    decodeValueType(type: string, data: string): any;
+}
diff --git a/build/module/src/lib/ERC725.js b/build/module/src/lib/ERC725.js
new file mode 100644
index 0000000000000000000000000000000000000000..b39a8bfbf4361630800cf7e51266febe7dc154d9
--- /dev/null
+++ b/build/module/src/lib/ERC725.js
@@ -0,0 +1,422 @@
+var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
+    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
+    return new (P || (P = Promise))(function (resolve, reject) {
+        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
+        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
+        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
+        step((generator = generator.apply(thisArg, _arguments || [])).next());
+    });
+};
+import HttpProvider from 'web3-providers-http';
+import { isAddress } from 'web3-validator';
+import { ProviderWrapper } from '../provider/providerWrapper';
+import { encodeData, convertIPFSGatewayUrl, generateSchemasFromDynamicKeys, duplicateMultiTypeERC725SchemaEntry, } from './utils';
+import { getSchema } from './schemaParser';
+import { isValidSignature } from './isValidSignature';
+import { DEFAULT_GAS_VALUE } from '../constants/constants';
+import { encodeKeyName, isDynamicKeyName } from './encodeKeyName';
+import { decodeData } from './decodeData';
+import { getDataFromExternalSources } from './getDataFromExternalSources';
+import { getData } from './getData';
+import { decodeValueType, encodeValueType } from './encoder';
+import { supportsInterface, checkPermissions } from './detector';
+import { decodeMappingKey } from './decodeMappingKey';
+import { decodePermissions, encodePermissions } from './permissions';
+/**
+ * This package is currently in early stages of development, <br/>use only for testing or experimentation purposes.<br/>
+ *
+ * @typeParam Schema
+ *
+ */
+export class ERC725 {
+    /**
+     * Creates an instance of ERC725.
+     * @param {ERC725JSONSchema[]} schema More information available here: [LSP-2-ERC725YJSONSchema](https://github.com/lukso-network/LIPs/blob/master/LSPs/LSP-2-ERC725YJSONSchema.md)
+     * @param {string} address Address of the ERC725 contract you want to interact with
+     * @param {any} provider
+     * @param {ERC725Config} config Configuration object.
+     *
+     */
+    constructor(schemas, address, provider, config) {
+        // NOTE: provider param can be either the provider, or and object with {provider:xxx ,type:xxx}
+        // TODO: Add check for schema format?
+        if (!schemas) {
+            throw new Error('Missing schema.');
+        }
+        const defaultConfig = {
+            ipfsGateway: 'https://api.universalprofile.cloud/ipfs/',
+            gas: DEFAULT_GAS_VALUE,
+        };
+        this.options = {
+            schemas: this.validateSchemas(schemas
+                .map((schema) => duplicateMultiTypeERC725SchemaEntry(schema))
+                .flat()),
+            address,
+            provider: ERC725.initializeProvider(provider, (config === null || config === void 0 ? void 0 : config.gas) ? config === null || config === void 0 ? void 0 : config.gas : defaultConfig.gas),
+            ipfsGateway: (config === null || config === void 0 ? void 0 : config.ipfsGateway)
+                ? convertIPFSGatewayUrl(config === null || config === void 0 ? void 0 : config.ipfsGateway)
+                : defaultConfig.ipfsGateway,
+            gas: (config === null || config === void 0 ? void 0 : config.gas) ? config === null || config === void 0 ? void 0 : config.gas : defaultConfig.gas,
+        };
+    }
+    /**
+     * To prevent weird behavior from the lib, we must make sure all the schemas are correct before loading them.
+     *
+     * @param schemas
+     * @returns
+     */
+    // eslint-disable-next-line class-methods-use-this
+    validateSchemas(schemas) {
+        return schemas.filter((schema) => {
+            if (schema.valueContent === 'AssetURL' ||
+                schema.valueContent === 'JSONURL') {
+                console.warn(`[Deprecation notice] The schema with keyName: ${schema.name} uses deprecated valueContent: ${schema.valueContent}. It has been replaced by VerifiableURI. Decoding is backward compatible but value will be encoded as VerifiableURI.`);
+            }
+            try {
+                const encodedKeyName = encodeKeyName(schema.name);
+                const isKeyValid = schema.key === encodedKeyName;
+                if (!isKeyValid) {
+                    console.warn(`The schema with keyName: ${schema.name} is skipped because its key hash does not match its key name (expected: ${encodedKeyName}, got: ${schema.key}).`);
+                }
+                return isKeyValid;
+            }
+            catch (err) {
+                // We could not encodeKeyName, probably because the key is dynamic (Mapping or MappingWithGrouping).
+                // TODO: make sure the dynamic key name is valid:
+                // - has max 2 variables
+                // - variables are correct (<string>, <bool>, etc.)
+                // Keeping dynamic keys may be an issue for getData / fetchData functions.
+                return true;
+            }
+        });
+    }
+    static initializeProvider(providerOrRpcUrl, gasInfo) {
+        // do not fail on no-provider
+        if (!providerOrRpcUrl)
+            return undefined;
+        // if provider is a string, assume it's a rpcUrl
+        if (typeof providerOrRpcUrl === 'string') {
+            return new ProviderWrapper(new HttpProvider(providerOrRpcUrl), gasInfo);
+        }
+        if (typeof providerOrRpcUrl.request === 'function' ||
+            typeof providerOrRpcUrl.send === 'function')
+            return new ProviderWrapper(providerOrRpcUrl, gasInfo);
+        throw new Error(`Incorrect or unsupported provider ${providerOrRpcUrl}`);
+    }
+    getAddressAndProvider() {
+        if (!this.options.address || !isAddress(this.options.address)) {
+            throw new Error('Missing ERC725 contract address.');
+        }
+        if (!this.options.provider) {
+            throw new Error('Missing provider.');
+        }
+        return {
+            address: this.options.address,
+            provider: this.options.provider,
+        };
+    }
+    getData(keyOrKeys) {
+        return __awaiter(this, void 0, void 0, function* () {
+            this.getAddressAndProvider();
+            return getData(this.options, keyOrKeys);
+        });
+    }
+    fetchData(keyOrKeys) {
+        return __awaiter(this, void 0, void 0, function* () {
+            let keyNames;
+            let throwException = false;
+            if (Array.isArray(keyOrKeys)) {
+                keyNames = keyOrKeys;
+            }
+            else if (!keyOrKeys) {
+                keyNames = this.options.schemas
+                    .map((element) => element.name)
+                    .filter((key) => !isDynamicKeyName(key));
+            }
+            else {
+                throwException = true; // If it's explicitely a single key, then we allow throwing an exception
+                keyNames = [keyOrKeys];
+            }
+            const dataFromChain = yield this.getData(keyNames);
+            // NOTE: this step is executed in getData function above
+            // We can optimize by computing it only once.
+            const schemas = generateSchemasFromDynamicKeys(keyNames, this.options.schemas);
+            const dataFromExternalSources = yield getDataFromExternalSources(schemas, dataFromChain, this.options.ipfsGateway, throwException);
+            if (keyOrKeys &&
+                !Array.isArray(keyOrKeys) &&
+                dataFromExternalSources.length > 0) {
+                return dataFromExternalSources[0];
+            }
+            return dataFromExternalSources;
+        });
+    }
+    getSchema(keyOrKeys, providedSchemas) {
+        return getSchema(keyOrKeys, this.options.schemas.concat(providedSchemas || []));
+    }
+    /**
+     * To be able to store your data on the blockchain, you need to encode it according to your {@link ERC725JSONSchema}.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties, containing the data that needs to be encoded.
+     * @param schemas Additionnal ERC725JSONSchemas which will be concatenated with the schemas provided on init.
+     *
+     * @returns An object with hashed keys and encoded values.
+     *
+     * When encoding JSON it is possible to pass in the JSON object and the URL where it is available publicly.
+     * The JSON will be hashed with `keccak256`.
+     */
+    encodeData(data, schemas) {
+        return encodeData(data, Array.prototype.concat(this.options.schemas, schemas));
+    }
+    /**
+     * To be able to store your data on the blockchain, you need to encode it according to your {@link ERC725JSONSchema}.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties, containing the data that needs to be encoded.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns An object with hashed keys and encoded values.
+     *
+     * When encoding JSON it is possible to pass in the JSON object and the URL where it is available publicly.
+     * The JSON will be hashed with `keccak256`.
+     */
+    static encodeData(data, schemas) {
+        return encodeData(data, schemas);
+    }
+    /**
+     * In case you are reading the key-value store from an ERC725 smart-contract key-value store
+     * without `@erc725/erc725.js` you can use `decodeData` to do the decoding for you.
+     *
+     * It is more convenient to use {@link ERC725.fetchData | `fetchData`}.
+     * It does the `decoding` and `fetching` of external references for you automatically.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns Returns decoded data as defined and expected in the schema:
+     */
+    decodeData(data, schemas) {
+        return decodeData(data, Array.prototype.concat(this.options.schemas, schemas));
+    }
+    /**
+     * In case you are reading the key-value store from an ERC725 smart-contract key-value store
+     * without `@erc725/erc725.js` you can use `decodeData` to do the decoding for you.
+     *
+     * It is more convenient to use {@link ERC725.fetchData | `fetchData`}.
+     * It does the `decoding` and `fetching` of external references for you automatically.
+     *
+     * @param {{ [key: string]: any }} data An object with one or many properties.
+     * @param schemas ERC725JSONSchemas which will be used to encode the keys.
+     *
+     * @returns Returns decoded data as defined and expected in the schema:
+     */
+    static decodeData(data, schemas) {
+        return decodeData(data, schemas);
+    }
+    /**
+     * An added utility method which simply returns the owner of the contract.
+     * Not directly related to ERC725 specifications.
+     *
+     * @param {string} [address]
+     * @returns The address of the contract owner as stored in the contract.
+     *
+     *    This method is not yet supported when using the `graph` provider type.
+     *
+     * ```javascript title="Example"
+     * await myERC725.getOwner();
+     * // '0x94933413384997F9402cc07a650e8A34d60F437A'
+     *
+     * await myERC725.getOwner("0x3000783905Cc7170cCCe49a4112Deda952DDBe24");
+     * // '0x7f1b797b2Ba023Da2482654b50724e92EB5a7091'
+     * ```
+     */
+    getOwner(_address) {
+        return __awaiter(this, void 0, void 0, function* () {
+            const { address, provider } = this.getAddressAndProvider();
+            return provider.getOwner(_address || address);
+        });
+    }
+    /**
+     * A helper function which checks if a signature is valid according to the EIP-1271 standard.
+     *
+     * @param messageOrHash if it is a 66 chars string with 0x prefix, it will be considered as a hash (keccak256). If not, the message will be wrapped as follows: "\x19Ethereum Signed Message:\n" + message.length + message and hashed.
+     * @param signature
+     * @returns true if isValidSignature call on the contract returns the magic value. false otherwise
+     */
+    isValidSignature(messageOrHash, signature) {
+        return __awaiter(this, void 0, void 0, function* () {
+            if (!this.options.address || !isAddress(this.options.address)) {
+                throw new Error('Missing ERC725 contract address.');
+            }
+            if (!this.options.provider) {
+                throw new Error('Missing provider.');
+            }
+            return isValidSignature(messageOrHash, signature, this.options.address, this.options.provider);
+        });
+    }
+    /**
+     * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissions The permissions you want to specify to be included or excluded. Any ommitted permissions will default to false.
+     * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
+     */
+    static encodePermissions(permissions) {
+        return encodePermissions(permissions);
+    }
+    /**
+     * Encode permissions into a hexadecimal string as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissions The permissions you want to specify to be included or excluded. Any ommitted permissions will default to false.
+     * @returns {*} The permissions encoded as a hexadecimal string as defined by the LSP6 Standard.
+     */
+    encodePermissions(permissions) {
+        return encodePermissions(permissions);
+    }
+    /**
+     * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissionHex The permission hexadecimal value to be decoded.
+     * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
+     */
+    static decodePermissions(permissionHex) {
+        return decodePermissions(permissionHex);
+    }
+    /**
+     * Decodes permissions from hexadecimal as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param permissionHex The permission hexadecimal value to be decoded.
+     * @returns Object specifying whether default LSP6 permissions are included in provided hexademical string.
+     */
+    decodePermissions(permissionHex) {
+        return decodePermissions(permissionHex);
+    }
+    /**
+     * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyName The key name you want to encode.
+     * @param {DynamicKeyParts} dynamicKeyParts String or Array of String values used to construct the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {string} The keccak256 hash of the provided key name. This is the key that must be retrievable from the ERC725Y contract via ERC725Y.getData(bytes32 key).
+     */
+    static encodeKeyName(keyName, dynamicKeyParts) {
+        return encodeKeyName(keyName, dynamicKeyParts);
+    }
+    /**
+     * Hashes a key name for use on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyName The key name you want to encode.
+     * @param {DynamicKeyParts} dynamicKeyParts String or Array of String values used to construct the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {string} The keccak256 hash of the provided key name. This is the key that must be retrievable from the ERC725Y contract via ERC725Y.getData(bytes32 key).
+     */
+    encodeKeyName(keyName, dynamicKeyParts) {
+        return encodeKeyName(keyName, dynamicKeyParts);
+    }
+    /**
+     * Decodes a hashed key used on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyHash Key hash that needs to be decoded.
+     * @param {string | ERC725JSONSchema} keyNameOrSchema Key name following schema specifications or ERC725Y JSON Schema to follow in order to decode the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {DynamicKeyPart[]} The Array with all the key decoded dynamic parameters. Each object have an attribute type and value.
+     */
+    static decodeMappingKey(keyHash, keyNameOrSchema) {
+        return decodeMappingKey(keyHash, keyNameOrSchema);
+    }
+    /**
+     * Decodes a hashed key used on an ERC725Y contract according to LSP2 ERC725Y JSONSchema standard.
+     *
+     * @param {string} keyHash Key hash that needs to be decoded.
+     * @param {string | ERC725JSONSchema} keyNameOrSchema Key name following schema specifications or ERC725Y JSON Schema to follow in order to decode the key.
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-2-ERC725YJSONSchema.md ERC725YJsonSchema standard.
+     * @returns {DynamicKeyPart[]} The Array with all the key decoded dynamic parameters. Each object have an attribute type and value.
+     */
+    decodeMappingKey(keyHash, keyNameOrSchema) {
+        return decodeMappingKey(keyHash, keyNameOrSchema);
+    }
+    /**
+     * Check if the ERC725 object supports
+     * a certain interface.
+     *
+     * @param interfaceIdOrName Interface ID or supported interface name.
+     * @returns {Promise<boolean>} if interface is supported.
+     */
+    supportsInterface(interfaceIdOrName) {
+        return __awaiter(this, void 0, void 0, function* () {
+            const { address, provider } = this.getAddressAndProvider();
+            return supportsInterface(interfaceIdOrName, {
+                address,
+                provider,
+            });
+        });
+    }
+    /**
+     * Check if a smart contract address
+     * supports a certain interface.
+     *
+     * @param {string} interfaceIdOrName Interface ID or supported interface name.
+     * @param options Object of address, RPC URL and optional gas.
+     * @returns {Promise<boolean>} if interface is supported.
+     */
+    static supportsInterface(interfaceIdOrName, options) {
+        return __awaiter(this, void 0, void 0, function* () {
+            if (!isAddress(options.address)) {
+                throw new Error('Invalid address');
+            }
+            if (!options.rpcUrl) {
+                throw new Error('Missing RPC URL');
+            }
+            return supportsInterface(interfaceIdOrName, {
+                address: options.address,
+                provider: this.initializeProvider(options.rpcUrl, (options === null || options === void 0 ? void 0 : options.gas) ? options === null || options === void 0 ? void 0 : options.gas : DEFAULT_GAS_VALUE),
+            });
+        });
+    }
+    /**
+     * Check if the required permissions are included in the granted permissions as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param requiredPermissions An array of required permissions or a single required permission.
+     * @param grantedPermissions The granted permissions as a 32-byte hex string.
+     * @return A boolean value indicating whether the required permissions are included in the granted permissions.
+     */
+    static checkPermissions(requiredPermissions, grantedPermissions) {
+        return checkPermissions(requiredPermissions, grantedPermissions);
+    }
+    /**
+     * Check if the required permissions are included in the granted permissions as defined by the LSP6 KeyManager Standard.
+     *
+     * @link https://github.com/lukso-network/LIPs/blob/main/LSPs/LSP-6-KeyManager.md LSP6 KeyManager Standard.
+     * @param requiredPermissions An array of required permissions or a single required permission.
+     * @param grantedPermissions The granted permissions as a 32-byte hex string.
+     * @return A boolean value indicating whether the required permissions are included in the granted permissions.
+     */
+    checkPermissions(requiredPermissions, grantedPermissions) {
+        return ERC725.checkPermissions(requiredPermissions, grantedPermissions);
+    }
+    /**
+     * @param type The valueType to encode the value as
+     * @param value The value to encode
+     * @returns The encoded value
+     */
+    static encodeValueType(type, value) {
+        return encodeValueType(type, value);
+    }
+    encodeValueType(type, value) {
+        return ERC725.encodeValueType(type, value);
+    }
+    /**
+     * @param type The valueType to decode the value as
+     * @param data The data to decode
+     * @returns The decoded value
+     */
+    static decodeValueType(type, data) {
+        return decodeValueType(type, data);
+    }
+    decodeValueType(type, data) {
+        return ERC725.decodeValueType(type, data);
+    }
+}
+//# sourceMappingURL=ERC725.js.map
\ No newline at end of file
diff --git a/build/module/src/lib/ERC725.js.map b/build/module/src/lib/ERC725.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..21e934f624661121999ce50fcfafbb39624ab57f
--- /dev/null
+++ b/build/module/src/lib/ERC725.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"ERC725.js","sourceRoot":"","sources":["../../../../src/lib/ERC725.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/build/module/src/lib/_test.d.ts b/build/module/src/lib/_test.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..58fe458e1b95f622f54b79c19b4d720f9ac0a668
--- /dev/null
+++ b/build/module/src/lib/_test.d.ts
@@ -0,0 +1 @@
+declare const decode: (receivedData: Uint8Array) => string;
diff --git a/build/module/src/lib/_test.js b/build/module/src/lib/_test.js
new file mode 100644
index 0000000000000000000000000000000000000000..0eb4506a9c2667672b6044245a194ecaac8ea976
--- /dev/null
+++ b/build/module/src/lib/_test.js
@@ -0,0 +1,21 @@
+"use strict";
+const decode = (receivedData) => {
+    const capture = [];
+    capture.push(receivedData[0]);
+    if (receivedData.length > 3) {
+        capture.push(receivedData[receivedData.length - 3]);
+    }
+    if (receivedData.length > 2) {
+        capture.push(receivedData[receivedData.length - 2]);
+    }
+    if (receivedData.length > 1) {
+        capture.push(receivedData[receivedData.length - 1]);
+    }
+    const key = String.fromCharCode.apply(null, capture);
+    console.log(capture, key, /^(\[.*\]|\{.*\})\s*$/.test(key));
+    return key;
+};
+decode(Uint8Array.from(Buffer.from(JSON.stringify({ k: 0 }))));
+decode(Uint8Array.from(Buffer.from(JSON.stringify({ k: 0 }) + '\n')));
+decode(Uint8Array.from(Buffer.from(JSON.stringify({ k: 0 }) + '\r\n')));
+//# sourceMappingURL=_test.js.map
\ No newline at end of file
diff --git a/build/module/src/lib/_test.js.map b/build/module/src/lib/_test.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..a2bc4ce44e406657f9ee97677ebab45c90ed9842
--- /dev/null
+++ b/build/module/src/lib/_test.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"_test.js","sourceRoot":"","sources":["../../../../src/lib/_test.ts"],"names":[],"mappings":";AAAA,MAAM,MAAM,GAAG,CAAC,YAAwB,EAAE,EAAE;IAC1C,MAAM,OAAO,GAAa,EAAE,CAAC;IAC7B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;IACtD,CAAC;IACD,MAAM,GAAG,GAAG,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;IACrD,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,sBAAsB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5D,OAAO,GAAG,CAAC;AACb,CAAC,CAAC;AAEF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACtE,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC"}
\ No newline at end of file
diff --git a/build/module/src/lib/getDataFromExternalSources.js b/build/module/src/lib/getDataFromExternalSources.js
index 41a19446dbbd7eaac36563d87fe2f1d77ed3fa90..3043f69523a14f75155b5d9b6662e49de7e0fd66 100644
--- a/build/module/src/lib/getDataFromExternalSources.js
+++ b/build/module/src/lib/getDataFromExternalSources.js
@@ -54,19 +54,26 @@ export const getDataFromExternalSources = (schemas, dataFromChain, ipfsGateway,
             const urlDataWithHash = dataEntry.value; // Type URLDataWithHash
             const { url } = patchIPFSUrlsIfApplicable(urlDataWithHash, ipfsGateway);
             try {
-                if (/[=?/]$/.test(url)) {
-                    // this URL is not verifiable and the URL ends with a / or ? or = meaning it's not a file
-                    // and more likely to be some kind of directory or query BaseURI
-                    return dataEntry;
+                let receivedData;
+                const [, encoding, data] = url.match(/^data:.*?;(.*?),(.*)$/) || [];
+                if (data) {
+                    receivedData = Uint8Array.from(Buffer.from(data, encoding === 'base64' ? 'base64' : 'utf8'));
                 }
-                const receivedData = yield fetch(url).then((response) => __awaiter(void 0, void 0, void 0, function* () {
-                    if (!response.ok) {
-                        throw new Error(response.statusText);
+                else {
+                    if (/[=?/]$/.test(url)) {
+                        // this URL is not verifiable and the URL ends with a / or ? or = meaning it's not a file
+                        // and more likely to be some kind of directory or query BaseURI
+                        return dataEntry;
                     }
-                    return response
-                        .arrayBuffer()
-                        .then((buffer) => new Uint8Array(buffer));
-                }));
+                    receivedData = yield fetch(url).then((response) => __awaiter(void 0, void 0, void 0, function* () {
+                        if (!response.ok) {
+                            throw new Error(response.statusText);
+                        }
+                        return response
+                            .arrayBuffer()
+                            .then((buffer) => new Uint8Array(buffer));
+                    }));
+                }
                 if (receivedData.length >= 2) {
                     // JSON data cannot be less than 2 characters long.
                     try {
@@ -99,7 +106,7 @@ export const getDataFromExternalSources = (schemas, dataFromChain, ipfsGateway,
                         // Check if the beginning or end are
                         // { and } => JSON.stringify({...}) => pretty much 100% of our JSON will be this.
                         // [ and ] => JSON.stringify([...])
-                        if (/^(\[.*\]|\{.*\})\s*$/.test(key)) {
+                        if (/^(\[.*\]|\{.*\})\s*$/s.test(key)) {
                             const json = arrToBufArr(receivedData).toString();
                             const value = JSON.parse(json);
                             if (isDataAuthentic(value, urlDataWithHash.verification)) {
diff --git a/build/module/src/lib/getDataFromExternalSources.js.map b/build/module/src/lib/getDataFromExternalSources.js.map
index 34279ab02be0d603831b05f4dcaa87e40a967f11..dc2081f53a5b23a56705a203fefdabc40e474fee 100644
--- a/build/module/src/lib/getDataFromExternalSources.js.map
+++ b/build/module/src/lib/getDataFromExternalSources.js.map
@@ -1 +1 @@
-{"version":3,"file":"getDataFromExternalSources.js","sourceRoot":"","sources":["../../../../src/lib/getDataFromExternalSources.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"getDataFromExternalSources.js","sourceRoot":"","sources":["../../../../src/lib/getDataFromExternalSources.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/build/module/src/lib/permissions.d.ts b/build/module/src/lib/permissions.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..d89b668adf57d732606bf7b470682174f2c632be
--- /dev/null
+++ b/build/module/src/lib/permissions.d.ts
@@ -0,0 +1,28 @@
+import { Permissions } from '../types/Method';
+export declare function encodePermissions(permissions: Permissions): string;
+export declare function decodePermissions(permissionHex: string): {
+    CHANGEOWNER: boolean;
+    ADDCONTROLLER: boolean;
+    EDITPERMISSIONS: boolean;
+    ADDEXTENSIONS: boolean;
+    CHANGEEXTENSIONS: boolean;
+    ADDUNIVERSALRECEIVERDELEGATE: boolean;
+    CHANGEUNIVERSALRECEIVERDELEGATE: boolean;
+    REENTRANCY: boolean;
+    SUPER_TRANSFERVALUE: boolean;
+    TRANSFERVALUE: boolean;
+    SUPER_CALL: boolean;
+    CALL: boolean;
+    SUPER_STATICCALL: boolean;
+    STATICCALL: boolean;
+    SUPER_DELEGATECALL: boolean;
+    DELEGATECALL: boolean;
+    DEPLOY: boolean;
+    SUPER_SETDATA: boolean;
+    SETDATA: boolean;
+    ENCRYPT: boolean;
+    DECRYPT: boolean;
+    SIGN: boolean;
+    EXECUTE_RELAY_CALL: boolean;
+    ERC4337_PERMISSION: boolean;
+};
diff --git a/build/module/src/lib/permissions.js b/build/module/src/lib/permissions.js
new file mode 100644
index 0000000000000000000000000000000000000000..e26cd2af109249a652c07adb4f3570bbcb57fc3f
--- /dev/null
+++ b/build/module/src/lib/permissions.js
@@ -0,0 +1,54 @@
+import { hexToNumber, leftPad, toHex } from 'web3-utils';
+import { LSP6_ALL_PERMISSIONS, LSP6_DEFAULT_PERMISSIONS, } from '../constants/constants';
+export function encodePermissions(permissions) {
+    const result = Object.keys(permissions).reduce((previous, key) => {
+        return permissions[key]
+            ? previous | Number(hexToNumber(LSP6_DEFAULT_PERMISSIONS[key]))
+            : previous;
+    }, 0);
+    return leftPad(toHex(result), 64);
+}
+export function decodePermissions(permissionHex) {
+    const result = {
+        CHANGEOWNER: false,
+        ADDCONTROLLER: false,
+        EDITPERMISSIONS: false,
+        ADDEXTENSIONS: false,
+        CHANGEEXTENSIONS: false,
+        ADDUNIVERSALRECEIVERDELEGATE: false,
+        CHANGEUNIVERSALRECEIVERDELEGATE: false,
+        REENTRANCY: false,
+        SUPER_TRANSFERVALUE: false,
+        TRANSFERVALUE: false,
+        SUPER_CALL: false,
+        CALL: false,
+        SUPER_STATICCALL: false,
+        STATICCALL: false,
+        SUPER_DELEGATECALL: false,
+        DELEGATECALL: false,
+        DEPLOY: false,
+        SUPER_SETDATA: false,
+        SETDATA: false,
+        ENCRYPT: false,
+        DECRYPT: false,
+        SIGN: false,
+        EXECUTE_RELAY_CALL: false,
+        ERC4337_PERMISSION: false,
+    };
+    const permissionsToTest = Object.keys(LSP6_DEFAULT_PERMISSIONS);
+    if (permissionHex === LSP6_ALL_PERMISSIONS) {
+        permissionsToTest.forEach((testPermission) => {
+            result[testPermission] = true;
+        });
+        return result;
+    }
+    const passedPermissionDecimal = Number(hexToNumber(permissionHex));
+    permissionsToTest.forEach((testPermission) => {
+        const decimalTestPermission = Number(hexToNumber(LSP6_DEFAULT_PERMISSIONS[testPermission]));
+        const isPermissionIncluded = (passedPermissionDecimal & decimalTestPermission) ===
+            decimalTestPermission;
+        result[testPermission] = isPermissionIncluded;
+    });
+    return result;
+}
+//# sourceMappingURL=permissions.js.map
\ No newline at end of file
diff --git a/build/module/src/lib/permissions.js.map b/build/module/src/lib/permissions.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..abce5f8170df7a29bea5afa50800ebfdbd39225d
--- /dev/null
+++ b/build/module/src/lib/permissions.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"permissions.js","sourceRoot":"","sources":["../../../../src/lib/permissions.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,YAAY,CAAC;AACzD,OAAO,EACL,oBAAoB,EACpB,wBAAwB,GACzB,MAAM,wBAAwB,CAAC;AAGhC,MAAM,UAAU,iBAAiB,CAAC,WAAwB;IACxD,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,EAAE;QAC/D,OAAO,WAAW,CAAC,GAAG,CAAC;YACrB,CAAC,CAAC,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/D,CAAC,CAAC,QAAQ,CAAC;IACf,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;AACpC,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,aAAqB;IACrD,MAAM,MAAM,GAAG;QACb,WAAW,EAAE,KAAK;QAClB,aAAa,EAAE,KAAK;QACpB,eAAe,EAAE,KAAK;QACtB,aAAa,EAAE,KAAK;QACpB,gBAAgB,EAAE,KAAK;QACvB,4BAA4B,EAAE,KAAK;QACnC,+BAA+B,EAAE,KAAK;QACtC,UAAU,EAAE,KAAK;QACjB,mBAAmB,EAAE,KAAK;QAC1B,aAAa,EAAE,KAAK;QACpB,UAAU,EAAE,KAAK;QACjB,IAAI,EAAE,KAAK;QACX,gBAAgB,EAAE,KAAK;QACvB,UAAU,EAAE,KAAK;QACjB,kBAAkB,EAAE,KAAK;QACzB,YAAY,EAAE,KAAK;QACnB,MAAM,EAAE,KAAK;QACb,aAAa,EAAE,KAAK;QACpB,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,KAAK;QACX,kBAAkB,EAAE,KAAK;QACzB,kBAAkB,EAAE,KAAK;KAC1B,CAAC;IAEF,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;IAChE,IAAI,aAAa,KAAK,oBAAoB,EAAE,CAAC;QAC3C,iBAAiB,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,EAAE;YAC3C,MAAM,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAChC,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,uBAAuB,GAAG,MAAM,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC;IAEnE,iBAAiB,CAAC,OAAO,CAAC,CAAC,cAAc,EAAE,EAAE;QAC3C,MAAM,qBAAqB,GAAG,MAAM,CAClC,WAAW,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC,CACtD,CAAC;QACF,MAAM,oBAAoB,GACxB,CAAC,uBAAuB,GAAG,qBAAqB,CAAC;YACjD,qBAAqB,CAAC;QAExB,MAAM,CAAC,cAAc,CAAC,GAAG,oBAAoB,CAAC;IAChD,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC"}
\ No newline at end of file
diff --git a/build/module/src/utils.d.ts b/build/module/src/utils.d.ts
new file mode 100644
index 0000000000000000000000000000000000000000..4c6bf69701ceead1d5f1b69f8f8659906e48f88c
--- /dev/null
+++ b/build/module/src/utils.d.ts
@@ -0,0 +1,16 @@
+/**
+ * @file index.ts
+ * @author Robert McLeod <@robertdavid010>
+ * @author Fabian Vogelsteller <fabian@lukso.network>
+ * @author Hugo Masclet <@Hugoo>
+ * @date 2020
+ */
+export type { ERC725JSONSchemaKeyType, ERC725JSONSchemaValueContent, ERC725JSONSchemaValueType, ERC725JSONSchema, } from './types/ERC725JSONSchema';
+export { ERC725Config, KeyValuePair, ProviderTypes } from './types';
+export { encodeData, encodeArrayKey } from './lib/utils';
+export { decodeData } from './lib/decodeData';
+export { encodeKeyName } from './lib/encodeKeyName';
+export { decodeMappingKey } from './lib/decodeMappingKey';
+export { decodeValueType, decodeValueContent } from './lib/encoder';
+export { getDataFromExternalSources } from './lib/getDataFromExternalSources';
+export { decodePermissions, encodePermissions } from './lib/permissions';
diff --git a/build/module/src/utils.js b/build/module/src/utils.js
new file mode 100644
index 0000000000000000000000000000000000000000..9319638efd1088c72f25e341e14fda3927e3cf1e
--- /dev/null
+++ b/build/module/src/utils.js
@@ -0,0 +1,21 @@
+/*
+    This file is part of @erc725/erc725.js.
+    @erc725/erc725.js is free software: you can redistribute it and/or modify
+    it under the terms of the GNU Lesser General Public License as published by
+    the Free Software Foundation, either version 3 of the License, or
+    (at your option) any later version.
+    @erc725/erc725.js is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU Lesser General Public License for more details.
+    You should have received a copy of the GNU Lesser General Public License
+    along with @erc725/erc725.js.  If not, see <http://www.gnu.org/licenses/>.
+*/
+export { encodeData, encodeArrayKey } from './lib/utils';
+export { decodeData } from './lib/decodeData';
+export { encodeKeyName } from './lib/encodeKeyName';
+export { decodeMappingKey } from './lib/decodeMappingKey';
+export { decodeValueType, decodeValueContent } from './lib/encoder';
+export { getDataFromExternalSources } from './lib/getDataFromExternalSources';
+export { decodePermissions, encodePermissions } from './lib/permissions';
+//# sourceMappingURL=utils.js.map
\ No newline at end of file
diff --git a/build/module/src/utils.js.map b/build/module/src/utils.js.map
new file mode 100644
index 0000000000000000000000000000000000000000..53af1a93dbb487f97b2366faa16b9fdf5f8d6015
--- /dev/null
+++ b/build/module/src/utils.js.map
@@ -0,0 +1 @@
+{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;EAYE;AAmBF,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,aAAa,CAAC;AACzD,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAE,eAAe,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACpE,OAAO,EAAE,0BAA0B,EAAE,MAAM,kCAAkC,CAAC;AAC9E,OAAO,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,MAAM,mBAAmB,CAAC"}
\ No newline at end of file
diff --git a/build/module/tsconfig.module.tsbuildinfo b/build/module/tsconfig.module.tsbuildinfo
index 332c23e5633169844d61b0572a47ca57cd4b23e5..e1512eb8d85aa968bb550873b4896881576b9285 100644
--- a/build/module/tsconfig.module.tsbuildinfo
+++ b/build/module/tsconfig.module.tsbuildinfo
@@ -1 +1 @@
-{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostics_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/dom-events.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/readline/promises.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/stream/consumers.d.ts","../../node_modules/@types/node/stream/web.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/test.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/@types/bn.js/index.d.ts","../../node_modules/web3-utils/types/index.d.ts","../../node_modules/web3-core-helpers/types/index.d.ts","../../node_modules/web3-providers-http/types/index.d.ts","../../node_modules/web3-eth-abi/types/index.d.ts","../../src/types/JsonRpc.ts","../../src/types/Method.ts","../../node_modules/buffer/index.d.ts","../../node_modules/rlp/dist/types.d.ts","../../node_modules/rlp/dist/index.d.ts","../../node_modules/ethereumjs-util/dist/externals.d.ts","../../node_modules/ethereumjs-util/dist/constants.d.ts","../../node_modules/ethereumjs-util/dist/address.d.ts","../../node_modules/ethereumjs-util/dist/bytes.d.ts","../../node_modules/ethereumjs-util/dist/types.d.ts","../../node_modules/ethereumjs-util/dist/account.d.ts","../../node_modules/ethereumjs-util/dist/hash.d.ts","../../node_modules/ethereumjs-util/dist/signature.d.ts","../../node_modules/ethereumjs-util/dist/object.d.ts","../../node_modules/ethereumjs-util/dist/internal.d.ts","../../node_modules/ethereumjs-util/dist/index.d.ts","../../src/constants/constants.ts","../../src/lib/provider-wrapper-utils.ts","../../src/types/provider.ts","../../src/provider/providerWrapper.ts","../../src/types/ERC725JSONSchema.ts","../../src/types/Config.ts","../../src/types/encodeData/JSONURL.ts","../../src/types/index.ts","../../src/types/encodeData/index.ts","../../src/lib/encoder.ts","../../src/types/dynamicKeys.ts","../../src/lib/encodeKeyName.ts","../../src/lib/getSchemaElement.ts","../../src/types/decodeData.ts","../../src/types/GetData.ts","../../src/lib/decodeData.ts","../../src/lib/utils.ts","../../schemas/LSP1UniversalReceiverDelegate.json","../../schemas/LSP3ProfileMetadata.json","../../schemas/LSP4DigitalAsset.json","../../schemas/LSP4DigitalAssetLegacy.json","../../schemas/LSP5ReceivedAssets.json","../../schemas/LSP6KeyManager.json","../../schemas/LSP8IdentifiableDigitalAsset.json","../../schemas/LSP9Vault.json","../../schemas/LSP10ReceivedVaults.json","../../schemas/LSP12IssuedAssets.json","../../schemas/LSP17ContractExtension.json","../../src/schemas/index.ts","../../src/lib/schemaParser.ts","../../src/lib/isValidSignature.ts","../../src/lib/getDataFromExternalSources.ts","../../src/lib/getData.ts","../../src/constants/interfaces.ts","../../src/lib/detector.ts","../../src/lib/decodeMappingKey.ts","../../src/index.ts","../../node_modules/@types/mocha/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"7e771891adaa85b690266bc37bd6eb43bc57eecc4b54693ead36467e7369952a","a69c09dbea52352f479d3e7ac949fde3d17b195abe90b045d619f747b38d6d1a",{"version":"ca72190df0eb9b09d4b600821c8c7b6c9747b75a1c700c4d57dc0bb72abc074c","affectsGlobalScope":true},"21a167fec8f933752fb8157f06d28fab6817af3ad9b0bdb1908a10762391eab9",{"version":"bb65c6267c5d6676be61acbf6604cf0a4555ac4b505df58ac15c831fcbff4e3e","affectsGlobalScope":true},"374ca798f244e464346f14301dc2a8b4b111af1a83b49fffef5906c338a1f922","5a94487653355b56018122d92392beb2e5f4a6c63ba5cef83bbe1c99775ef713",{"version":"d5135ad93b33adcce80b18f8065087934cdc1730d63db58562edcf017e1aad9b","affectsGlobalScope":true},"82408ed3e959ddc60d3e9904481b5a8dc16469928257af22a3f7d1a3bc7fd8c4","dab86d9604fe40854ef3c0a6f9e8948873dc3509213418e5e457f410fd11200f","bb9c4ffa5e6290c6980b63c815cdd1625876dadb2efaf77edbe82984be93e55e","489532ff54b714f0e0939947a1c560e516d3ae93d51d639ab02e907a0e950114","f30bb836526d930a74593f7b0f5c1c46d10856415a8f69e5e2fc3db80371e362","14b5aa23c5d0ae1907bc696ac7b6915d88f7d85799cc0dc2dcf98fbce2c5a67c","5c439dafdc09abe4d6c260a96b822fa0ba5be7203c71a63ab1f1423cd9e838ea",{"version":"6b526a5ec4a401ca7c26cfe6a48e641d8f30af76673bad3b06a1b4504594a960","affectsGlobalScope":true},{"version":"816ad2e607a96de5bcac7d437f843f5afd8957f1fa5eefa6bba8e4ed7ca8fd84","affectsGlobalScope":true},"cec36af22f514322f870e81d30675c78df82ae8bf4863f5fd4e4424c040c678d","d903fafe96674bc0b2ac38a5be4a8fc07b14c2548d1cdb165a80ea24c44c0c54","5eec82ac21f84d83586c59a16b9b8502d34505d1393393556682fe7e7fde9ef2","04eb6578a588d6a46f50299b55f30e3a04ef27d0c5a46c57d8fcc211cd530faa","8d3c583a07e0c37e876908c2d5da575019f689df8d9fa4c081d99119d53dba22","2c828a5405191d006115ab34e191b8474bc6c86ffdc401d1a9864b1b6e088a58",{"version":"e630e5528e899219ae319e83bef54bf3bcb91b01d76861ecf881e8e614b167f0","affectsGlobalScope":true},"d076fede3cb042e7b13fc29442aaa03a57806bc51e2b26a67a01fbc66a7c0c12","7c013aa892414a7fdcfd861ae524a668eaa3ede8c7c0acafaf611948122c8d93","b0973c3cbcdc59b37bf477731d468696ecaf442593ec51bab497a613a580fe30",{"version":"4989e92ba5b69b182d2caaea6295af52b7dc73a4f7a2e336a676722884e7139d","affectsGlobalScope":true},{"version":"b3624aed92dab6da8484280d3cb3e2f4130ec3f4ef3f8201c95144ae9e898bb6","affectsGlobalScope":true},"5153a2fd150e46ce57bb3f8db1318d33f6ad3261ed70ceeff92281c0608c74a3","210d54cd652ec0fec8c8916e4af59bb341065576ecda039842f9ffb2e908507c","36b03690b628eab08703d63f04eaa89c5df202e5f1edf3989f13ad389cd2c091","0effadd232a20498b11308058e334d3339cc5bf8c4c858393e38d9d4c0013dcf","25846d43937c672bab7e8195f3d881f93495df712ee901860effc109918938cc","fd93cee2621ff42dabe57b7be402783fd1aa69ece755bcba1e0290547ae60513","1b952304137851e45bc009785de89ada562d9376177c97e37702e39e60c2f1ff","69ee23dd0d215b09907ad30d23f88b7790c93329d1faf31d7835552a10cf7cbf","44b8b584a338b190a59f4f6929d072431950c7bd92ec2694821c11bce180c8a5","23b89798789dffbd437c0c423f5d02d11f9736aea73d6abf16db4f812ff36eda","223c37f62ce09a3d99e77498acdee7b2705a4ae14552fbdb4093600cd9164f3f",{"version":"970a90f76d4d219ad60819d61f5994514087ba94c985647a3474a5a3d12714ed","affectsGlobalScope":true},"e10177274a35a9d07c825615340b2fcde2f610f53f3fb40269fd196b4288dda6","4c8525f256873c7ba3135338c647eaf0ca7115a1a2805ae2d0056629461186ce","3c13ef48634e7b5012fcf7e8fce7496352c2d779a7201389ca96a2a81ee4314d","5d0a25ec910fa36595f85a67ac992d7a53dd4064a1ba6aea1c9f14ab73a023f2",{"version":"f0900cd5d00fe1263ff41201fb8073dbeb984397e4af3b8002a5c207a30bdc33","affectsGlobalScope":true},{"version":"4c50342e1b65d3bee2ed4ab18f84842d5724ad11083bd666d8705dc7a6079d80","affectsGlobalScope":true},"06d7c42d256f0ce6afe1b2b6cfbc97ab391f29dadb00dd0ae8e8f23f5bc916c3","ec4bd1b200670fb567920db572d6701ed42a9641d09c4ff6869768c8f81b404c","e59a892d87e72733e2a9ca21611b9beb52977be2696c7ba4b216cbbb9a48f5aa",{"version":"da26af7362f53d122283bc69fed862b9a9fe27e01bc6a69d1d682e0e5a4df3e6","affectsGlobalScope":true},"8a300fa9b698845a1f9c41ecbe2c5966634582a8e2020d51abcace9b55aa959e",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"8dbe725f8d237e70310977afcfa011629804d101ebaa0266cafda6b61ad72236","01f7828047b5c6703d3c601473618b448f5506a88fcac852638b0715c3abf4eb","7bf3de0c35445f6a98bd5a88d0efe530963d762ff0f2443db010d40900770783","d22b49f8270b572e27a0e02854270c7b9848f693a5c93f7dccf4b08543b913dd","0144d077b79cbc1230472f455a04977b3702f60ff094889e731a555e8ac3d54d","f17d0f19ad9242b09b68a6d30402a841a7d4194d063855da5ca0567df0fb310e",{"version":"726501190402401d40562ea6b91ddd84981b10e5a0c08fb88275b56dad6f3480","signature":"65b2ce8a900bd729c899ef9a0176dd81e5430ec452e9ef2e42713ae89485c95d"},{"version":"71325a9006f3142baf41cb802fd1dd928f3edf6385de1e1fbb85a38825154ac2","signature":"d40e0499c489b01eea4b2b8704dcca8a6f4b7a20a6b17d0094abe7cc7ec62de5"},"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","1ee47e6ed1cf98c573934f9a63e65cd7acf7314a2654da2630c2be6bda12871b","8fcc2bc8dae2c29f7db02ca5112f343936e544bab0dd66c997ec2045fae4b660","89a120f976e17500b9e242637ae377462850517b04aa45981c92c60a490386ee","5e27d8df0309ba8dbd8459750ef7c2c1db5aedeabbc819220a1ecca79c84f4dc","8ef5395d145d1ae1306c20580380779723542f0a4d5c22c0dfe536d5922022ec","155d9f9576b2bb2662e58b8dc5979c3b614250c3279bbdddfbe54749b0ef2ec2","8a9e43259a9f444d80be68f87fd5d8a90c7915b519ef2d3e434d68a835490978","ee80d37ca2d62bd6e33106596fdf39827c248fab4b6dedcee5bdf6f9b4fca454","e95f565a375c039e04187524457c39b362419bdd537afcd52162e8df04e1f87c","d57804e7c53f370b8df0417df2aaea2c5cc2bcae96d6bb06f6bbdf8c3f06f939","a4dad01f270d6cd8ff8d8229d0975833ebf847e560dafaded532f8e31a497ecf","4e78c87355f7e4fd9524d7582a14bf72771aeee33acb73a848de8bf2e44d8831","71a2be4b91958938b4ada303568f2b7fedab5e7e8bc36ca952d51e10e712ae75",{"version":"af694603c4db838df22e38f3ca074adc303bae91893496db6e7c6fbc133a858c","signature":"be481c69c09d6b3c017b95fc297fd20bf46e309a114c82a3964078248703803b"},{"version":"7e49dd360dcf593454c9867bef859f06c7be056d27ce82b769c8377ce0b5cbea","signature":"40b1a00329ba61754ea09099a541129bca34bc48c0c5a95ef0189187dd9e9d03"},{"version":"02d092b379b16ff69c8d23f955ebd21228ecb0140ce222d54b06f7e0c240cba4","signature":"19048634899c590f489e5755a787e1d62e68378ad0b4ec18762d843ea1c9b767"},{"version":"9ebf593906ebfa82abf40cb001c8f0c519b654f6848ce1034ee788fe75aa11de","signature":"1df3a2ecb2e7ca598c6ff44211b34437118d13fc5faec07133575d99912db841"},{"version":"b2cd7cafdd40cb8d53681f9a97dd90fddaf15e4592298ce25129d4addbf98f4e","signature":"558ab3fc829949cc1c7c3b2f1c47d0bdb058454686545b789015a289e9c14f8d"},{"version":"a7a40fc1f085c6179e668a361e68278db06cd4c4c77f8bd01ad0470d7dbda8ec","signature":"693d6b5e82504c936a8b7c4edeccde1a6d7718080c36440bae81883e55f291fb"},{"version":"8005d1c010c03b480d2af026f6ef625ea2fd00ddb9ff6e2e1432853f05668906","signature":"f1e475904d2cf7066bdaea303fd0ff809695199821991d8cb13ac262ad6ce13b"},"0cdd9231111c28c24791f077f8c40ba05cda39c3f6e128a74c47ba0695873760",{"version":"d33ac4d91894de5be1f8bb2b149e2480db5437d2809d3447bd4df7455fd02f9c","signature":"99d32d860b57de27f607b4f68e161284fba79b68f14baf24de26913b8edfdc3e"},{"version":"376001f97e255ef4de6b0f31c58bbf422c7b4100fe56b18fd629a5ca70375c22","signature":"16c92423e184a84a565386a556c53bc3971df9b94419336ce49767b0e6adb7d7"},{"version":"5ee61fed9dcf795684dc790a92eff9618fd798838f84e275f3dc118fba7723d3","signature":"3668c8ad65186d367166f4d9f006b38efdab342a4dda965405873dc142c5150a"},{"version":"fc93367dc29945c0de35a272df893f9430951da1836dff77ba8b20fa6963cc3f","signature":"4c287557792689709bdf7e37f070f411c1a452c0acc80c0e6e5cbfde63e70323"},{"version":"efb364dea9a062e4bdd1984acc434810b9f9bf5bbb61cf0c5c08ad09e12e995d","signature":"dd4ddfd8ffe98c2e9db71fb6015954b74d144eb5822d3c4b9d1653fd1a9d4251"},{"version":"6cff4dcd1d456e74ed151183348ee255c2f34ef31d600fea28e4c6aefb7236d6","signature":"3736a3029e8273bdbebd370fea48894a7155abe5be6e6d6c7afac0c42ad73a14"},{"version":"730d4811a955ab26b732a5354216f48cdaec76a6f22e1f361a3394c870491759","signature":"090887d5c88e758a67be7f5f2dcd04d2eb848d826f89043ef53bc8a77fcdb219"},{"version":"acc7cfcc68d11a4cca207465b2f403b53cb0a29e459c4446f26a2b6b198ba2cc","signature":"c843501f6bbea4f90c89e1c882f3cd7e54ca78615d5da116d95d9584da0f2cf1"},{"version":"42100fa5e7fdf2aed8e75b8f276fcead4e4ecf0e0fe1cdcb6373f170fb50847a","signature":"a446da6f68aaa38de1220496272b9e08309a62769096cb9a4b5f432f22e0cfae"},"57659512730fa328707c7298d9b456519ac0b67de66695d05d511c1d802c7af5","a78ff27f388106730c96a13e521c1932e5f3244a6ff3c50fcda97f875805de7a","62af76d6b869b5348da04ad19e518b6c1320777d89dffb453d5b8a5b269c7ea7","f7b67cc79299969ff137659f87afa0426a9402a707cf6eb676ebd3bf4129632f","7c4cf63c71004591e0b63241787a76186846d42af419c31e100c6f2468441bd9","a0add096903b1e0ddd4edd8f0ea2f5500f75d6aac4b5f865a224efd04bfd399e","29b7e998e464d3a8d84e4363ba66b7d23150321ff38a6be23fd1194e53c07372","f85e69162986c567ba739068482c6646ca71d007c5b30fe8084de733b4de59d8","8d194a0b1c9226020fe78f740bcfcde0d8d32327f91f567c82f73bc16b2f45e8","69e7ebc85cebd16d481551549d3877ae455bddf5ea42ce676e4e0fb5f48ba4d7","888c7a8dd0fcf26547c4e33ebcd27a970d367974f47b8314715410f1ea4fcca7",{"version":"cee63d59ff9b8e006301206aaf721fac1f11a7f74fa68dd7c0d15e6511e69c12","signature":"8f2c1b2282f5e8ea833e18182209672addf744531d1a08540d96f631e006ef80"},{"version":"62a5fbd9ea868599230c240ef133a322295266e3eba36834efd8657d5f8090e1","signature":"6f7aa1d4c08dd255a991dd645123969567d69bff44936848586b3c42fabc87f8"},{"version":"d4008653291cc23425a6a578b3ea3eab76ecb04ae5d60c814e452e712559fbaf","signature":"9c63f434a45ac174f7731f806ac76ecaf0cd7dbb871f6e5833c7b3e99d520562"},{"version":"98d27b136bf6ece21f624a4e73e3ff335d8a985c01f3167d620c324f501c3908","signature":"71f89070e559b4ce94b93ec00a7041509694cb7d8ba88d27ca284e11d97fed49"},{"version":"3de6666d34978c49f51e5920b17c929d80f142547729a85aa2ebb3b13c77fede","signature":"3b02eb5abbbf6e37836edf4271fb3d43123b5df5b6b4f09f0d241b0671bfcf6b"},{"version":"05b88e55de044f2584a855ea2cf3746c19806a7435cfef563485b3ede424640e","signature":"2391cd1770b11d1417e9620207a7d7b65e703aa6c307b3c13b4a49fc0f9b8ea9"},{"version":"2fde45f6e5bda67f5ac4aa02790a0c59bfccf2de7e07b895ef2a28d7e53c6b3a","signature":"8344613c5548777c6fdc9de02f6ccfec07d77783a379620f5d8501674c1738df"},{"version":"4aaafd5ec6ed19d8f3a3578bae5598801f5b3c413e219f3f266364be20a0e94e","signature":"89eb32a456efbb55cb9f319bea1e70201f0615afbe9b8d80575a5d1ad789ca95"},{"version":"feb7efa70aeced2d30e87be20b54cac82b63b503d944c69db70eee64d426356d","signature":"26483204d437d75adf4625e6e4be7b6a0303b55703c2e0e594a03ffe506f4995"},{"version":"677646e2620795c98a539fb12fb531f10331c217cef1492132b2518f894fa92d","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":false,"module":5,"noFallthroughCasesInSwitch":true,"noImplicitAny":false,"noImplicitReturns":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","sourceMap":true,"strict":true,"target":2},"fileIdsList":[[89,96],[89],[43,89],[46,89],[47,52,80,89],[48,59,60,67,77,88,89],[48,49,59,67,89],[50,89],[51,52,60,68,89],[52,77,85,89],[53,55,59,67,89],[54,89],[55,56,89],[59,89],[57,59,89],[59,60,61,77,88,89],[59,60,61,74,77,80,89],[89,93],[55,62,67,77,88,89],[59,60,62,63,67,77,85,88,89],[62,64,77,85,88,89],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],[59,65,89],[66,88,89],[55,59,67,77,89],[68,89],[69,89],[46,70,89],[71,87,89,93],[72,89],[73,89],[59,74,75,89],[74,76,89,91],[47,59,77,78,79,80,89],[47,77,79,89],[77,78,89],[80,89],[81,89],[59,83,84,89],[83,84,89],[52,67,77,85,89],[86,89],[67,87,89],[47,62,73,88,89],[52,89],[77,89,90],[89,91],[89,92],[47,52,59,61,70,77,88,89,91,93],[77,89,94],[89,96,97,107,111],[89,96,97,107],[47,89,96,97,107],[89,97,106],[89,96,107],[89,107,108,109,110,111,112,113,114,115,116],[89,96,111],[89,96,97,107,109,110],[89,96,105],[89,96,97],[62,64,67,89],[89,98],[62,64,89,99],[89,97],[89,98,103,117],[89,98,100,103,118,121,122,123,125,127,128,129,131,132,133,134,147,148,149,150,152,153],[89,98,118,122,127,129,130,131,134],[89,98,122,127,128],[89,118,151],[89,98,128,134],[89,98,101,118,122,125,126,134],[89,122,123,125,129,131,132,133,134],[89,117,122,125,131,134],[89,98,122,128,129],[89,98,121],[89,98,101,102,103,118],[89,122,146],[89,98,118,122,125,126,127,129,130,131,132,133],[89,101,102,103,118,119,120],[89,122,135,136,137,138,139,140,141,142,143,144,145],[89,122],[89,124],[89,118],[89,120,123,124],[103],[103,122,123,125,127,128,129,131,132,133,134,149,153],[122,131],[122,128],[151],[128],[122,125,126],[123,131,132],[121],[102,103],[122],[118,122,125,131,132],[118,120],[124],[118]],"referencedMap":[[97,1],[155,2],[43,3],[44,3],[46,4],[47,5],[48,6],[49,7],[50,8],[51,9],[52,10],[53,11],[54,12],[55,13],[56,13],[58,14],[57,15],[59,14],[60,16],[61,17],[45,18],[95,2],[62,19],[63,20],[64,21],[96,22],[65,23],[66,24],[67,25],[68,26],[69,27],[70,28],[71,29],[72,30],[73,31],[74,32],[75,32],[76,33],[77,34],[79,35],[78,36],[80,37],[81,38],[82,2],[83,39],[84,40],[85,41],[86,42],[87,43],[88,44],[89,45],[90,46],[91,47],[92,48],[93,49],[94,50],[104,2],[112,51],[109,52],[110,51],[108,53],[107,54],[113,55],[117,56],[116,2],[115,2],[114,57],[111,58],[106,59],[105,60],[8,2],[10,2],[9,2],[2,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[3,2],[4,2],[22,2],[19,2],[20,2],[21,2],[23,2],[24,2],[25,2],[5,2],[26,2],[27,2],[28,2],[29,2],[6,2],[33,2],[30,2],[31,2],[32,2],[34,2],[7,2],[35,2],[40,2],[41,2],[36,2],[37,2],[38,2],[39,2],[1,2],[42,2],[99,61],[101,62],[100,63],[98,64],[143,2],[144,2],[145,2],[135,2],[136,2],[137,2],[138,2],[139,2],[140,2],[141,2],[142,2],[118,65],[151,2],[154,66],[133,67],[153,68],[152,69],[129,70],[127,71],[150,72],[149,73],[130,74],[148,75],[119,76],[147,77],[134,78],[121,79],[146,80],[123,81],[122,2],[132,2],[102,2],[103,2],[131,82],[128,82],[124,83],[126,82],[125,84],[120,2]],"exportedModulesMap":[[97,1],[155,2],[43,3],[44,3],[46,4],[47,5],[48,6],[49,7],[50,8],[51,9],[52,10],[53,11],[54,12],[55,13],[56,13],[58,14],[57,15],[59,14],[60,16],[61,17],[45,18],[95,2],[62,19],[63,20],[64,21],[96,22],[65,23],[66,24],[67,25],[68,26],[69,27],[70,28],[71,29],[72,30],[73,31],[74,32],[75,32],[76,33],[77,34],[79,35],[78,36],[80,37],[81,38],[82,2],[83,39],[84,40],[85,41],[86,42],[87,43],[88,44],[89,45],[90,46],[91,47],[92,48],[93,49],[94,50],[104,2],[112,51],[109,52],[110,51],[108,53],[107,54],[113,55],[117,56],[116,2],[115,2],[114,57],[111,58],[106,59],[105,60],[8,2],[10,2],[9,2],[2,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[3,2],[4,2],[22,2],[19,2],[20,2],[21,2],[23,2],[24,2],[25,2],[5,2],[26,2],[27,2],[28,2],[29,2],[6,2],[33,2],[30,2],[31,2],[32,2],[34,2],[7,2],[35,2],[40,2],[41,2],[36,2],[37,2],[38,2],[39,2],[1,2],[42,2],[99,61],[101,62],[100,63],[98,64],[143,2],[144,2],[145,2],[135,2],[136,2],[137,2],[138,2],[139,2],[140,2],[141,2],[142,2],[118,85],[154,86],[133,87],[153,88],[152,89],[129,90],[127,91],[150,92],[149,87],[130,88],[148,93],[119,94],[147,95],[134,96],[121,97],[146,95],[123,95],[131,98],[128,98],[124,99],[126,98],[125,84]],"semanticDiagnosticsPerFile":[97,155,43,44,46,47,48,49,50,51,52,53,54,55,56,58,57,59,60,61,45,95,62,63,64,96,65,66,67,68,69,70,71,72,73,74,75,76,77,79,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,104,112,109,110,108,107,113,117,116,115,114,111,106,105,8,10,9,2,11,12,13,14,15,16,17,18,3,4,22,19,20,21,23,24,25,5,26,27,28,29,6,33,30,31,32,34,7,35,40,41,36,37,38,39,1,42,99,101,100,98,143,144,145,135,136,137,138,139,140,141,142,118,151,154,133,153,152,129,127,150,149,130,148,119,147,134,121,146,123,122,132,102,103,131,128,124,126,125,120]},"version":"4.9.5"}
\ No newline at end of file
+{"program":{"fileNames":["../../node_modules/typescript/lib/lib.es5.d.ts","../../node_modules/typescript/lib/lib.es2015.d.ts","../../node_modules/typescript/lib/lib.es2016.d.ts","../../node_modules/typescript/lib/lib.es2017.d.ts","../../node_modules/typescript/lib/lib.es2018.d.ts","../../node_modules/typescript/lib/lib.es2019.d.ts","../../node_modules/typescript/lib/lib.es2020.d.ts","../../node_modules/typescript/lib/lib.dom.d.ts","../../node_modules/typescript/lib/lib.es2015.core.d.ts","../../node_modules/typescript/lib/lib.es2015.collection.d.ts","../../node_modules/typescript/lib/lib.es2015.generator.d.ts","../../node_modules/typescript/lib/lib.es2015.iterable.d.ts","../../node_modules/typescript/lib/lib.es2015.promise.d.ts","../../node_modules/typescript/lib/lib.es2015.proxy.d.ts","../../node_modules/typescript/lib/lib.es2015.reflect.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.d.ts","../../node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2016.array.include.d.ts","../../node_modules/typescript/lib/lib.es2017.object.d.ts","../../node_modules/typescript/lib/lib.es2017.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2017.string.d.ts","../../node_modules/typescript/lib/lib.es2017.intl.d.ts","../../node_modules/typescript/lib/lib.es2017.typedarrays.d.ts","../../node_modules/typescript/lib/lib.es2018.asyncgenerator.d.ts","../../node_modules/typescript/lib/lib.es2018.asynciterable.d.ts","../../node_modules/typescript/lib/lib.es2018.intl.d.ts","../../node_modules/typescript/lib/lib.es2018.promise.d.ts","../../node_modules/typescript/lib/lib.es2018.regexp.d.ts","../../node_modules/typescript/lib/lib.es2019.array.d.ts","../../node_modules/typescript/lib/lib.es2019.object.d.ts","../../node_modules/typescript/lib/lib.es2019.string.d.ts","../../node_modules/typescript/lib/lib.es2019.symbol.d.ts","../../node_modules/typescript/lib/lib.es2019.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.bigint.d.ts","../../node_modules/typescript/lib/lib.es2020.date.d.ts","../../node_modules/typescript/lib/lib.es2020.promise.d.ts","../../node_modules/typescript/lib/lib.es2020.sharedmemory.d.ts","../../node_modules/typescript/lib/lib.es2020.string.d.ts","../../node_modules/typescript/lib/lib.es2020.symbol.wellknown.d.ts","../../node_modules/typescript/lib/lib.es2020.intl.d.ts","../../node_modules/typescript/lib/lib.es2020.number.d.ts","../../node_modules/typescript/lib/lib.esnext.intl.d.ts","../../node_modules/@types/node/assert.d.ts","../../node_modules/@types/node/assert/strict.d.ts","../../node_modules/@types/node/globals.d.ts","../../node_modules/@types/node/async_hooks.d.ts","../../node_modules/@types/node/buffer.d.ts","../../node_modules/@types/node/child_process.d.ts","../../node_modules/@types/node/cluster.d.ts","../../node_modules/@types/node/console.d.ts","../../node_modules/@types/node/constants.d.ts","../../node_modules/@types/node/crypto.d.ts","../../node_modules/@types/node/dgram.d.ts","../../node_modules/@types/node/diagnostics_channel.d.ts","../../node_modules/@types/node/dns.d.ts","../../node_modules/@types/node/dns/promises.d.ts","../../node_modules/@types/node/domain.d.ts","../../node_modules/@types/node/dom-events.d.ts","../../node_modules/@types/node/events.d.ts","../../node_modules/@types/node/fs.d.ts","../../node_modules/@types/node/fs/promises.d.ts","../../node_modules/@types/node/http.d.ts","../../node_modules/@types/node/http2.d.ts","../../node_modules/@types/node/https.d.ts","../../node_modules/@types/node/inspector.d.ts","../../node_modules/@types/node/module.d.ts","../../node_modules/@types/node/net.d.ts","../../node_modules/@types/node/os.d.ts","../../node_modules/@types/node/path.d.ts","../../node_modules/@types/node/perf_hooks.d.ts","../../node_modules/@types/node/process.d.ts","../../node_modules/@types/node/punycode.d.ts","../../node_modules/@types/node/querystring.d.ts","../../node_modules/@types/node/readline.d.ts","../../node_modules/@types/node/readline/promises.d.ts","../../node_modules/@types/node/repl.d.ts","../../node_modules/@types/node/stream.d.ts","../../node_modules/@types/node/stream/promises.d.ts","../../node_modules/@types/node/stream/consumers.d.ts","../../node_modules/@types/node/stream/web.d.ts","../../node_modules/@types/node/string_decoder.d.ts","../../node_modules/@types/node/test.d.ts","../../node_modules/@types/node/timers.d.ts","../../node_modules/@types/node/timers/promises.d.ts","../../node_modules/@types/node/tls.d.ts","../../node_modules/@types/node/trace_events.d.ts","../../node_modules/@types/node/tty.d.ts","../../node_modules/@types/node/url.d.ts","../../node_modules/@types/node/util.d.ts","../../node_modules/@types/node/v8.d.ts","../../node_modules/@types/node/vm.d.ts","../../node_modules/@types/node/wasi.d.ts","../../node_modules/@types/node/worker_threads.d.ts","../../node_modules/@types/node/zlib.d.ts","../../node_modules/@types/node/globals.global.d.ts","../../node_modules/@types/node/index.d.ts","../../node_modules/@types/bn.js/index.d.ts","../../node_modules/web3-utils/types/index.d.ts","../../node_modules/web3-core-helpers/types/index.d.ts","../../node_modules/web3-providers-http/types/index.d.ts","../../node_modules/web3-eth-abi/types/index.d.ts","../../src/types/jsonrpc.ts","../../src/types/method.ts","../../node_modules/buffer/index.d.ts","../../node_modules/rlp/dist/types.d.ts","../../node_modules/rlp/dist/index.d.ts","../../node_modules/ethereumjs-util/dist/externals.d.ts","../../node_modules/ethereumjs-util/dist/constants.d.ts","../../node_modules/ethereumjs-util/dist/address.d.ts","../../node_modules/ethereumjs-util/dist/bytes.d.ts","../../node_modules/ethereumjs-util/dist/types.d.ts","../../node_modules/ethereumjs-util/dist/account.d.ts","../../node_modules/ethereumjs-util/dist/hash.d.ts","../../node_modules/ethereumjs-util/dist/signature.d.ts","../../node_modules/ethereumjs-util/dist/object.d.ts","../../node_modules/ethereumjs-util/dist/internal.d.ts","../../node_modules/ethereumjs-util/dist/index.d.ts","../../src/constants/constants.ts","../../src/lib/provider-wrapper-utils.ts","../../src/types/provider.ts","../../src/provider/providerwrapper.ts","../../src/types/erc725jsonschema.ts","../../src/types/config.ts","../../src/types/encodedata/jsonurl.ts","../../src/types/index.ts","../../src/types/encodedata/index.ts","../../src/lib/encoder.ts","../../src/types/dynamickeys.ts","../../src/lib/encodekeyname.ts","../../src/lib/getschemaelement.ts","../../src/types/decodedata.ts","../../src/types/getdata.ts","../../src/lib/decodedata.ts","../../src/lib/utils.ts","../../schemas/lsp1universalreceiverdelegate.json","../../schemas/lsp3profilemetadata.json","../../schemas/lsp4digitalasset.json","../../schemas/lsp4digitalassetlegacy.json","../../schemas/lsp5receivedassets.json","../../schemas/lsp6keymanager.json","../../schemas/lsp8identifiabledigitalasset.json","../../schemas/lsp9vault.json","../../schemas/lsp10receivedvaults.json","../../schemas/lsp12issuedassets.json","../../schemas/lsp17contractextension.json","../../src/schemas/index.ts","../../src/lib/schemaparser.ts","../../src/lib/isvalidsignature.ts","../../src/lib/getdatafromexternalsources.ts","../../src/lib/getdata.ts","../../src/constants/interfaces.ts","../../src/lib/detector.ts","../../src/lib/decodemappingkey.ts","../../src/index.ts","../../node_modules/@types/mocha/index.d.ts"],"fileInfos":[{"version":"8730f4bf322026ff5229336391a18bcaa1f94d4f82416c8b2f3954e2ccaae2ba","affectsGlobalScope":true},"dc47c4fa66b9b9890cf076304de2a9c5201e94b740cffdf09f87296d877d71f6","7a387c58583dfca701b6c85e0adaf43fb17d590fb16d5b2dc0a2fbd89f35c467","8a12173c586e95f4433e0c6dc446bc88346be73ffe9ca6eec7aa63c8f3dca7f9","5f4e733ced4e129482ae2186aae29fde948ab7182844c3a5a51dd346182c7b06","4b421cbfb3a38a27c279dec1e9112c3d1da296f77a1a85ddadf7e7a425d45d18","1fc5ab7a764205c68fa10d381b08417795fc73111d6dd16b5b1ed36badb743d9",{"version":"3aafcb693fe5b5c3bd277bd4c3a617b53db474fe498fc5df067c5603b1eebde7","affectsGlobalScope":true},{"version":"adb996790133eb33b33aadb9c09f15c2c575e71fb57a62de8bf74dbf59ec7dfb","affectsGlobalScope":true},{"version":"8cc8c5a3bac513368b0157f3d8b31cfdcfe78b56d3724f30f80ed9715e404af8","affectsGlobalScope":true},{"version":"cdccba9a388c2ee3fd6ad4018c640a471a6c060e96f1232062223063b0a5ac6a","affectsGlobalScope":true},{"version":"c5c05907c02476e4bde6b7e76a79ffcd948aedd14b6a8f56e4674221b0417398","affectsGlobalScope":true},{"version":"5f406584aef28a331c36523df688ca3650288d14f39c5d2e555c95f0d2ff8f6f","affectsGlobalScope":true},{"version":"22f230e544b35349cfb3bd9110b6ef37b41c6d6c43c3314a31bd0d9652fcec72","affectsGlobalScope":true},{"version":"7ea0b55f6b315cf9ac2ad622b0a7813315bb6e97bf4bb3fbf8f8affbca7dc695","affectsGlobalScope":true},{"version":"3013574108c36fd3aaca79764002b3717da09725a36a6fc02eac386593110f93","affectsGlobalScope":true},{"version":"eb26de841c52236d8222f87e9e6a235332e0788af8c87a71e9e210314300410a","affectsGlobalScope":true},{"version":"3be5a1453daa63e031d266bf342f3943603873d890ab8b9ada95e22389389006","affectsGlobalScope":true},{"version":"17bb1fc99591b00515502d264fa55dc8370c45c5298f4a5c2083557dccba5a2a","affectsGlobalScope":true},{"version":"7ce9f0bde3307ca1f944119f6365f2d776d281a393b576a18a2f2893a2d75c98","affectsGlobalScope":true},{"version":"6a6b173e739a6a99629a8594bfb294cc7329bfb7b227f12e1f7c11bc163b8577","affectsGlobalScope":true},{"version":"81cac4cbc92c0c839c70f8ffb94eb61e2d32dc1c3cf6d95844ca099463cf37ea","affectsGlobalScope":true},{"version":"b0124885ef82641903d232172577f2ceb5d3e60aed4da1153bab4221e1f6dd4e","affectsGlobalScope":true},{"version":"0eb85d6c590b0d577919a79e0084fa1744c1beba6fd0d4e951432fa1ede5510a","affectsGlobalScope":true},{"version":"da233fc1c8a377ba9e0bed690a73c290d843c2c3d23a7bd7ec5cd3d7d73ba1e0","affectsGlobalScope":true},{"version":"d154ea5bb7f7f9001ed9153e876b2d5b8f5c2bb9ec02b3ae0d239ec769f1f2ae","affectsGlobalScope":true},{"version":"bb2d3fb05a1d2ffbca947cc7cbc95d23e1d053d6595391bd325deb265a18d36c","affectsGlobalScope":true},{"version":"c80df75850fea5caa2afe43b9949338ce4e2de086f91713e9af1a06f973872b8","affectsGlobalScope":true},{"version":"9d57b2b5d15838ed094aa9ff1299eecef40b190722eb619bac4616657a05f951","affectsGlobalScope":true},{"version":"6c51b5dd26a2c31dbf37f00cfc32b2aa6a92e19c995aefb5b97a3a64f1ac99de","affectsGlobalScope":true},{"version":"6e7997ef61de3132e4d4b2250e75343f487903ddf5370e7ce33cf1b9db9a63ed","affectsGlobalScope":true},{"version":"2ad234885a4240522efccd77de6c7d99eecf9b4de0914adb9a35c0c22433f993","affectsGlobalScope":true},{"version":"5e5e095c4470c8bab227dbbc61374878ecead104c74ab9960d3adcccfee23205","affectsGlobalScope":true},{"version":"09aa50414b80c023553090e2f53827f007a301bc34b0495bfb2c3c08ab9ad1eb","affectsGlobalScope":true},{"version":"d7f680a43f8cd12a6b6122c07c54ba40952b0c8aa140dcfcf32eb9e6cb028596","affectsGlobalScope":true},{"version":"3787b83e297de7c315d55d4a7c546ae28e5f6c0a361b7a1dcec1f1f50a54ef11","affectsGlobalScope":true},{"version":"e7e8e1d368290e9295ef18ca23f405cf40d5456fa9f20db6373a61ca45f75f40","affectsGlobalScope":true},{"version":"faf0221ae0465363c842ce6aa8a0cbda5d9296940a8e26c86e04cc4081eea21e","affectsGlobalScope":true},{"version":"06393d13ea207a1bfe08ec8d7be562549c5e2da8983f2ee074e00002629d1871","affectsGlobalScope":true},{"version":"2768ef564cfc0689a1b76106c421a2909bdff0acbe87da010785adab80efdd5c","affectsGlobalScope":true},{"version":"b248e32ca52e8f5571390a4142558ae4f203ae2f94d5bac38a3084d529ef4e58","affectsGlobalScope":true},{"version":"52d1bb7ab7a3306fd0375c8bff560feed26ed676a5b0457fa8027b563aecb9a4","affectsGlobalScope":true},"7e771891adaa85b690266bc37bd6eb43bc57eecc4b54693ead36467e7369952a","a69c09dbea52352f479d3e7ac949fde3d17b195abe90b045d619f747b38d6d1a",{"version":"ca72190df0eb9b09d4b600821c8c7b6c9747b75a1c700c4d57dc0bb72abc074c","affectsGlobalScope":true},"21a167fec8f933752fb8157f06d28fab6817af3ad9b0bdb1908a10762391eab9",{"version":"bb65c6267c5d6676be61acbf6604cf0a4555ac4b505df58ac15c831fcbff4e3e","affectsGlobalScope":true},"374ca798f244e464346f14301dc2a8b4b111af1a83b49fffef5906c338a1f922","5a94487653355b56018122d92392beb2e5f4a6c63ba5cef83bbe1c99775ef713",{"version":"d5135ad93b33adcce80b18f8065087934cdc1730d63db58562edcf017e1aad9b","affectsGlobalScope":true},"82408ed3e959ddc60d3e9904481b5a8dc16469928257af22a3f7d1a3bc7fd8c4","dab86d9604fe40854ef3c0a6f9e8948873dc3509213418e5e457f410fd11200f","bb9c4ffa5e6290c6980b63c815cdd1625876dadb2efaf77edbe82984be93e55e","489532ff54b714f0e0939947a1c560e516d3ae93d51d639ab02e907a0e950114","f30bb836526d930a74593f7b0f5c1c46d10856415a8f69e5e2fc3db80371e362","14b5aa23c5d0ae1907bc696ac7b6915d88f7d85799cc0dc2dcf98fbce2c5a67c","5c439dafdc09abe4d6c260a96b822fa0ba5be7203c71a63ab1f1423cd9e838ea",{"version":"6b526a5ec4a401ca7c26cfe6a48e641d8f30af76673bad3b06a1b4504594a960","affectsGlobalScope":true},{"version":"816ad2e607a96de5bcac7d437f843f5afd8957f1fa5eefa6bba8e4ed7ca8fd84","affectsGlobalScope":true},"cec36af22f514322f870e81d30675c78df82ae8bf4863f5fd4e4424c040c678d","d903fafe96674bc0b2ac38a5be4a8fc07b14c2548d1cdb165a80ea24c44c0c54","5eec82ac21f84d83586c59a16b9b8502d34505d1393393556682fe7e7fde9ef2","04eb6578a588d6a46f50299b55f30e3a04ef27d0c5a46c57d8fcc211cd530faa","8d3c583a07e0c37e876908c2d5da575019f689df8d9fa4c081d99119d53dba22","2c828a5405191d006115ab34e191b8474bc6c86ffdc401d1a9864b1b6e088a58",{"version":"e630e5528e899219ae319e83bef54bf3bcb91b01d76861ecf881e8e614b167f0","affectsGlobalScope":true},"d076fede3cb042e7b13fc29442aaa03a57806bc51e2b26a67a01fbc66a7c0c12","7c013aa892414a7fdcfd861ae524a668eaa3ede8c7c0acafaf611948122c8d93","b0973c3cbcdc59b37bf477731d468696ecaf442593ec51bab497a613a580fe30",{"version":"4989e92ba5b69b182d2caaea6295af52b7dc73a4f7a2e336a676722884e7139d","affectsGlobalScope":true},{"version":"b3624aed92dab6da8484280d3cb3e2f4130ec3f4ef3f8201c95144ae9e898bb6","affectsGlobalScope":true},"5153a2fd150e46ce57bb3f8db1318d33f6ad3261ed70ceeff92281c0608c74a3","210d54cd652ec0fec8c8916e4af59bb341065576ecda039842f9ffb2e908507c","36b03690b628eab08703d63f04eaa89c5df202e5f1edf3989f13ad389cd2c091","0effadd232a20498b11308058e334d3339cc5bf8c4c858393e38d9d4c0013dcf","25846d43937c672bab7e8195f3d881f93495df712ee901860effc109918938cc","fd93cee2621ff42dabe57b7be402783fd1aa69ece755bcba1e0290547ae60513","1b952304137851e45bc009785de89ada562d9376177c97e37702e39e60c2f1ff","69ee23dd0d215b09907ad30d23f88b7790c93329d1faf31d7835552a10cf7cbf","44b8b584a338b190a59f4f6929d072431950c7bd92ec2694821c11bce180c8a5","23b89798789dffbd437c0c423f5d02d11f9736aea73d6abf16db4f812ff36eda","223c37f62ce09a3d99e77498acdee7b2705a4ae14552fbdb4093600cd9164f3f",{"version":"970a90f76d4d219ad60819d61f5994514087ba94c985647a3474a5a3d12714ed","affectsGlobalScope":true},"e10177274a35a9d07c825615340b2fcde2f610f53f3fb40269fd196b4288dda6","4c8525f256873c7ba3135338c647eaf0ca7115a1a2805ae2d0056629461186ce","3c13ef48634e7b5012fcf7e8fce7496352c2d779a7201389ca96a2a81ee4314d","5d0a25ec910fa36595f85a67ac992d7a53dd4064a1ba6aea1c9f14ab73a023f2",{"version":"f0900cd5d00fe1263ff41201fb8073dbeb984397e4af3b8002a5c207a30bdc33","affectsGlobalScope":true},{"version":"4c50342e1b65d3bee2ed4ab18f84842d5724ad11083bd666d8705dc7a6079d80","affectsGlobalScope":true},"06d7c42d256f0ce6afe1b2b6cfbc97ab391f29dadb00dd0ae8e8f23f5bc916c3","ec4bd1b200670fb567920db572d6701ed42a9641d09c4ff6869768c8f81b404c","e59a892d87e72733e2a9ca21611b9beb52977be2696c7ba4b216cbbb9a48f5aa",{"version":"da26af7362f53d122283bc69fed862b9a9fe27e01bc6a69d1d682e0e5a4df3e6","affectsGlobalScope":true},"8a300fa9b698845a1f9c41ecbe2c5966634582a8e2020d51abcace9b55aa959e",{"version":"ab9b9a36e5284fd8d3bf2f7d5fcbc60052f25f27e4d20954782099282c60d23e","affectsGlobalScope":true},"8dbe725f8d237e70310977afcfa011629804d101ebaa0266cafda6b61ad72236","01f7828047b5c6703d3c601473618b448f5506a88fcac852638b0715c3abf4eb","7bf3de0c35445f6a98bd5a88d0efe530963d762ff0f2443db010d40900770783","d22b49f8270b572e27a0e02854270c7b9848f693a5c93f7dccf4b08543b913dd","0144d077b79cbc1230472f455a04977b3702f60ff094889e731a555e8ac3d54d","f17d0f19ad9242b09b68a6d30402a841a7d4194d063855da5ca0567df0fb310e",{"version":"726501190402401d40562ea6b91ddd84981b10e5a0c08fb88275b56dad6f3480","signature":"65b2ce8a900bd729c899ef9a0176dd81e5430ec452e9ef2e42713ae89485c95d"},{"version":"71325a9006f3142baf41cb802fd1dd928f3edf6385de1e1fbb85a38825154ac2","signature":"d40e0499c489b01eea4b2b8704dcca8a6f4b7a20a6b17d0094abe7cc7ec62de5"},"8e9c23ba78aabc2e0a27033f18737a6df754067731e69dc5f52823957d60a4b6","1ee47e6ed1cf98c573934f9a63e65cd7acf7314a2654da2630c2be6bda12871b","8fcc2bc8dae2c29f7db02ca5112f343936e544bab0dd66c997ec2045fae4b660","89a120f976e17500b9e242637ae377462850517b04aa45981c92c60a490386ee","5e27d8df0309ba8dbd8459750ef7c2c1db5aedeabbc819220a1ecca79c84f4dc","8ef5395d145d1ae1306c20580380779723542f0a4d5c22c0dfe536d5922022ec","155d9f9576b2bb2662e58b8dc5979c3b614250c3279bbdddfbe54749b0ef2ec2","8a9e43259a9f444d80be68f87fd5d8a90c7915b519ef2d3e434d68a835490978","ee80d37ca2d62bd6e33106596fdf39827c248fab4b6dedcee5bdf6f9b4fca454","e95f565a375c039e04187524457c39b362419bdd537afcd52162e8df04e1f87c","d57804e7c53f370b8df0417df2aaea2c5cc2bcae96d6bb06f6bbdf8c3f06f939","a4dad01f270d6cd8ff8d8229d0975833ebf847e560dafaded532f8e31a497ecf","4e78c87355f7e4fd9524d7582a14bf72771aeee33acb73a848de8bf2e44d8831","71a2be4b91958938b4ada303568f2b7fedab5e7e8bc36ca952d51e10e712ae75",{"version":"af694603c4db838df22e38f3ca074adc303bae91893496db6e7c6fbc133a858c","signature":"be481c69c09d6b3c017b95fc297fd20bf46e309a114c82a3964078248703803b"},{"version":"7e49dd360dcf593454c9867bef859f06c7be056d27ce82b769c8377ce0b5cbea","signature":"40b1a00329ba61754ea09099a541129bca34bc48c0c5a95ef0189187dd9e9d03"},{"version":"02d092b379b16ff69c8d23f955ebd21228ecb0140ce222d54b06f7e0c240cba4","signature":"19048634899c590f489e5755a787e1d62e68378ad0b4ec18762d843ea1c9b767"},{"version":"9ebf593906ebfa82abf40cb001c8f0c519b654f6848ce1034ee788fe75aa11de","signature":"1df3a2ecb2e7ca598c6ff44211b34437118d13fc5faec07133575d99912db841"},{"version":"b2cd7cafdd40cb8d53681f9a97dd90fddaf15e4592298ce25129d4addbf98f4e","signature":"558ab3fc829949cc1c7c3b2f1c47d0bdb058454686545b789015a289e9c14f8d"},{"version":"a7a40fc1f085c6179e668a361e68278db06cd4c4c77f8bd01ad0470d7dbda8ec","signature":"693d6b5e82504c936a8b7c4edeccde1a6d7718080c36440bae81883e55f291fb"},{"version":"8005d1c010c03b480d2af026f6ef625ea2fd00ddb9ff6e2e1432853f05668906","signature":"f1e475904d2cf7066bdaea303fd0ff809695199821991d8cb13ac262ad6ce13b"},"0cdd9231111c28c24791f077f8c40ba05cda39c3f6e128a74c47ba0695873760",{"version":"d33ac4d91894de5be1f8bb2b149e2480db5437d2809d3447bd4df7455fd02f9c","signature":"99d32d860b57de27f607b4f68e161284fba79b68f14baf24de26913b8edfdc3e"},{"version":"376001f97e255ef4de6b0f31c58bbf422c7b4100fe56b18fd629a5ca70375c22","signature":"16c92423e184a84a565386a556c53bc3971df9b94419336ce49767b0e6adb7d7"},{"version":"5ee61fed9dcf795684dc790a92eff9618fd798838f84e275f3dc118fba7723d3","signature":"3668c8ad65186d367166f4d9f006b38efdab342a4dda965405873dc142c5150a"},{"version":"fc93367dc29945c0de35a272df893f9430951da1836dff77ba8b20fa6963cc3f","signature":"4c287557792689709bdf7e37f070f411c1a452c0acc80c0e6e5cbfde63e70323"},{"version":"efb364dea9a062e4bdd1984acc434810b9f9bf5bbb61cf0c5c08ad09e12e995d","signature":"dd4ddfd8ffe98c2e9db71fb6015954b74d144eb5822d3c4b9d1653fd1a9d4251"},{"version":"6cff4dcd1d456e74ed151183348ee255c2f34ef31d600fea28e4c6aefb7236d6","signature":"3736a3029e8273bdbebd370fea48894a7155abe5be6e6d6c7afac0c42ad73a14"},{"version":"730d4811a955ab26b732a5354216f48cdaec76a6f22e1f361a3394c870491759","signature":"090887d5c88e758a67be7f5f2dcd04d2eb848d826f89043ef53bc8a77fcdb219"},{"version":"acc7cfcc68d11a4cca207465b2f403b53cb0a29e459c4446f26a2b6b198ba2cc","signature":"c843501f6bbea4f90c89e1c882f3cd7e54ca78615d5da116d95d9584da0f2cf1"},{"version":"42100fa5e7fdf2aed8e75b8f276fcead4e4ecf0e0fe1cdcb6373f170fb50847a","signature":"a446da6f68aaa38de1220496272b9e08309a62769096cb9a4b5f432f22e0cfae"},"57659512730fa328707c7298d9b456519ac0b67de66695d05d511c1d802c7af5","a78ff27f388106730c96a13e521c1932e5f3244a6ff3c50fcda97f875805de7a","62af76d6b869b5348da04ad19e518b6c1320777d89dffb453d5b8a5b269c7ea7","f7b67cc79299969ff137659f87afa0426a9402a707cf6eb676ebd3bf4129632f","7c4cf63c71004591e0b63241787a76186846d42af419c31e100c6f2468441bd9","a0add096903b1e0ddd4edd8f0ea2f5500f75d6aac4b5f865a224efd04bfd399e","29b7e998e464d3a8d84e4363ba66b7d23150321ff38a6be23fd1194e53c07372","f85e69162986c567ba739068482c6646ca71d007c5b30fe8084de733b4de59d8","8d194a0b1c9226020fe78f740bcfcde0d8d32327f91f567c82f73bc16b2f45e8","69e7ebc85cebd16d481551549d3877ae455bddf5ea42ce676e4e0fb5f48ba4d7","888c7a8dd0fcf26547c4e33ebcd27a970d367974f47b8314715410f1ea4fcca7",{"version":"cee63d59ff9b8e006301206aaf721fac1f11a7f74fa68dd7c0d15e6511e69c12","signature":"8f2c1b2282f5e8ea833e18182209672addf744531d1a08540d96f631e006ef80"},{"version":"62a5fbd9ea868599230c240ef133a322295266e3eba36834efd8657d5f8090e1","signature":"6f7aa1d4c08dd255a991dd645123969567d69bff44936848586b3c42fabc87f8"},{"version":"d4008653291cc23425a6a578b3ea3eab76ecb04ae5d60c814e452e712559fbaf","signature":"9c63f434a45ac174f7731f806ac76ecaf0cd7dbb871f6e5833c7b3e99d520562"},{"version":"95263c32fbebfbfa8e488264f6c5dc9f983001f36c3875051a0a0ca8ee1f5c25","signature":"71f89070e559b4ce94b93ec00a7041509694cb7d8ba88d27ca284e11d97fed49"},{"version":"3de6666d34978c49f51e5920b17c929d80f142547729a85aa2ebb3b13c77fede","signature":"3b02eb5abbbf6e37836edf4271fb3d43123b5df5b6b4f09f0d241b0671bfcf6b"},{"version":"05b88e55de044f2584a855ea2cf3746c19806a7435cfef563485b3ede424640e","signature":"2391cd1770b11d1417e9620207a7d7b65e703aa6c307b3c13b4a49fc0f9b8ea9"},{"version":"2fde45f6e5bda67f5ac4aa02790a0c59bfccf2de7e07b895ef2a28d7e53c6b3a","signature":"8344613c5548777c6fdc9de02f6ccfec07d77783a379620f5d8501674c1738df"},{"version":"4aaafd5ec6ed19d8f3a3578bae5598801f5b3c413e219f3f266364be20a0e94e","signature":"89eb32a456efbb55cb9f319bea1e70201f0615afbe9b8d80575a5d1ad789ca95"},{"version":"4fcec4233adff5e3744610568c873fcc81b5a04549839c11b834550857f1db58","signature":"b80ab685a6da4cc0031c2a0ab54772d73e29fa6bbce18e397e68cae493363d66"},{"version":"677646e2620795c98a539fb12fb531f10331c217cef1492132b2518f894fa92d","affectsGlobalScope":true}],"options":{"declaration":true,"esModuleInterop":true,"inlineSourceMap":false,"module":5,"noFallthroughCasesInSwitch":true,"noImplicitAny":false,"noImplicitReturns":true,"noUnusedLocals":true,"noUnusedParameters":true,"outDir":"./","sourceMap":true,"strict":true,"target":2},"fileIdsList":[[89,96],[89],[43,89],[46,89],[47,52,80,89],[48,59,60,67,77,88,89],[48,49,59,67,89],[50,89],[51,52,60,68,89],[52,77,85,89],[53,55,59,67,89],[54,89],[55,56,89],[59,89],[57,59,89],[59,60,61,77,88,89],[59,60,61,74,77,80,89],[89,93],[55,62,67,77,88,89],[59,60,62,63,67,77,85,88,89],[62,64,77,85,88,89],[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],[59,65,89],[66,88,89],[55,59,67,77,89],[68,89],[69,89],[46,70,89],[71,87,89,93],[72,89],[73,89],[59,74,75,89],[74,76,89,91],[47,59,77,78,79,80,89],[47,77,79,89],[77,78,89],[80,89],[81,89],[59,83,84,89],[83,84,89],[52,67,77,85,89],[86,89],[67,87,89],[47,62,73,88,89],[52,89],[77,89,90],[89,91],[89,92],[47,52,59,61,70,77,88,89,91,93],[77,89,94],[89,96,97,107,111],[89,96,97,107],[47,89,96,97,107],[89,97,106],[89,96,107],[89,107,108,109,110,111,112,113,114,115,116],[89,96,111],[89,96,97,107,109,110],[89,96,105],[89,96,97],[62,64,67,89],[89,98],[62,64,89,99],[89,97],[89,98,103,117],[89,98,100,103,118,121,122,123,125,127,128,129,131,132,133,134,147,148,149,150,152,153],[89,98,118,122,127,129,130,131,134],[89,98,122,127,128],[89,118,151],[89,98,128,134],[89,98,101,118,122,125,126,134],[89,122,123,125,129,131,132,133,134],[89,117,122,125,131,134],[89,98,122,128,129],[89,98,121],[89,98,101,102,103,118],[89,122,146],[89,98,118,122,125,126,127,129,130,131,132,133],[89,101,102,103,118,119,120],[89,122,135,136,137,138,139,140,141,142,143,144,145],[89,122],[89,124],[89,118],[89,120,123,124],[103],[103,122,123,125,127,128,129,131,132,133,134,149,153],[122,131],[122,128],[151],[128],[122,125,126],[123,131,132],[121],[102,103],[122],[118,122,125,131,132],[118,120],[124],[118]],"referencedMap":[[97,1],[155,2],[43,3],[44,3],[46,4],[47,5],[48,6],[49,7],[50,8],[51,9],[52,10],[53,11],[54,12],[55,13],[56,13],[58,14],[57,15],[59,14],[60,16],[61,17],[45,18],[95,2],[62,19],[63,20],[64,21],[96,22],[65,23],[66,24],[67,25],[68,26],[69,27],[70,28],[71,29],[72,30],[73,31],[74,32],[75,32],[76,33],[77,34],[79,35],[78,36],[80,37],[81,38],[82,2],[83,39],[84,40],[85,41],[86,42],[87,43],[88,44],[89,45],[90,46],[91,47],[92,48],[93,49],[94,50],[104,2],[112,51],[109,52],[110,51],[108,53],[107,54],[113,55],[117,56],[116,2],[115,2],[114,57],[111,58],[106,59],[105,60],[8,2],[10,2],[9,2],[2,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[3,2],[4,2],[22,2],[19,2],[20,2],[21,2],[23,2],[24,2],[25,2],[5,2],[26,2],[27,2],[28,2],[29,2],[6,2],[33,2],[30,2],[31,2],[32,2],[34,2],[7,2],[35,2],[40,2],[41,2],[36,2],[37,2],[38,2],[39,2],[1,2],[42,2],[99,61],[101,62],[100,63],[98,64],[143,2],[144,2],[145,2],[135,2],[136,2],[137,2],[138,2],[139,2],[140,2],[141,2],[142,2],[118,65],[151,2],[154,66],[133,67],[153,68],[152,69],[129,70],[127,71],[150,72],[149,73],[130,74],[148,75],[119,76],[147,77],[134,78],[121,79],[146,80],[123,81],[131,82],[128,82],[126,82],[124,83],[122,2],[132,2],[125,84],[102,2],[103,2],[120,2]],"exportedModulesMap":[[97,1],[155,2],[43,3],[44,3],[46,4],[47,5],[48,6],[49,7],[50,8],[51,9],[52,10],[53,11],[54,12],[55,13],[56,13],[58,14],[57,15],[59,14],[60,16],[61,17],[45,18],[95,2],[62,19],[63,20],[64,21],[96,22],[65,23],[66,24],[67,25],[68,26],[69,27],[70,28],[71,29],[72,30],[73,31],[74,32],[75,32],[76,33],[77,34],[79,35],[78,36],[80,37],[81,38],[82,2],[83,39],[84,40],[85,41],[86,42],[87,43],[88,44],[89,45],[90,46],[91,47],[92,48],[93,49],[94,50],[104,2],[112,51],[109,52],[110,51],[108,53],[107,54],[113,55],[117,56],[116,2],[115,2],[114,57],[111,58],[106,59],[105,60],[8,2],[10,2],[9,2],[2,2],[11,2],[12,2],[13,2],[14,2],[15,2],[16,2],[17,2],[18,2],[3,2],[4,2],[22,2],[19,2],[20,2],[21,2],[23,2],[24,2],[25,2],[5,2],[26,2],[27,2],[28,2],[29,2],[6,2],[33,2],[30,2],[31,2],[32,2],[34,2],[7,2],[35,2],[40,2],[41,2],[36,2],[37,2],[38,2],[39,2],[1,2],[42,2],[99,61],[101,62],[100,63],[98,64],[143,2],[144,2],[145,2],[135,2],[136,2],[137,2],[138,2],[139,2],[140,2],[141,2],[142,2],[118,85],[154,86],[133,87],[153,88],[152,89],[129,90],[127,91],[150,92],[149,87],[130,88],[148,93],[119,94],[147,95],[134,96],[121,97],[146,95],[123,95],[131,98],[128,98],[126,98],[124,99],[125,84]],"semanticDiagnosticsPerFile":[97,155,43,44,46,47,48,49,50,51,52,53,54,55,56,58,57,59,60,61,45,95,62,63,64,96,65,66,67,68,69,70,71,72,73,74,75,76,77,79,78,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,104,112,109,110,108,107,113,117,116,115,114,111,106,105,8,10,9,2,11,12,13,14,15,16,17,18,3,4,22,19,20,21,23,24,25,5,26,27,28,29,6,33,30,31,32,34,7,35,40,41,36,37,38,39,1,42,99,101,100,98,143,144,145,135,136,137,138,139,140,141,142,118,151,154,133,153,152,129,127,150,149,130,148,119,147,134,121,146,123,131,128,126,124,122,132,125,102,103,120]},"version":"4.9.5"}
\ No newline at end of file
diff --git a/package.json b/package.json
index b81507a5a0fa6f323ca920cce048c0436822d063..a04220203196c35a0e4029006066c91e6d786f52 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "@erc725/erc725.js",
-  "version": "0.23.1",
+  "version": "0.23.0",
   "description": "Library to interact with ERC725 smart contracts",
   "main": "build/main/src/index.js",
   "typings": "build/main/src/index.d.ts",
