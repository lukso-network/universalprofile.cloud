on:
  workflow_call:
    inputs:
      sha:
        description: 'Github sha'
        required: true
        type: string
      ref:
        description: 'Github ref'
        required: true
        type: string
      tag_name:
        description: 'Github tag_name'
        type: string
      release_created:
        description: 'Github release_created'
        type: string
      pr_number:
        description: 'PR Number'
        type: string

env:
  CF_PROJECT_NAME: wallet-universalprofile-cloud
  CF_BASE_URL: wallet-universalprofile-cloud

name: build artifacts
jobs:
  install:
    name: Install and Lint
    outputs:
      node_version: ${{ steps.nodeversion.outputs.content }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ${{ inputs.sha }}
        uses: actions/checkout@master
        with:
          ref: ${{ inputs.sha }}
      - name: Read .node-version
        id: nodeversion
        uses: juliangruber/read-file-action@v1.1.6
        with:
          path: ./.node-version
      - name: üéõ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.nodeversion.outputs.content }}
          cache: 'yarn'

      - name: ‚öôÔ∏è Install
        run: yarn

  build:
    runs-on: ubuntu-latest
    needs: install
    if: ${{ inputs.release_created != 'true' }}
    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v3

      - name: üéõ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.install.outputs.node_version }}
          cache: 'yarn'

      - name: ‚öôÔ∏è Install
        run: yarn

      - name: üé® Lint JS
        run: yarn lint

      # - name: üèóÔ∏è Build (for publish)
      #   if: ${{ inputs.release_created == 'true' }}
      #   run: yarn build

  test:
    runs-on: ubuntu-latest
    needs: install
    name: App Unit Tests

    steps:
      - name: Checkout ${{ inputs.sha }}
        uses: actions/checkout@master
        with:
          ref: ${{ inputs.sha }}
      - name: üéõ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.install.outputs.node_version }}
          cache: 'yarn'
      - name: ‚öôÔ∏è Install
        run: yarn

      - name: ‚öôÔ∏è Install Playwright
        run: yarn playwright install --with-deps chromium

      - name: üß™ Testing
        run: yarn test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  deploy:
    needs:
      - test
      - install
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: |
          PR_NUMBER="${{ inputs.pr_number }}"
          if [ -n "$PR_NUMBER" ]
          then
            echo "branch_name=pr-${PR_NUMBER}" >> $GITHUB_OUTPUT
            echo "url=https://pr-${PR_NUMBER}.${{ env.CF_BASE_URL }}.pages.dev" >> $GITHUB_OUTPUT
          else
            if [ "${{ inputs.ref }}" = "refs/heads/develop" ]
            then
              echo "branch_name=develop" >> $GITHUB_OUTPUT
              echo "url=https://develop.${{ env.CF_BASE_URL }}.pages.dev" >> $GITHUB_OUTPUT
            else
              echo "branch_name=" >> $GITHUB_OUTPUT
            fi
          fi

        id: extract_branch

      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v3

      - name: üéõ Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ needs.install.outputs.node_version }}
          cache: 'yarn'

      - name: ‚öôÔ∏è Install
        run: yarn

      - name: üèóÔ∏è Build
        run: yarn run pages:build

      - name: 'Deploy release'
        if: ${{ steps.extract_branch.outputs.branch_name == '' }}
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy --project-name "${{ env.CF_PROJECT_NAME }}" dist

      - name: Deploy ${{ steps.extract_branch.outputs.branch_name }} (PR)
        if: ${{ steps.extract_branch.outputs.branch_name != '' }}
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy --project-name "${{ env.CF_PROJECT_NAME }}" dist --branch "${{ steps.extract_branch.outputs.branch_name }}" | tee output.log
          postCommands: |
            sed < output.log -n 's#.*Take a peek over at \(.*\)$#specific_url=\1#p' >> $GITHUB_OUTPUT
        id: deploy

      - name: Create commit comment
        uses: mshick/add-pr-comment@v2
        if: ${{ steps.extract_branch.outputs.branch_name != '' }}
        with:
          message: |
            ### Deployed with **Cloudflare Pages** :cloud: :rocket: :ok:
            - **URL**: [${{ steps.extract_branch.outputs.url }}](${{ steps.extract_branch.outputs.url }})
            - **Specific**: [${{ steps.deploy.outputs.specific_url }}](${{ steps.deploy.outputs.specific_url }})
